/* Generated by Yosys 0.27+20 (git sha1 23826e515, clang 10.0.0-4ubuntu1 -fPIC -Os) */
//module Disp_Cmp #(parameter WIDTH_SR = 93)(i_data_C1, i_data_D1, i_data_C2, i_data_D2, o_data_C, o_data_D, i_CLK_x, i_RST_x, i_TFEn, i_EN_SR, i_SI, o_CLK_x, o_RST_x, o_TFEn, o_EN_SR, o_SI);
module Stereo_Match(i_clk, i_rst, i_dato_L, i_dato_R, i_dval, i_Tresh_LRCC, o_dval, o_dato, i_CLK_x, i_RST_x, i_TFEn, i_EN_SR, i_SI, o_CLK_x, o_RST_x, o_TFEn, o_EN_SR, o_SI);
  input [6:0] i_Tresh_LRCC;
  wire [6:0] i_Tresh_LRCC;
  input i_clk;
  wire i_clk;
  input [7:0] i_dato_L;
  wire [7:0] i_dato_L;
  input [7:0] i_dato_R;
  wire [7:0] i_dato_R;
  input i_dval;
  wire i_dval;
  input i_rst;
  wire i_rst;
  output [6:0] o_dato;
  wire [6:0] o_dato;
  output o_dval;
  wire o_dval;
  wire [23:0] s_data_census_left_h;
  wire [23:0] s_data_census_left_l;
  wire [23:0] s_data_census_rigth_h;
  wire [23:0] s_data_census_rigth_l;
  wire [6:0] s_disp_l;
  wire [6:0] s_disp_r;
  wire s_val_census;
  wire s_val_census_lefth;
  wire s_val_census_rigth;
  wire s_val_shd;
  
  
  
  input i_CLK_x;//yeni
  wire i_CLK_x;//yeni
  input i_RST_x; //yeni
  wire i_RST_x; //yeni
  input i_TFEn; //yeni
  wire i_TFEn; //yeni
  input i_EN_SR; //yeni
  wire i_EN_SR; //yeni
  input i_SI; //yeni
  wire i_SI; //yeni
  output o_CLK_x//yeni
  wire o_CLK_x//yeni
  output o_RST_x//yeni
  wire o_RST_x//yeni
  output o_TFEn//yeni
  wire o_TFEn//yeni
  output o_EN_SR//yeni
  wire o_EN_SR//yeni
  output o_SI//yeni
  wire o_SI//yeni
  
  wire injector_i_CLK_x; //yeni
  wire injector_i_RST_x; //yeni
  wire injector_i_TFEn; //yeni
  wire injector_i_EN_SR; //yeni
  wire injector_i_SI; //yeni
  
  wire injector_o_CLK_x; //yeni
  wire injector_o_RST_x; //yeni
  wire injector_o_TFEn; //yeni
  wire injector_o_EN_SR; //yeni
  wire injector_o_SI; //yeni
  
  assign injector_i_CLK_x = i_CLK_x;//yeni
  assign injector_i_RST_x = i_RST_x;//yeni
  assign injector_i_TFEn = i_TFEn;//yeni
  assign injector_i_EN_SR = i_EN_SR;//yeni
  assign injector_i_SI = i_SI;//yeni
  
  
  assign injector_o_CLK_x = o_CLK_x;//yeni
  assign injector_o_RST_x = o_RST_x;//yeni
  assign injector_o_TFEn = o_TFEn;//yeni
  assign injector_o_EN_SR = o_EN_SR;//yeni
  assign injector_o_SI = o_SI;//yeni
  
  
  
  
  
  
 
  assign s_val_census = s_val_census_rigth & s_val_census_lefth;
  
  assign s_val_census = s_val_census_rigth & s_val_census_lefth;
  census_transform_7_13_450_8 census_left (
    .i_clk(i_clk),
    .i_data(i_dato_L),
    .i_dval(i_dval),
    .i_rst(i_rst),
    .o_data_h(s_data_census_left_h),
    .o_data_l(s_data_census_left_l),
    .o_dval(s_val_census_lefth)
  );
  census_transform_7_13_450_8 census_rigth (
    .i_clk(i_clk),
    .i_data(i_dato_R),
    .i_dval(i_dval),
    .i_rst(i_rst),
    .o_data_h(s_data_census_rigth_h),
    .o_data_l(s_data_census_rigth_l),
    .o_dval(s_val_census_rigth)
  );
  lrcc_64 lrcc (
    .i_clk(i_clk),
    .i_data_l(s_disp_l),
    .i_data_r(s_disp_r),
    .i_dval(s_val_shd),
    .i_rst(i_rst),
    .i_tresh(i_Tresh_LRCC),
    .o_data_lrcc(o_dato),
    .o_dval(o_dval)
  );
  shd_13_450_64_7 shd (
    .i_clk(i_clk),
    .i_data_lh(s_data_census_left_h),
    .i_data_ll(s_data_census_left_l),
    .i_data_rh(s_data_census_rigth_h),
    .i_data_rl(s_data_census_rigth_l),
    .i_dval(s_val_census),
    .i_rst(i_rst),
    .o_data_l(s_disp_l),
    .o_data_r(s_disp_r),
    .o_dval(s_val_shd)
	.SDI(injector_SDI), //yeni
    .A_clk(injector_A_clk), //yeni
    .special_reset(injector_special_reset) //yeni
	.i_CLK_x(injector_i_CLK_x),//yeni
	.i_RST_x(injector_i_RST_x),//yeni
	.i_TFEn(injector_i_TFEn),//yeni
	.i_EN_SR(injector_i_EN_SR),//yeni
	.i_SI(injector_i_SI),//yeni
	.o_CLK_x(injector_o_CLK_x),//yeni
	.o_RST_x(injector_o_RST_x),//yeni
	.o_TFEn(injector_o_TFEn),//yeni
	.o_EN_SR(injector_o_EN_SR),//yeni
	.o_SI(injector_o_SI)//yeni
  );
endmodule

module census_transform_7_13_450_8(i_clk, i_rst, i_data, i_dval, o_dval, o_data_l, o_data_h);
  wire ghdl_gen_000_;
  wire ghdl_gen_001_;
  wire ghdl_gen_002_;
  wire ghdl_gen_003_;
  wire ghdl_gen_004_;
  wire ghdl_gen_005_;
  wire ghdl_gen_006_;
  wire ghdl_gen_007_;
  wire ghdl_gen_008_;
  wire ghdl_gen_009_;
  wire ghdl_gen_010_;
  wire ghdl_gen_011_;
  wire ghdl_gen_012_;
  wire ghdl_gen_013_;
  wire [23:0] ghdl_gen_014_;
  wire ghdl_gen_015_;
  wire [31:0] ghdl_gen_016_;
  wire ghdl_gen_017_;
  wire ghdl_gen_018_;
  wire ghdl_gen_019_;
  wire [31:0] ghdl_gen_020_;
  wire [71999:0] ghdl_gen_021_;
  wire ghdl_gen_022_;
  wire ghdl_gen_023_;
  wire ghdl_gen_024_;
  wire ghdl_gen_025_;
  wire ghdl_gen_026_;
  wire ghdl_gen_027_;
  wire ghdl_gen_028_;
  wire ghdl_gen_029_;
  wire ghdl_gen_030_;
  wire ghdl_gen_031_;
  wire ghdl_gen_032_;
  wire ghdl_gen_033_;
  wire ghdl_gen_034_;
  wire ghdl_gen_035_;
  wire ghdl_gen_036_;
  wire ghdl_gen_037_;
  wire ghdl_gen_038_;
  wire ghdl_gen_039_;
  wire ghdl_gen_040_;
  wire ghdl_gen_041_;
  wire ghdl_gen_042_;
  wire ghdl_gen_043_;
  wire ghdl_gen_044_;
  wire ghdl_gen_045_;
  wire ghdl_gen_046_;
  wire ghdl_gen_047_;
  wire ghdl_gen_048_;
  wire ghdl_gen_049_;
  wire ghdl_gen_050_;
  wire ghdl_gen_051_;
  wire ghdl_gen_052_;
  wire ghdl_gen_053_;
  wire ghdl_gen_054_;
  wire ghdl_gen_055_;
  wire ghdl_gen_056_;
  wire ghdl_gen_057_;
  wire ghdl_gen_058_;
  wire ghdl_gen_059_;
  wire ghdl_gen_060_;
  wire ghdl_gen_061_;
  wire ghdl_gen_062_;
  wire ghdl_gen_063_;
  wire ghdl_gen_064_;
  wire ghdl_gen_065_;
  wire ghdl_gen_066_;
  wire ghdl_gen_067_;
  wire ghdl_gen_068_;
  wire ghdl_gen_069_;
  wire [23:0] ghdl_gen_070_;
  wire ghdl_gen_071_;
  wire ghdl_gen_072_;
  wire ghdl_gen_073_;
  wire ghdl_gen_074_;
  wire ghdl_gen_075_;
  wire ghdl_gen_076_;
  wire ghdl_gen_077_;
  wire ghdl_gen_078_;
  wire ghdl_gen_079_;
  wire ghdl_gen_080_;
  wire ghdl_gen_081_;
  wire ghdl_gen_082_;
  wire ghdl_gen_083_;
  wire ghdl_gen_084_;
  wire ghdl_gen_085_;
  wire ghdl_gen_086_;
  wire ghdl_gen_087_;
  wire ghdl_gen_088_;
  wire ghdl_gen_089_;
  wire ghdl_gen_090_;
  wire ghdl_gen_091_;
  wire ghdl_gen_092_;
  wire ghdl_gen_093_;
  wire ghdl_gen_094_;
  wire ghdl_gen_095_;
  wire ghdl_gen_096_;
  wire ghdl_gen_097_;
  wire ghdl_gen_098_;
  wire ghdl_gen_099_;
  wire ghdl_gen_100_;
  wire ghdl_gen_101_;
  wire ghdl_gen_102_;
  wire ghdl_gen_103_;
  wire ghdl_gen_104_;
  wire [23:0] \9027.data_tmp ;
  wire [23:0] \9185.data_tmp ;
  reg [31:0] \9343.counter  = 32'd2147483648;
  input i_clk;
  wire i_clk;
  input [7:0] i_data;
  wire [7:0] i_data;
  input i_dval;
  wire i_dval;
  input i_rst;
  wire i_rst;
  output [23:0] o_data_h;
  reg [23:0] o_data_h;
  output [23:0] o_data_l;
  reg [23:0] o_data_l;
  output o_dval;
  reg o_dval;
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  reg [71999:0] slide_window = 72000'
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) slide_window <= 72000';
    else if (i_dval) slide_window <= ghdl_gen_021_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) o_data_l <= 24'h000000;
    else if (i_dval) o_data_l <= ghdl_gen_070_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) o_data_h <= 24'h000000;
    else if (i_dval) o_data_h <= ghdl_gen_014_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) \9343.counter  <= 32'd0;
    else if (ghdl_gen_019_) \9343.counter  <= ghdl_gen_020_;
  assign ghdl_gen_022_ = slide_window[71991:71984] < slide_window[61175:61168];
  assign ghdl_gen_023_ = ghdl_gen_022_ ? 1'h0 : 1'h1;
  assign ghdl_gen_024_ = slide_window[71975:71968] < slide_window[61175:61168];
  assign ghdl_gen_025_ = ghdl_gen_024_ ? 1'h0 : 1'h1;
  assign ghdl_gen_026_ = slide_window[71959:71952] < slide_window[61175:61168];
  assign ghdl_gen_027_ = ghdl_gen_026_ ? 1'h0 : 1'h1;
  assign ghdl_gen_028_ = slide_window[64791:64784] < slide_window[61175:61168];
  assign ghdl_gen_029_ = ghdl_gen_028_ ? 1'h0 : 1'h1;
  assign ghdl_gen_030_ = slide_window[64775:64768] < slide_window[61175:61168];
  assign ghdl_gen_031_ = ghdl_gen_030_ ? 1'h0 : 1'h1;
  assign ghdl_gen_032_ = slide_window[64759:64752] < slide_window[61175:61168];
  assign ghdl_gen_033_ = ghdl_gen_032_ ? 1'h0 : 1'h1;
  assign ghdl_gen_034_ = slide_window[57591:57584] < slide_window[61175:61168];
  assign ghdl_gen_035_ = ghdl_gen_034_ ? 1'h0 : 1'h1;
  assign ghdl_gen_036_ = slide_window[57575:57568] < slide_window[61175:61168];
  assign ghdl_gen_037_ = ghdl_gen_036_ ? 1'h0 : 1'h1;
  assign ghdl_gen_038_ = slide_window[57559:57552] < slide_window[61175:61168];
  assign ghdl_gen_039_ = ghdl_gen_038_ ? 1'h0 : 1'h1;
  assign ghdl_gen_040_ = slide_window[50391:50384] < slide_window[61175:61168];
  assign ghdl_gen_041_ = ghdl_gen_040_ ? 1'h0 : 1'h1;
  assign ghdl_gen_042_ = slide_window[50375:50368] < slide_window[61175:61168];
  assign ghdl_gen_043_ = ghdl_gen_042_ ? 1'h0 : 1'h1;
  assign ghdl_gen_044_ = slide_window[50359:50352] < slide_window[61175:61168];
  assign ghdl_gen_045_ = ghdl_gen_044_ ? 1'h0 : 1'h1;
  assign ghdl_gen_046_ = slide_window[68399:68392] < slide_window[61175:61168];
  assign ghdl_gen_047_ = ghdl_gen_046_ ? 1'h0 : 1'h1;
  assign ghdl_gen_048_ = slide_window[68383:68376] < slide_window[61175:61168];
  assign ghdl_gen_049_ = ghdl_gen_048_ ? 1'h0 : 1'h1;
  assign ghdl_gen_050_ = slide_window[68367:68360] < slide_window[61175:61168];
  assign ghdl_gen_051_ = ghdl_gen_050_ ? 1'h0 : 1'h1;
  assign ghdl_gen_052_ = slide_window[68351:68344] < slide_window[61175:61168];
  assign ghdl_gen_053_ = ghdl_gen_052_ ? 1'h0 : 1'h1;
  assign ghdl_gen_054_ = slide_window[61199:61192] < slide_window[61175:61168];
  assign ghdl_gen_055_ = ghdl_gen_054_ ? 1'h0 : 1'h1;
  assign ghdl_gen_056_ = slide_window[61183:61176] < slide_window[61175:61168];
  assign ghdl_gen_057_ = ghdl_gen_056_ ? 1'h0 : 1'h1;
  assign ghdl_gen_058_ = slide_window[61167:61160] < slide_window[61175:61168];
  assign ghdl_gen_059_ = ghdl_gen_058_ ? 1'h0 : 1'h1;
  assign ghdl_gen_060_ = slide_window[61151:61144] < slide_window[61175:61168];
  assign ghdl_gen_061_ = ghdl_gen_060_ ? 1'h0 : 1'h1;
  assign ghdl_gen_062_ = slide_window[53999:53992] < slide_window[61175:61168];
  assign ghdl_gen_063_ = ghdl_gen_062_ ? 1'h0 : 1'h1;
  assign ghdl_gen_064_ = slide_window[53983:53976] < slide_window[61175:61168];
  assign ghdl_gen_065_ = ghdl_gen_064_ ? 1'h0 : 1'h1;
  assign ghdl_gen_066_ = slide_window[53967:53960] < slide_window[61175:61168];
  assign ghdl_gen_067_ = ghdl_gen_066_ ? 1'h0 : 1'h1;
  assign ghdl_gen_068_ = slide_window[53951:53944] < slide_window[61175:61168];
  assign ghdl_gen_069_ = ghdl_gen_068_ ? 1'h0 : 1'h1;
  assign ghdl_gen_070_ = i_dval ? { ghdl_gen_023_, ghdl_gen_025_, ghdl_gen_027_, ghdl_gen_047_, ghdl_gen_049_, ghdl_gen_051_, ghdl_gen_053_, ghdl_gen_029_, ghdl_gen_031_, ghdl_gen_033_, ghdl_gen_055_, ghdl_gen_057_, ghdl_gen_059_, ghdl_gen_061_, ghdl_gen_035_, ghdl_gen_037_, ghdl_gen_039_, ghdl_gen_063_, ghdl_gen_065_, ghdl_gen_067_, ghdl_gen_069_, ghdl_gen_041_, ghdl_gen_043_, ghdl_gen_045_ } : 24'hxxxxxx;
  assign ghdl_gen_071_ = slide_window[25191:25184] < slide_window[14375:14368];
  assign ghdl_gen_072_ = ghdl_gen_071_ ? 1'h0 : 1'h1;
  assign ghdl_gen_073_ = slide_window[25175:25168] < slide_window[14375:14368];
  assign ghdl_gen_074_ = ghdl_gen_073_ ? 1'h0 : 1'h1;
  assign ghdl_gen_075_ = slide_window[25159:25152] < slide_window[14375:14368];
  assign ghdl_gen_076_ = ghdl_gen_075_ ? 1'h0 : 1'h1;
  assign ghdl_gen_077_ = slide_window[17991:17984] < slide_window[14375:14368];
  assign ghdl_gen_078_ = ghdl_gen_077_ ? 1'h0 : 1'h1;
  assign ghdl_gen_079_ = slide_window[17975:17968] < slide_window[14375:14368];
  assign ghdl_gen_080_ = ghdl_gen_079_ ? 1'h0 : 1'h1;
  assign ghdl_gen_081_ = slide_window[17959:17952] < slide_window[14375:14368];
  assign ghdl_gen_082_ = ghdl_gen_081_ ? 1'h0 : 1'h1;
  assign ghdl_gen_083_ = slide_window[10791:10784] < slide_window[14375:14368];
  assign ghdl_gen_084_ = ghdl_gen_083_ ? 1'h0 : 1'h1;
  assign ghdl_gen_085_ = slide_window[10775:10768] < slide_window[14375:14368];
  assign ghdl_gen_086_ = ghdl_gen_085_ ? 1'h0 : 1'h1;
  assign ghdl_gen_087_ = slide_window[10759:10752] < slide_window[14375:14368];
  assign ghdl_gen_088_ = ghdl_gen_087_ ? 1'h0 : 1'h1;
  assign ghdl_gen_089_ = slide_window[3591:3584] < slide_window[14375:14368];
  assign ghdl_gen_090_ = ghdl_gen_089_ ? 1'h0 : 1'h1;
  assign ghdl_gen_091_ = slide_window[3575:3568] < slide_window[14375:14368];
  assign ghdl_gen_092_ = ghdl_gen_091_ ? 1'h0 : 1'h1;
  assign ghdl_gen_093_ = slide_window[3559:3552] < slide_window[14375:14368];
  assign ghdl_gen_094_ = ghdl_gen_093_ ? 1'h0 : 1'h1;
  assign ghdl_gen_095_ = slide_window[21599:21592] < slide_window[14375:14368];
  assign ghdl_gen_096_ = ghdl_gen_095_ ? 1'h0 : 1'h1;
  assign ghdl_gen_097_ = slide_window[21583:21576] < slide_window[14375:14368];
  assign ghdl_gen_098_ = ghdl_gen_097_ ? 1'h0 : 1'h1;
  assign ghdl_gen_099_ = slide_window[21567:21560] < slide_window[14375:14368];
  assign ghdl_gen_100_ = ghdl_gen_099_ ? 1'h0 : 1'h1;
  assign ghdl_gen_101_ = slide_window[21551:21544] < slide_window[14375:14368];
  assign ghdl_gen_102_ = ghdl_gen_101_ ? 1'h0 : 1'h1;
  assign ghdl_gen_103_ = slide_window[14399:14392] < slide_window[14375:14368];
  assign ghdl_gen_104_ = ghdl_gen_103_ ? 1'h0 : 1'h1;
  assign ghdl_gen_000_ = slide_window[14383:14376] < slide_window[14375:14368];
  assign ghdl_gen_001_ = ghdl_gen_000_ ? 1'h0 : 1'h1;
  assign ghdl_gen_002_ = slide_window[14367:14360] < slide_window[14375:14368];
  assign ghdl_gen_003_ = ghdl_gen_002_ ? 1'h0 : 1'h1;
  assign ghdl_gen_004_ = slide_window[14351:14344] < slide_window[14375:14368];
  assign ghdl_gen_005_ = ghdl_gen_004_ ? 1'h0 : 1'h1;
  assign ghdl_gen_006_ = slide_window[7199:7192] < slide_window[14375:14368];
  assign ghdl_gen_007_ = ghdl_gen_006_ ? 1'h0 : 1'h1;
  assign ghdl_gen_008_ = slide_window[7183:7176] < slide_window[14375:14368];
  assign ghdl_gen_009_ = ghdl_gen_008_ ? 1'h0 : 1'h1;
  assign ghdl_gen_010_ = slide_window[7167:7160] < slide_window[14375:14368];
  assign ghdl_gen_011_ = ghdl_gen_010_ ? 1'h0 : 1'h1;
  assign ghdl_gen_012_ = slide_window[7151:7144] < slide_window[14375:14368];
  assign ghdl_gen_013_ = ghdl_gen_012_ ? 1'h0 : 1'h1;
  assign ghdl_gen_014_ = i_dval ? { ghdl_gen_072_, ghdl_gen_074_, ghdl_gen_076_, ghdl_gen_096_, ghdl_gen_098_, ghdl_gen_100_, ghdl_gen_102_, ghdl_gen_078_, ghdl_gen_080_, ghdl_gen_082_, ghdl_gen_104_, ghdl_gen_001_, ghdl_gen_003_, ghdl_gen_005_, ghdl_gen_084_, ghdl_gen_086_, ghdl_gen_088_, ghdl_gen_007_, ghdl_gen_009_, ghdl_gen_011_, ghdl_gen_013_, ghdl_gen_090_, ghdl_gen_092_, ghdl_gen_094_ } : 24'hxxxxxx;
  assign ghdl_gen_015_ = $signed(\9343.counter ) < $signed(32'd1354);
  assign ghdl_gen_016_ = \9343.counter  + 32'd1;
  assign ghdl_gen_017_ = ghdl_gen_015_ ? 1'h0 : 1'h1;
  assign ghdl_gen_018_ = i_dval ? ghdl_gen_017_ : 1'h0;
  assign ghdl_gen_019_ = i_dval & ghdl_gen_015_;
  assign ghdl_gen_020_ = ghdl_gen_019_ ? ghdl_gen_016_ : 32'hxxxxxxxx;
  assign ghdl_gen_021_ = i_dval ? { i_data, slide_window[71999:8] } : 72000';
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) o_dval <= 1'h0;
    else o_dval <= ghdl_gen_018_;
  assign \9027.data_tmp  = o_data_l;
  assign \9185.data_tmp  = o_data_h;
endmodule

module disp_cmp_13_64_7(i_data_c1, i_data_d1, i_data_c2, i_data_d2, o_data_c, o_data_d);
  wire ghdl_gen_0_;
  input [11:0] i_data_c1;
  wire [11:0] i_data_c1;
  input [11:0] i_data_c2;
  wire [11:0] i_data_c2;
  input [6:0] i_data_d1;
  wire [6:0] i_data_d1;
  input [6:0] i_data_d2;
  wire [6:0] i_data_d2;
  output [11:0] o_data_c;
  wire [11:0] o_data_c;
  output [6:0] o_data_d;
  wire [6:0] o_data_d;
  wire [12:0] s_c1;
  wire [12:0] s_c2;
  assign o_data_d = ghdl_gen_0_ ? i_data_d2 : i_data_d1;
  assign ghdl_gen_0_ = $signed({ 20'h00000, i_data_c2 }) < $signed({ 20'h00000, i_data_c1 });
  assign o_data_c = ghdl_gen_0_ ? i_data_c2 : i_data_c1;
  assign s_c1 = { 1'h0, i_data_c1 };
  assign s_c2 = { 1'h0, i_data_c2 };
endmodule
module Disp_Cmp #(parameter WIDTH_SR = 93)(i_data_C1, i_data_D1, i_data_C2, i_data_D2, o_data_C, o_data_D, i_CLK_x, i_RST_x, i_TFEn, i_EN_SR, i_SI, o_CLK_x, o_RST_x, o_TFEn, o_EN_SR, o_SI);
  input i_SI;
  input i_EN_SR;
  input i_TFEn;
  input i_CLK_x;
  input i_RST_x;
  output o_SI;
  output o_EN_SR;
  output o_TFEn;
  output o_CLK_x;
  output o_RST_x;
  wire [WIDTH_SR-1:0] o_SR;
  assign o_CLK_x = i_CLK_x;
  assign o_RST_x = i_RST_x;
  assign o_TFEn = i_TFEn;
  assign o_EN_SR = i_EN_SR;
  assign o_SI = o_SR[0];
  wire temp__000_;
  wire temp__001_;
  wire temp__002_;
  wire temp__003_;
  wire temp__004_;
  wire temp__005_;
  wire temp__006_;
  wire temp__007_;
  wire temp__008_;
  wire temp__009_;
  wire temp__010_;
  wire temp__011_;
  wire temp__012_;
  wire temp__013_;
  wire temp__014_;
  wire temp__015_;
  wire temp__016_;
  wire temp__017_;
  wire temp__018_;
  wire temp__019_;
  wire temp__020_;
  wire temp__021_;
  wire temp__022_;
  wire temp__023_;
  wire temp__024_;
  wire temp__025_;
  wire temp__026_;
  wire temp__027_;
  wire temp__028_;
  wire temp__029_;
  wire temp__030_;
  wire temp__031_;
  wire temp__032_;
  wire temp__033_;
  wire temp__034_;
  wire temp__035_;
  wire temp__036_;
  wire temp__037_;
  wire temp__038_;
  wire temp__039_;
  wire temp__040_;
  wire temp__041_;
  wire temp__042_;
  wire temp__043_;
  wire temp__044_;
  wire temp__045_;
  wire temp__046_;
  wire temp__047_;
  wire temp__048_;
  wire temp__049_;
  wire temp__050_;
  wire temp__051_;
  wire temp__052_;
  wire temp__053_;
  wire temp__054_;
  wire temp__055_;
  wire temp__056_;
  wire temp__057_;
  wire temp__058_;
  wire temp__059_;
  wire temp__060_;
  wire temp__061_;
  wire temp__062_;
  wire temp__063_;
  wire temp__064_;
  wire temp__065_;
  wire temp__066_;
  wire temp__067_;
  wire temp__068_;
  wire temp__069_;
  wire temp__070_;
  wire temp__071_;
  wire [11:0] temp_i_data_C1;
  wire [11:0] temp_i_data_C2;
  wire [6:0] temp_i_data_D1;
  wire [6:0] temp_i_data_D2;
  wire [11:0] temp_o_data_C;
  wire [6:0] temp_o_data_D;
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  input [11:0] i_data_C1;
  wire [11:0] i_data_C1;
  input [11:0] i_data_C2;
  wire [11:0] i_data_C2;
  input [6:0] i_data_D1;
  wire [6:0] i_data_D1;
  input [6:0] i_data_D2;
  wire [6:0] i_data_D2;
  output [11:0] o_data_C;
  wire [11:0] o_data_C;
  output [6:0] o_data_D;
  wire [6:0] o_data_D;
  assign temp__000_ = _027_ & _030_;
  assign temp__006_ = _000_ & _001_;
  assign temp__009_ = _006_ & _007_;
  assign temp__052_ = _009_ & _008_;
  assign temp_o_data_C[0] = _053_ ? i_data_C1[0] : i_data_C2[0];
  assign temp_o_data_C[1] = _053_ ? i_data_C1[1] : i_data_C2[1];
  assign temp_o_data_C[2] = _053_ ? i_data_C1[2] : i_data_C2[2];
  assign temp_o_data_C[3] = _053_ ? i_data_C1[3] : i_data_C2[3];
  assign temp_o_data_C[4] = _053_ ? i_data_C1[4] : i_data_C2[4];
  assign temp_o_data_C[5] = _053_ ? i_data_C1[5] : i_data_C2[5];
  assign temp_o_data_C[6] = _053_ ? i_data_C1[6] : i_data_C2[6];
  assign temp_o_data_C[7] = _053_ ? i_data_C1[7] : i_data_C2[7];
  assign temp_o_data_C[8] = _053_ ? i_data_C1[8] : i_data_C2[8];
  assign temp_o_data_C[9] = _053_ ? i_data_C1[9] : i_data_C2[9];
  assign temp_o_data_C[10] = _053_ ? i_data_C1[10] : i_data_C2[10];
  assign temp_o_data_C[11] = _053_ ? i_data_C1[11] : i_data_C2[11];
  assign temp_o_data_D[0] = _053_ ? i_data_D1[0] : i_data_D2[0];
  assign temp_o_data_D[1] = _053_ ? i_data_D1[1] : i_data_D2[1];
  assign temp_o_data_D[2] = _053_ ? i_data_D1[2] : i_data_D2[2];
  assign temp_o_data_D[3] = _053_ ? i_data_D1[3] : i_data_D2[3];
  assign temp_o_data_D[4] = _053_ ? i_data_D1[4] : i_data_D2[4];
  assign temp_o_data_D[5] = _053_ ? i_data_D1[5] : i_data_D2[5];
  assign temp_o_data_D[6] = _053_ ? i_data_D1[6] : i_data_D2[6];
  assign temp__051_ = ~_023_;
  assign temp__010_ = ~i_data_C2[0];
  assign temp__013_ = ~i_data_C2[1];
  assign temp__014_ = ~i_data_C2[2];
  assign temp__015_ = ~i_data_C2[3];
  assign temp__016_ = ~i_data_C2[4];
  assign temp__017_ = ~i_data_C2[5];
  assign temp__018_ = ~i_data_C2[6];
  assign temp__019_ = ~i_data_C2[7];
  assign temp__020_ = ~i_data_C2[8];
  assign temp__021_ = ~i_data_C2[9];
  assign temp__011_ = ~i_data_C2[10];
  assign temp__012_ = ~i_data_C2[11];
  assign temp__053_ = _051_ | _052_;
  assign temp__027_ = i_data_C1[0] ^ _010_;
  assign temp__030_ = i_data_C1[1] ^ _013_;
  assign temp__031_ = i_data_C1[2] ^ _014_;
  assign temp__032_ = i_data_C1[3] ^ _015_;
  assign temp__033_ = i_data_C1[4] ^ _016_;
  assign temp__034_ = i_data_C1[5] ^ _017_;
  assign temp__035_ = i_data_C1[6] ^ _018_;
  assign temp__036_ = i_data_C1[7] ^ _019_;
  assign temp__037_ = i_data_C1[8] ^ _020_;
  assign temp__038_ = i_data_C1[9] ^ _021_;
  assign temp__028_ = i_data_C1[10] ^ _011_;
  assign temp__029_ = i_data_C1[11] ^ _012_;
  assign temp__039_ = i_data_C1[0] & _010_;
  assign temp__042_ = i_data_C1[1] & _013_;
  assign temp__043_ = i_data_C1[2] & _014_;
  assign temp__044_ = i_data_C1[3] & _015_;
  assign temp__045_ = i_data_C1[4] & _016_;
  assign temp__046_ = i_data_C1[5] & _017_;
  assign temp__047_ = i_data_C1[6] & _018_;
  assign temp__048_ = i_data_C1[7] & _019_;
  assign temp__049_ = i_data_C1[8] & _020_;
  assign temp__050_ = i_data_C1[9] & _021_;
  assign temp__040_ = i_data_C1[10] & _011_;
  assign temp__041_ = i_data_C1[11] & _012_;
  assign temp__054_ = _030_ & _022_;
  assign temp__055_ = _032_ & _043_;
  assign temp__056_ = _034_ & _045_;
  assign temp__057_ = _036_ & _047_;
  assign temp__058_ = _038_ & _049_;
  assign temp__059_ = _029_ & _040_;
  assign temp__060_ = _001_ & _024_;
  assign temp__061_ = _003_ & _066_;
  assign temp__062_ = _005_ & _068_;
  assign temp__063_ = _007_ & _025_;
  assign temp__001_ = _032_ & _031_;
  assign temp__002_ = _034_ & _033_;
  assign temp__003_ = _036_ & _035_;
  assign temp__004_ = _038_ & _037_;
  assign temp__005_ = _029_ & _028_;
  assign temp__007_ = _003_ & _002_;
  assign temp__008_ = _005_ & _004_;
  assign temp__064_ = _008_ & _026_;
  assign temp__022_ = _039_ | _027_;
  assign temp__024_ = _042_ | _054_;
  assign temp__065_ = _044_ | _055_;
  assign temp__066_ = _046_ | _056_;
  assign temp__067_ = _048_ | _057_;
  assign temp__068_ = _050_ | _058_;
  assign temp__069_ = _041_ | _059_;
  assign temp__025_ = _065_ | _060_;
  assign temp__070_ = _067_ | _061_;
  assign temp__071_ = _069_ | _062_;
  assign temp__026_ = _070_ | _063_;
  assign temp__023_ = _071_ | _064_;
super_sabouter #(.WIDTH(12)) SS0(
                  .i_sig(temp_i_data_C1),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[11:0]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(i_data_C1)
                  );
super_sabouter #(.WIDTH(12)) SS1(
                  .i_sig(temp_i_data_C2),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[23:12]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(i_data_C2)
                  );
super_sabouter #(.WIDTH(7)) SS2(
                  .i_sig(temp_i_data_D1),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[30:24]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(i_data_D1)
                  );
super_sabouter #(.WIDTH(7)) SS3(
                  .i_sig(temp_i_data_D2),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[37:31]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(i_data_D2)
                  );
shift_register #(.WIDTH(WIDTH_SR)) SR(
                    .i_CLK(i_CLK_x),
                    .i_RST(i_RST_x),
                    .i_EN(i_EN_SR),
                    .i_SI(i_SI),
                    .o_DATA(o_SR)
                    );
super_sabouter #(.WIDTH(1)) SS0(
                  .i_sig(temp__000_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[0:0]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_000_)
                  );
super_sabouter #(.WIDTH(1)) SS1(
                  .i_sig(temp__001_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[1:1]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_001_)
                  );
super_sabouter #(.WIDTH(1)) SS2(
                  .i_sig(temp__002_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[2:2]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_002_)
                  );
super_sabouter #(.WIDTH(1)) SS3(
                  .i_sig(temp__003_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[3:3]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_003_)
                  );
super_sabouter #(.WIDTH(1)) SS4(
                  .i_sig(temp__004_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[4:4]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_004_)
                  );
super_sabouter #(.WIDTH(1)) SS5(
                  .i_sig(temp__005_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[5:5]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_005_)
                  );
super_sabouter #(.WIDTH(1)) SS6(
                  .i_sig(temp__006_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[6:6]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_006_)
                  );
super_sabouter #(.WIDTH(1)) SS7(
                  .i_sig(temp__007_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[7:7]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_007_)
                  );
super_sabouter #(.WIDTH(1)) SS8(
                  .i_sig(temp__008_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[8:8]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_008_)
                  );
super_sabouter #(.WIDTH(1)) SS9(
                  .i_sig(temp__009_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[9:9]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_009_)
                  );
super_sabouter #(.WIDTH(1)) SS10(
                  .i_sig(temp__010_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[10:10]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_010_)
                  );
super_sabouter #(.WIDTH(1)) SS11(
                  .i_sig(temp__011_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[11:11]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_011_)
                  );
super_sabouter #(.WIDTH(1)) SS12(
                  .i_sig(temp__012_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[12:12]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_012_)
                  );
super_sabouter #(.WIDTH(1)) SS13(
                  .i_sig(temp__013_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[13:13]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_013_)
                  );
super_sabouter #(.WIDTH(1)) SS14(
                  .i_sig(temp__014_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[14:14]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_014_)
                  );
super_sabouter #(.WIDTH(1)) SS15(
                  .i_sig(temp__015_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[15:15]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_015_)
                  );
super_sabouter #(.WIDTH(1)) SS16(
                  .i_sig(temp__016_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[16:16]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_016_)
                  );
super_sabouter #(.WIDTH(1)) SS17(
                  .i_sig(temp__017_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[17:17]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_017_)
                  );
super_sabouter #(.WIDTH(1)) SS18(
                  .i_sig(temp__018_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[18:18]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_018_)
                  );
super_sabouter #(.WIDTH(1)) SS19(
                  .i_sig(temp__019_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[19:19]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_019_)
                  );
super_sabouter #(.WIDTH(1)) SS20(
                  .i_sig(temp__020_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[20:20]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_020_)
                  );
super_sabouter #(.WIDTH(1)) SS21(
                  .i_sig(temp__021_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[21:21]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_021_)
                  );
super_sabouter #(.WIDTH(1)) SS22(
                  .i_sig(temp__022_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[22:22]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_022_)
                  );
super_sabouter #(.WIDTH(1)) SS23(
                  .i_sig(temp__023_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[23:23]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_023_)
                  );
super_sabouter #(.WIDTH(1)) SS24(
                  .i_sig(temp__024_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[24:24]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_024_)
                  );
super_sabouter #(.WIDTH(1)) SS25(
                  .i_sig(temp__025_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[25:25]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_025_)
                  );
super_sabouter #(.WIDTH(1)) SS26(
                  .i_sig(temp__026_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[26:26]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_026_)
                  );
super_sabouter #(.WIDTH(1)) SS27(
                  .i_sig(temp__027_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[27:27]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_027_)
                  );
super_sabouter #(.WIDTH(1)) SS28(
                  .i_sig(temp__028_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[28:28]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_028_)
                  );
super_sabouter #(.WIDTH(1)) SS29(
                  .i_sig(temp__029_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[29:29]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_029_)
                  );
super_sabouter #(.WIDTH(1)) SS30(
                  .i_sig(temp__030_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[30:30]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_030_)
                  );
super_sabouter #(.WIDTH(1)) SS31(
                  .i_sig(temp__031_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[31:31]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_031_)
                  );
super_sabouter #(.WIDTH(1)) SS32(
                  .i_sig(temp__032_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[32:32]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_032_)
                  );
super_sabouter #(.WIDTH(1)) SS33(
                  .i_sig(temp__033_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[33:33]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_033_)
                  );
super_sabouter #(.WIDTH(1)) SS34(
                  .i_sig(temp__034_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[34:34]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_034_)
                  );
super_sabouter #(.WIDTH(1)) SS35(
                  .i_sig(temp__035_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[35:35]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_035_)
                  );
super_sabouter #(.WIDTH(1)) SS36(
                  .i_sig(temp__036_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[36:36]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_036_)
                  );
super_sabouter #(.WIDTH(1)) SS37(
                  .i_sig(temp__037_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[37:37]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_037_)
                  );
super_sabouter #(.WIDTH(1)) SS38(
                  .i_sig(temp__038_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[38:38]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_038_)
                  );
super_sabouter #(.WIDTH(1)) SS39(
                  .i_sig(temp__039_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[39:39]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_039_)
                  );
super_sabouter #(.WIDTH(1)) SS40(
                  .i_sig(temp__040_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[40:40]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_040_)
                  );
super_sabouter #(.WIDTH(1)) SS41(
                  .i_sig(temp__041_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[41:41]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_041_)
                  );
super_sabouter #(.WIDTH(1)) SS42(
                  .i_sig(temp__042_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[42:42]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_042_)
                  );
super_sabouter #(.WIDTH(1)) SS43(
                  .i_sig(temp__043_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[43:43]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_043_)
                  );
super_sabouter #(.WIDTH(1)) SS44(
                  .i_sig(temp__044_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[44:44]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_044_)
                  );
super_sabouter #(.WIDTH(1)) SS45(
                  .i_sig(temp__045_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[45:45]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_045_)
                  );
super_sabouter #(.WIDTH(1)) SS46(
                  .i_sig(temp__046_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[46:46]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_046_)
                  );
super_sabouter #(.WIDTH(1)) SS47(
                  .i_sig(temp__047_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[47:47]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_047_)
                  );
super_sabouter #(.WIDTH(1)) SS48(
                  .i_sig(temp__048_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[48:48]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_048_)
                  );
super_sabouter #(.WIDTH(1)) SS49(
                  .i_sig(temp__049_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[49:49]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_049_)
                  );
super_sabouter #(.WIDTH(1)) SS50(
                  .i_sig(temp__050_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[50:50]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_050_)
                  );
super_sabouter #(.WIDTH(1)) SS51(
                  .i_sig(temp__051_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[51:51]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_051_)
                  );
super_sabouter #(.WIDTH(1)) SS52(
                  .i_sig(temp__052_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[52:52]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_052_)
                  );
super_sabouter #(.WIDTH(1)) SS53(
                  .i_sig(temp__053_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[53:53]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_053_)
                  );
super_sabouter #(.WIDTH(1)) SS54(
                  .i_sig(temp__054_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[54:54]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_054_)
                  );
super_sabouter #(.WIDTH(1)) SS55(
                  .i_sig(temp__055_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[55:55]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_055_)
                  );
super_sabouter #(.WIDTH(1)) SS56(
                  .i_sig(temp__056_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[56:56]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_056_)
                  );
super_sabouter #(.WIDTH(1)) SS57(
                  .i_sig(temp__057_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[57:57]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_057_)
                  );
super_sabouter #(.WIDTH(1)) SS58(
                  .i_sig(temp__058_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[58:58]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_058_)
                  );
super_sabouter #(.WIDTH(1)) SS59(
                  .i_sig(temp__059_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[59:59]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_059_)
                  );
super_sabouter #(.WIDTH(1)) SS60(
                  .i_sig(temp__060_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[60:60]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_060_)
                  );
super_sabouter #(.WIDTH(1)) SS61(
                  .i_sig(temp__061_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[61:61]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_061_)
                  );
super_sabouter #(.WIDTH(1)) SS62(
                  .i_sig(temp__062_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[62:62]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_062_)
                  );
super_sabouter #(.WIDTH(1)) SS63(
                  .i_sig(temp__063_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[63:63]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_063_)
                  );
super_sabouter #(.WIDTH(1)) SS64(
                  .i_sig(temp__064_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[64:64]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_064_)
                  );
super_sabouter #(.WIDTH(1)) SS65(
                  .i_sig(temp__065_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[65:65]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_065_)
                  );
super_sabouter #(.WIDTH(1)) SS66(
                  .i_sig(temp__066_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[66:66]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_066_)
                  );
super_sabouter #(.WIDTH(1)) SS67(
                  .i_sig(temp__067_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[67:67]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_067_)
                  );
super_sabouter #(.WIDTH(1)) SS68(
                  .i_sig(temp__068_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[68:68]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_068_)
                  );
super_sabouter #(.WIDTH(1)) SS69(
                  .i_sig(temp__069_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[69:69]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_069_)
                  );
super_sabouter #(.WIDTH(1)) SS70(
                  .i_sig(temp__070_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[70:70]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_070_)
                  );
super_sabouter #(.WIDTH(1)) SS71(
                  .i_sig(temp__071_),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[71:71]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(_071_)
                  );
super_sabouter #(.WIDTH(12)) SS72(
                  .i_sig(temp_o_data_C),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[83:72]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(o_data_C)
                  );
super_sabouter #(.WIDTH(7)) SS73(
                  .i_sig(temp_o_data_D),
                  .i_en_super_sabouter(i_TFEn),
                  .i_en_basic_sabouter(o_SR[90:84]),
                  .i_ctrl(o_SR[92:91]),
                  .o_sig(o_data_D)
                  );
shift_register #(.WIDTH(WIDTH_SR)) SR(
                    .i_CLK(i_CLK_x),
                    .i_RST(i_RST_x),
                    .i_EN(i_EN_SR),
                    .i_SI(i_SI),
                    .o_DATA(o_SR)
                    );
endmodule
module lrcc_64(i_clk, i_rst, i_data_l, i_data_r, i_dval, i_tresh, o_dval, o_data_lrcc);
  wire [6:0] ghdl_gen_000_;
  wire [6:0] ghdl_gen_001_;
  wire [6:0] ghdl_gen_002_;
  wire [6:0] ghdl_gen_003_;
  wire [6:0] ghdl_gen_004_;
  wire [6:0] ghdl_gen_005_;
  wire [6:0] ghdl_gen_006_;
  wire [6:0] ghdl_gen_007_;
  wire [6:0] ghdl_gen_008_;
  wire [6:0] ghdl_gen_009_;
  wire [6:0] ghdl_gen_010_;
  wire [6:0] ghdl_gen_011_;
  wire [6:0] ghdl_gen_012_;
  wire [6:0] ghdl_gen_013_;
  wire [6:0] ghdl_gen_014_;
  wire [6:0] ghdl_gen_015_;
  wire [6:0] ghdl_gen_016_;
  wire [6:0] ghdl_gen_017_;
  wire [6:0] ghdl_gen_018_;
  wire [6:0] ghdl_gen_019_;
  wire [6:0] ghdl_gen_020_;
  wire [6:0] ghdl_gen_021_;
  wire [6:0] ghdl_gen_022_;
  wire [6:0] ghdl_gen_023_;
  wire [6:0] ghdl_gen_024_;
  wire [6:0] ghdl_gen_025_;
  wire [6:0] ghdl_gen_026_;
  wire [6:0] ghdl_gen_027_;
  wire [6:0] ghdl_gen_028_;
  wire [6:0] ghdl_gen_029_;
  wire [6:0] ghdl_gen_030_;
  wire [6:0] ghdl_gen_031_;
  wire [6:0] ghdl_gen_032_;
  wire [6:0] ghdl_gen_033_;
  wire [6:0] ghdl_gen_034_;
  wire [6:0] ghdl_gen_035_;
  wire [6:0] ghdl_gen_036_;
  wire [6:0] ghdl_gen_037_;
  wire [6:0] ghdl_gen_038_;
  wire [6:0] ghdl_gen_039_;
  wire [6:0] ghdl_gen_040_;
  wire [6:0] ghdl_gen_041_;
  wire [5:0] ghdl_gen_042_;
  (* unused_bits = "8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] ghdl_gen_043_;
  wire [6:0] ghdl_gen_044_;
  wire ghdl_gen_045_;
  wire [6:0] ghdl_gen_046_;
  wire ghdl_gen_047_;
  (* unused_bits = "3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] ghdl_gen_048_;
  wire ghdl_gen_049_;
  wire ghdl_gen_050_;
  wire ghdl_gen_051_;
  wire [2:0] ghdl_gen_052_;
  wire [447:0] ghdl_gen_053_;
  wire [6:0] ghdl_gen_054_;
  wire [6:0] ghdl_gen_055_;
  wire [6:0] ghdl_gen_056_;
  wire [6:0] ghdl_gen_057_;
  wire [6:0] ghdl_gen_058_;
  wire [7:0] ghdl_gen_059_;
  wire [6:0] ghdl_gen_060_;
  wire [6:0] ghdl_gen_061_;
  wire [6:0] ghdl_gen_062_;
  wire [6:0] ghdl_gen_063_;
  wire [6:0] ghdl_gen_064_;
  wire [6:0] ghdl_gen_065_;
  wire [6:0] ghdl_gen_066_;
  wire [6:0] ghdl_gen_067_;
  wire [6:0] ghdl_gen_068_;
  wire [6:0] ghdl_gen_069_;
  wire [6:0] ghdl_gen_070_;
  wire [6:0] ghdl_gen_071_;
  wire [6:0] ghdl_gen_072_;
  wire [6:0] ghdl_gen_073_;
  wire [6:0] ghdl_gen_074_;
  wire [6:0] ghdl_gen_075_;
  wire [6:0] ghdl_gen_076_;
  wire [6:0] ghdl_gen_077_;
  wire [6:0] ghdl_gen_078_;
  wire [6:0] ghdl_gen_079_;
  wire [6:0] ghdl_gen_080_;
  wire [6:0] ghdl_gen_081_;
  wire [6:0] ghdl_gen_082_;
  reg [2:0] \12920.count  = 3'h0;
  input i_clk;
  wire i_clk;
  input [6:0] i_data_l;
  wire [6:0] i_data_l;
  input [6:0] i_data_r;
  wire [6:0] i_data_r;
  input i_dval;
  wire i_dval;
  input i_rst;
  wire i_rst;
  input [6:0] i_tresh;
  wire [6:0] i_tresh;
  output [6:0] o_data_lrcc;
  reg [6:0] o_data_lrcc;
  output o_dval;
  reg o_dval;
  reg [6:0] s_abs;
  reg [6:0] s_selector;
  (* unused_bits = "7" *)
  reg [7:0] s_sub;
  reg [6:0] s_tap1;
  reg [6:0] s_tap2;
  reg [6:0] s_tap3;
  reg [6:0] s_taps_l2r;
  reg [447:0] s_taps_r2l;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) \12920.count  <= 3'h0;
    else if (ghdl_gen_051_) \12920.count  <= ghdl_gen_052_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_taps_r2l <= 448'h0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    else if (i_dval) s_taps_r2l <= ghdl_gen_053_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_taps_l2r <= 7'h00;
    else if (i_dval) s_taps_l2r <= ghdl_gen_054_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_selector <= 7'h00;
    else if (i_dval) s_selector <= ghdl_gen_055_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_tap1 <= 7'h00;
    else if (i_dval) s_tap1 <= ghdl_gen_056_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_tap2 <= 7'h00;
    else if (i_dval) s_tap2 <= ghdl_gen_057_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_tap3 <= 7'h00;
    else if (i_dval) s_tap3 <= ghdl_gen_058_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_sub <= 8'h00;
    else if (i_dval) s_sub <= ghdl_gen_059_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_abs <= 7'h00;
    else if (i_dval) s_abs <= ghdl_gen_060_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) o_data_lrcc <= 7'h00;
    else if (i_dval) o_data_lrcc <= ghdl_gen_046_;
  assign ghdl_gen_000_ = ghdl_gen_042_[0] ? s_taps_r2l[13:7] : s_taps_r2l[6:0];
  assign ghdl_gen_001_ = ghdl_gen_042_[0] ? s_taps_r2l[41:35] : s_taps_r2l[34:28];
  assign ghdl_gen_002_ = ghdl_gen_042_[0] ? s_taps_r2l[69:63] : s_taps_r2l[62:56];
  assign ghdl_gen_003_ = ghdl_gen_042_[0] ? s_taps_r2l[97:91] : s_taps_r2l[90:84];
  assign ghdl_gen_004_ = ghdl_gen_042_[0] ? s_taps_r2l[125:119] : s_taps_r2l[118:112];
  assign ghdl_gen_005_ = ghdl_gen_042_[0] ? s_taps_r2l[153:147] : s_taps_r2l[146:140];
  assign ghdl_gen_006_ = ghdl_gen_042_[0] ? s_taps_r2l[181:175] : s_taps_r2l[174:168];
  assign ghdl_gen_007_ = ghdl_gen_042_[0] ? s_taps_r2l[209:203] : s_taps_r2l[202:196];
  assign ghdl_gen_008_ = ghdl_gen_042_[0] ? s_taps_r2l[237:231] : s_taps_r2l[230:224];
  assign ghdl_gen_009_ = ghdl_gen_042_[0] ? s_taps_r2l[265:259] : s_taps_r2l[258:252];
  assign ghdl_gen_010_ = ghdl_gen_042_[0] ? s_taps_r2l[293:287] : s_taps_r2l[286:280];
  assign ghdl_gen_011_ = ghdl_gen_042_[0] ? s_taps_r2l[321:315] : s_taps_r2l[314:308];
  assign ghdl_gen_012_ = ghdl_gen_042_[0] ? s_taps_r2l[349:343] : s_taps_r2l[342:336];
  assign ghdl_gen_013_ = ghdl_gen_042_[0] ? s_taps_r2l[377:371] : s_taps_r2l[370:364];
  assign ghdl_gen_014_ = ghdl_gen_042_[0] ? s_taps_r2l[405:399] : s_taps_r2l[398:392];
  assign ghdl_gen_015_ = ghdl_gen_042_[0] ? s_taps_r2l[433:427] : s_taps_r2l[426:420];
  assign ghdl_gen_016_ = ghdl_gen_042_[2] ? ghdl_gen_062_ : ghdl_gen_061_;
  assign ghdl_gen_017_ = ghdl_gen_042_[2] ? ghdl_gen_066_ : ghdl_gen_065_;
  assign ghdl_gen_018_ = ghdl_gen_042_[2] ? ghdl_gen_070_ : ghdl_gen_069_;
  assign ghdl_gen_019_ = ghdl_gen_042_[2] ? ghdl_gen_074_ : ghdl_gen_073_;
  assign ghdl_gen_020_ = ghdl_gen_042_[4] ? ghdl_gen_078_ : ghdl_gen_077_;
  assign ghdl_gen_021_ = ghdl_gen_042_[0] ? s_taps_r2l[27:21] : s_taps_r2l[20:14];
  assign ghdl_gen_022_ = ghdl_gen_042_[0] ? s_taps_r2l[55:49] : s_taps_r2l[48:42];
  assign ghdl_gen_023_ = ghdl_gen_042_[0] ? s_taps_r2l[83:77] : s_taps_r2l[76:70];
  assign ghdl_gen_024_ = ghdl_gen_042_[0] ? s_taps_r2l[111:105] : s_taps_r2l[104:98];
  assign ghdl_gen_025_ = ghdl_gen_042_[0] ? s_taps_r2l[139:133] : s_taps_r2l[132:126];
  assign ghdl_gen_026_ = ghdl_gen_042_[0] ? s_taps_r2l[167:161] : s_taps_r2l[160:154];
  assign ghdl_gen_027_ = ghdl_gen_042_[0] ? s_taps_r2l[195:189] : s_taps_r2l[188:182];
  assign ghdl_gen_028_ = ghdl_gen_042_[0] ? s_taps_r2l[223:217] : s_taps_r2l[216:210];
  assign ghdl_gen_029_ = ghdl_gen_042_[0] ? s_taps_r2l[251:245] : s_taps_r2l[244:238];
  assign ghdl_gen_030_ = ghdl_gen_042_[0] ? s_taps_r2l[279:273] : s_taps_r2l[272:266];
  assign ghdl_gen_031_ = ghdl_gen_042_[0] ? s_taps_r2l[307:301] : s_taps_r2l[300:294];
  assign ghdl_gen_032_ = ghdl_gen_042_[0] ? s_taps_r2l[335:329] : s_taps_r2l[328:322];
  assign ghdl_gen_033_ = ghdl_gen_042_[0] ? s_taps_r2l[363:357] : s_taps_r2l[356:350];
  assign ghdl_gen_034_ = ghdl_gen_042_[0] ? s_taps_r2l[391:385] : s_taps_r2l[384:378];
  assign ghdl_gen_035_ = ghdl_gen_042_[0] ? s_taps_r2l[419:413] : s_taps_r2l[412:406];
  assign ghdl_gen_036_ = ghdl_gen_042_[0] ? s_taps_r2l[447:441] : s_taps_r2l[440:434];
  assign ghdl_gen_037_ = ghdl_gen_042_[2] ? ghdl_gen_064_ : ghdl_gen_063_;
  assign ghdl_gen_038_ = ghdl_gen_042_[2] ? ghdl_gen_068_ : ghdl_gen_067_;
  assign ghdl_gen_039_ = ghdl_gen_042_[2] ? ghdl_gen_072_ : ghdl_gen_071_;
  assign ghdl_gen_040_ = ghdl_gen_042_[2] ? ghdl_gen_076_ : ghdl_gen_075_;
  assign ghdl_gen_041_ = ghdl_gen_042_[4] ? ghdl_gen_080_ : ghdl_gen_079_;
  assign ghdl_gen_061_ = ghdl_gen_042_[1] ? ghdl_gen_021_ : ghdl_gen_000_;
  assign ghdl_gen_062_ = ghdl_gen_042_[1] ? ghdl_gen_022_ : ghdl_gen_001_;
  assign ghdl_gen_063_ = ghdl_gen_042_[1] ? ghdl_gen_023_ : ghdl_gen_002_;
  assign ghdl_gen_064_ = ghdl_gen_042_[1] ? ghdl_gen_024_ : ghdl_gen_003_;
  assign ghdl_gen_065_ = ghdl_gen_042_[1] ? ghdl_gen_025_ : ghdl_gen_004_;
  assign ghdl_gen_066_ = ghdl_gen_042_[1] ? ghdl_gen_026_ : ghdl_gen_005_;
  assign ghdl_gen_067_ = ghdl_gen_042_[1] ? ghdl_gen_027_ : ghdl_gen_006_;
  assign ghdl_gen_068_ = ghdl_gen_042_[1] ? ghdl_gen_028_ : ghdl_gen_007_;
  assign ghdl_gen_069_ = ghdl_gen_042_[1] ? ghdl_gen_029_ : ghdl_gen_008_;
  assign ghdl_gen_070_ = ghdl_gen_042_[1] ? ghdl_gen_030_ : ghdl_gen_009_;
  assign ghdl_gen_071_ = ghdl_gen_042_[1] ? ghdl_gen_031_ : ghdl_gen_010_;
  assign ghdl_gen_072_ = ghdl_gen_042_[1] ? ghdl_gen_032_ : ghdl_gen_011_;
  assign ghdl_gen_073_ = ghdl_gen_042_[1] ? ghdl_gen_033_ : ghdl_gen_012_;
  assign ghdl_gen_074_ = ghdl_gen_042_[1] ? ghdl_gen_034_ : ghdl_gen_013_;
  assign ghdl_gen_075_ = ghdl_gen_042_[1] ? ghdl_gen_035_ : ghdl_gen_014_;
  assign ghdl_gen_076_ = ghdl_gen_042_[1] ? ghdl_gen_036_ : ghdl_gen_015_;
  assign ghdl_gen_077_ = ghdl_gen_042_[3] ? ghdl_gen_037_ : ghdl_gen_016_;
  assign ghdl_gen_078_ = ghdl_gen_042_[3] ? ghdl_gen_038_ : ghdl_gen_017_;
  assign ghdl_gen_079_ = ghdl_gen_042_[3] ? ghdl_gen_039_ : ghdl_gen_018_;
  assign ghdl_gen_080_ = ghdl_gen_042_[3] ? ghdl_gen_040_ : ghdl_gen_019_;
  assign ghdl_gen_081_ = ghdl_gen_042_[5] ? ghdl_gen_041_ : ghdl_gen_020_;
  assign ghdl_gen_082_ = - s_sub[6:0];
  assign ghdl_gen_044_ = s_sub[6] ? ghdl_gen_082_ : { 1'h0, s_sub[5:0] };
  assign ghdl_gen_042_ = 6'h3f - s_taps_l2r[5:0];
  assign ghdl_gen_043_ = { 25'h0000000, s_tap1 } - { 25'h0000000, s_selector };
  assign ghdl_gen_045_ = $signed({ 25'h0000000, s_abs }) < $signed({ 25'h0000000, i_tresh });
  assign ghdl_gen_046_ = ghdl_gen_045_ ? s_tap3 : 7'h00;
  assign ghdl_gen_047_ = $signed({ 29'h00000000, \12920.count  }) < $signed(32'd4);
  assign ghdl_gen_048_ = { 29'h00000000, \12920.count  } + 32'd1;
  assign ghdl_gen_049_ = ghdl_gen_047_ ? 1'h0 : 1'h1;
  assign ghdl_gen_050_ = i_dval ? ghdl_gen_049_ : 1'h0;
  assign ghdl_gen_051_ = i_dval & ghdl_gen_047_;
  assign ghdl_gen_052_ = ghdl_gen_051_ ? ghdl_gen_048_[2:0] : 3'hx;
  assign ghdl_gen_053_ = i_dval ? { i_data_r, s_taps_r2l[447:7] } : 448'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_054_ = i_dval ? i_data_l : 7'hxx;
  assign ghdl_gen_055_ = i_dval ? ghdl_gen_081_ : 7'hxx;
  assign ghdl_gen_056_ = i_dval ? s_taps_l2r : 7'hxx;
  assign ghdl_gen_057_ = i_dval ? s_tap1 : 7'hxx;
  assign ghdl_gen_058_ = i_dval ? s_tap2 : 7'hxx;
  assign ghdl_gen_059_ = i_dval ? ghdl_gen_043_[7:0] : 8'hxx;
  assign ghdl_gen_060_ = i_dval ? ghdl_gen_044_ : 7'hxx;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) o_dval <= 1'h0;
    else o_dval <= ghdl_gen_050_;
endmodule

module num_of_ones_7(i_clk, i_rst, i_data, i_dval, o_dval, o_data);
  wire ghdl_gen_00_;
  (* unused_bits = "3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] ghdl_gen_01_;
  wire ghdl_gen_02_;
  wire ghdl_gen_03_;
  wire ghdl_gen_04_;
  wire [2:0] ghdl_gen_05_;
  wire [31:0] ghdl_gen_06_;
  wire [31:0] ghdl_gen_07_;
  wire [31:0] ghdl_gen_08_;
  wire [31:0] ghdl_gen_09_;
  wire [31:0] ghdl_gen_10_;
  wire [31:0] ghdl_gen_11_;
  wire [31:0] ghdl_gen_12_;
  wire [31:0] ghdl_gen_13_;
  wire [31:0] ghdl_gen_14_;
  wire [31:0] ghdl_gen_15_;
  wire [31:0] ghdl_gen_16_;
  wire [31:0] ghdl_gen_17_;
  wire [31:0] ghdl_gen_18_;
  wire [31:0] ghdl_gen_19_;
  wire [31:0] ghdl_gen_20_;
  wire [31:0] ghdl_gen_21_;
  wire [31:0] ghdl_gen_22_;
  wire [31:0] ghdl_gen_23_;
  wire [31:0] ghdl_gen_24_;
  wire [31:0] ghdl_gen_25_;
  wire [31:0] ghdl_gen_26_;
  wire [31:0] ghdl_gen_27_;
  wire [31:0] ghdl_gen_28_;
  wire [31:0] ghdl_gen_29_;
  wire [23:0] ghdl_gen_30_;
  wire [383:0] ghdl_gen_31_;
  wire [191:0] ghdl_gen_32_;
  wire [95:0] ghdl_gen_33_;
  wire [63:0] ghdl_gen_34_;
  wire [31:0] ghdl_gen_35_;
  reg [2:0] \13082.counter  = 3'h0;
  input i_clk;
  wire i_clk;
  input [23:0] i_data;
  wire [23:0] i_data;
  input i_dval;
  wire i_dval;
  input i_rst;
  wire i_rst;
  (* init = 5'h00 *)
  output [4:0] o_data;
  wire [4:0] o_data;
  output o_dval;
  reg o_dval;
  reg [23:0] s_input;
  (* init = 3840'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx *)
  (* unused_bits
  wire [3839:0] sum;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) \13082.counter  <= 3'h0;
    else if (ghdl_gen_04_) \13082.counter  <= ghdl_gen_05_;
  reg [63:0] ghdl_gen_37_ = 64'h0000000000000000;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_37_ <= 64'h0000000000000000;
    else if (i_dval) ghdl_gen_37_ <= ghdl_gen_34_;
  assign sum[1535:1472] = ghdl_gen_37_;
  reg [31:0] ghdl_gen_38_ = 32'd0;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_38_ <= 32'd0;
    else if (i_dval) ghdl_gen_38_ <= ghdl_gen_35_;
  assign { sum[767:741], o_data } = ghdl_gen_38_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_input <= 24'h000000;
    else if (i_dval) s_input <= ghdl_gen_30_;
  reg [383:0] ghdl_gen_40_ = 384'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_40_ <= 384'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    else if (i_dval) ghdl_gen_40_ <= ghdl_gen_31_;
  assign sum[3839:3456] = ghdl_gen_40_;
  reg [191:0] ghdl_gen_41_ = 192'h000000000000000000000000000000000000000000000000;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_41_ <= 192'h000000000000000000000000000000000000000000000000;
    else if (i_dval) ghdl_gen_41_ <= ghdl_gen_32_;
  assign sum[3071:2880] = ghdl_gen_41_;
  reg [95:0] ghdl_gen_42_ = 96'h000000000000000000000000;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_42_ <= 96'h000000000000000000000000;
    else if (i_dval) ghdl_gen_42_ <= ghdl_gen_33_;
  assign sum[2303:2208] = ghdl_gen_42_;
  assign ghdl_gen_00_ = $signed({ 29'h00000000, \13082.counter  }) < $signed(32'd5);
  assign ghdl_gen_01_ = { 29'h00000000, \13082.counter  } + 32'd1;
  assign ghdl_gen_02_ = ghdl_gen_00_ ? 1'h0 : 1'h1;
  assign ghdl_gen_03_ = i_dval ? ghdl_gen_02_ : 1'h0;
  assign ghdl_gen_04_ = i_dval & ghdl_gen_00_;
  assign ghdl_gen_05_ = ghdl_gen_04_ ? ghdl_gen_01_[2:0] : 3'hx;
  assign ghdl_gen_06_ = { 31'h00000000, s_input[0] } + { 31'h00000000, s_input[1] };
  assign ghdl_gen_07_ = { 31'h00000000, s_input[2] } + { 31'h00000000, s_input[3] };
  assign ghdl_gen_08_ = { 31'h00000000, s_input[4] } + { 31'h00000000, s_input[5] };
  assign ghdl_gen_09_ = { 31'h00000000, s_input[6] } + { 31'h00000000, s_input[7] };
  assign ghdl_gen_10_ = { 31'h00000000, s_input[8] } + { 31'h00000000, s_input[9] };
  assign ghdl_gen_11_ = { 31'h00000000, s_input[10] } + { 31'h00000000, s_input[11] };
  assign ghdl_gen_12_ = { 31'h00000000, s_input[12] } + { 31'h00000000, s_input[13] };
  assign ghdl_gen_13_ = { 31'h00000000, s_input[14] } + { 31'h00000000, s_input[15] };
  assign ghdl_gen_14_ = { 31'h00000000, s_input[16] } + { 31'h00000000, s_input[17] };
  assign ghdl_gen_15_ = { 31'h00000000, s_input[18] } + { 31'h00000000, s_input[19] };
  assign ghdl_gen_16_ = { 31'h00000000, s_input[20] } + { 31'h00000000, s_input[21] };
  assign ghdl_gen_17_ = { 31'h00000000, s_input[22] } + { 31'h00000000, s_input[23] };
  assign ghdl_gen_18_ = { 30'h00000000, sum[3809:3808] } + { 30'h00000000, sum[3777:3776] };
  assign ghdl_gen_19_ = { 30'h00000000, sum[3745:3744] } + { 30'h00000000, sum[3713:3712] };
  assign ghdl_gen_20_ = { 30'h00000000, sum[3681:3680] } + { 30'h00000000, sum[3649:3648] };
  assign ghdl_gen_21_ = { 30'h00000000, sum[3617:3616] } + { 30'h00000000, sum[3585:3584] };
  assign ghdl_gen_22_ = { 30'h00000000, sum[3553:3552] } + { 30'h00000000, sum[3521:3520] };
  assign ghdl_gen_23_ = { 30'h00000000, sum[3489:3488] } + { 30'h00000000, sum[3457:3456] };
  assign ghdl_gen_24_ = { 29'h00000000, sum[3042:3040] } + { 29'h00000000, sum[3010:3008] };
  assign ghdl_gen_25_ = { 29'h00000000, sum[2978:2976] } + { 29'h00000000, sum[2946:2944] };
  assign ghdl_gen_26_ = { 29'h00000000, sum[2914:2912] } + { 29'h00000000, sum[2882:2880] };
  assign ghdl_gen_27_ = { 28'h0000000, sum[2275:2272] } + { 28'h0000000, sum[2243:2240] };
  assign ghdl_gen_28_ = { 28'h0000000, sum[2211:2208] } + { 28'h0000000, sum[2179:2176] };
  assign ghdl_gen_29_ = { 27'h0000000, sum[1508:1504] } + { 27'h0000000, sum[1476:1472] };
  assign sum[2207:1536] = i_rst ? sum[2207:1536] : 672'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign ghdl_gen_30_ = i_dval ? i_data : 24'hxxxxxx;
  assign ghdl_gen_31_ = i_dval ? { ghdl_gen_06_, ghdl_gen_07_, ghdl_gen_08_, ghdl_gen_09_, ghdl_gen_10_, ghdl_gen_11_, ghdl_gen_12_, ghdl_gen_13_, ghdl_gen_14_, ghdl_gen_15_, ghdl_gen_16_, ghdl_gen_17_ } : 384'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_32_ = i_dval ? { ghdl_gen_18_, ghdl_gen_19_, ghdl_gen_20_, ghdl_gen_21_, ghdl_gen_22_, ghdl_gen_23_ } : 192'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_33_ = i_dval ? { ghdl_gen_24_, ghdl_gen_25_, ghdl_gen_26_ } : 96'hxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_34_ = i_dval ? { ghdl_gen_27_, ghdl_gen_28_ } : 64'hxxxxxxxxxxxxxxxx;
  assign ghdl_gen_35_ = i_dval ? ghdl_gen_29_ : 32'hxxxxxxxx;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) o_dval <= 1'h0;
    else o_dval <= ghdl_gen_03_;
  assign sum[740:736] = o_data;
endmodule

//module Disp_Cmp #(parameter WIDTH_SR = 93)(i_data_C1, i_data_D1, i_data_C2, i_data_D2, o_data_C, o_data_D, i_CLK_x, i_RST_x, i_TFEn, i_EN_SR, i_SI, o_CLK_x, o_RST_x, o_TFEn, o_EN_SR, o_SI);
module shd_13_450_64_7(i_clk, i_rst, i_data_ll, i_data_lh, i_data_rl, i_data_rh, i_dval, o_dval, o_data_l, o_data_r, i_CLK_x, i_RST_x, i_TFEn, i_EN_SR, i_SI, o_CLK_x, o_RST_x, o_TFEn, o_EN_SR, o_SI);
  wire [11:0] ghdl_gen_000_;
  wire [6:0] ghdl_gen_001_;
  wire [11:0] ghdl_gen_002_;
  wire [6:0] ghdl_gen_003_;
  wire [11:0] ghdl_gen_004_;
  wire [6:0] ghdl_gen_005_;
  wire [11:0] ghdl_gen_006_;
  wire [6:0] ghdl_gen_007_;
  wire [11:0] ghdl_gen_008_;
  wire [6:0] ghdl_gen_009_;
  wire [11:0] ghdl_gen_010_;
  wire [6:0] ghdl_gen_011_;
  wire [11:0] ghdl_gen_012_;
  wire [6:0] ghdl_gen_013_;
  wire [11:0] ghdl_gen_014_;
  wire [6:0] ghdl_gen_015_;
  wire [11:0] ghdl_gen_016_;
  wire [6:0] ghdl_gen_017_;
  wire [11:0] ghdl_gen_018_;
  wire [6:0] ghdl_gen_019_;
  wire [11:0] ghdl_gen_020_;
  wire [6:0] ghdl_gen_021_;
  wire [11:0] ghdl_gen_022_;
  wire [6:0] ghdl_gen_023_;
  wire [11:0] ghdl_gen_024_;
  wire [6:0] ghdl_gen_025_;
  wire [11:0] ghdl_gen_026_;
  wire [6:0] ghdl_gen_027_;
  wire [11:0] ghdl_gen_028_;
  wire [6:0] ghdl_gen_029_;
  wire [11:0] ghdl_gen_030_;
  wire [6:0] ghdl_gen_031_;
  wire [11:0] ghdl_gen_032_;
  wire [6:0] ghdl_gen_033_;
  wire [11:0] ghdl_gen_034_;
  wire [6:0] ghdl_gen_035_;
  wire [11:0] ghdl_gen_036_;
  wire [6:0] ghdl_gen_037_;
  wire [11:0] ghdl_gen_038_;
  wire [6:0] ghdl_gen_039_;
  wire [11:0] ghdl_gen_040_;
  wire [6:0] ghdl_gen_041_;
  wire [11:0] ghdl_gen_042_;
  wire [6:0] ghdl_gen_043_;
  wire [11:0] ghdl_gen_044_;
  wire [6:0] ghdl_gen_045_;
  wire [11:0] ghdl_gen_046_;
  wire [6:0] ghdl_gen_047_;
  wire [11:0] ghdl_gen_048_;
  wire [6:0] ghdl_gen_049_;
  wire [11:0] ghdl_gen_050_;
  wire [6:0] ghdl_gen_051_;
  wire [11:0] ghdl_gen_052_;
  wire [6:0] ghdl_gen_053_;
  wire [11:0] ghdl_gen_054_;
  wire [6:0] ghdl_gen_055_;
  wire [11:0] ghdl_gen_056_;
  wire [6:0] ghdl_gen_057_;
  wire [11:0] ghdl_gen_058_;
  wire [6:0] ghdl_gen_059_;
  wire [11:0] ghdl_gen_060_;
  wire [6:0] ghdl_gen_061_;
  wire [11:0] ghdl_gen_062_;
  wire [6:0] ghdl_gen_063_;
  wire [11:0] ghdl_gen_064_;
  wire [6:0] ghdl_gen_065_;
  wire [11:0] ghdl_gen_066_;
  wire [6:0] ghdl_gen_067_;
  wire [11:0] ghdl_gen_068_;
  wire [6:0] ghdl_gen_069_;
  wire [11:0] ghdl_gen_070_;
  wire [6:0] ghdl_gen_071_;
  wire [11:0] ghdl_gen_072_;
  wire [6:0] ghdl_gen_073_;
  wire [11:0] ghdl_gen_074_;
  wire [6:0] ghdl_gen_075_;
  wire [11:0] ghdl_gen_076_;
  wire [6:0] ghdl_gen_077_;
  wire [11:0] ghdl_gen_078_;
  wire [6:0] ghdl_gen_079_;
  wire [11:0] ghdl_gen_080_;
  wire [6:0] ghdl_gen_081_;
  wire [11:0] ghdl_gen_082_;
  wire [6:0] ghdl_gen_083_;
  wire [11:0] ghdl_gen_084_;
  wire [6:0] ghdl_gen_085_;
  wire [11:0] ghdl_gen_086_;
  wire [6:0] ghdl_gen_087_;
  wire [11:0] ghdl_gen_088_;
  wire [6:0] ghdl_gen_089_;
  wire [11:0] ghdl_gen_090_;
  wire [6:0] ghdl_gen_091_;
  wire [11:0] ghdl_gen_092_;
  wire [6:0] ghdl_gen_093_;
  wire [11:0] ghdl_gen_094_;
  wire [6:0] ghdl_gen_095_;
  wire [11:0] ghdl_gen_096_;
  wire [6:0] ghdl_gen_097_;
  wire [11:0] ghdl_gen_098_;
  wire [6:0] ghdl_gen_099_;
  wire [11:0] ghdl_gen_100_;
  wire [6:0] ghdl_gen_101_;
  wire [11:0] ghdl_gen_102_;
  wire [6:0] ghdl_gen_103_;
  wire [11:0] ghdl_gen_104_;
  wire [6:0] ghdl_gen_105_;
  wire [11:0] ghdl_gen_106_;
  wire [6:0] ghdl_gen_107_;
  wire [11:0] ghdl_gen_108_;
  wire [6:0] ghdl_gen_109_;
  wire [11:0] ghdl_gen_110_;
  wire [6:0] ghdl_gen_111_;
  wire [11:0] ghdl_gen_112_;
  wire [6:0] ghdl_gen_113_;
  wire [11:0] ghdl_gen_114_;
  wire [6:0] ghdl_gen_115_;
  wire [11:0] ghdl_gen_116_;
  wire [6:0] ghdl_gen_117_;
  wire [11:0] ghdl_gen_118_;
  wire [6:0] ghdl_gen_119_;
  wire [11:0] ghdl_gen_120_;
  wire [6:0] ghdl_gen_121_;
  wire [11:0] ghdl_gen_122_;
  wire [6:0] ghdl_gen_123_;
  wire [11:0] ghdl_gen_124_;
  wire [6:0] ghdl_gen_125_;
  wire [1535:0] ghdl_gen_126_;
  wire [1535:0] ghdl_gen_127_;
  wire [3047:0] ghdl_gen_128_;
  wire [3047:0] ghdl_gen_129_;
  wire [447:0] ghdl_gen_130_;
  wire [126:0] ghdl_gen_131_;
  wire [126:0] ghdl_gen_132_;
  wire ghdl_gen_133_;
  (* unused_bits = "15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] ghdl_gen_134_;
  wire ghdl_gen_135_;
  wire [126:0] ghdl_gen_136_;
  wire ghdl_gen_137_;
  wire [126:0] ghdl_gen_138_;
  wire ghdl_gen_139_;
  wire [14:0] ghdl_gen_140_;
  (* unused_bits = "0" *)
  wire ghdl_gen_141_;
  (* unused_bits = "0" *)
  wire ghdl_gen_142_;
  (* unused_bits = "0" *)
  wire ghdl_gen_143_;
  (* unused_bits = "0" *)
  wire ghdl_gen_144_;
  (* unused_bits = "0" *)
  wire ghdl_gen_145_;
  (* unused_bits = "0" *)
  wire ghdl_gen_146_;
  (* unused_bits = "0" *)
  wire ghdl_gen_147_;
  (* unused_bits = "0" *)
  wire ghdl_gen_148_;
  (* unused_bits = "0" *)
  wire ghdl_gen_149_;
  (* unused_bits = "0" *)
  wire ghdl_gen_150_;
  (* unused_bits = "0" *)
  wire ghdl_gen_151_;
  (* unused_bits = "0" *)
  wire ghdl_gen_152_;
  (* unused_bits = "0" *)
  wire ghdl_gen_153_;
  (* unused_bits = "0" *)
  wire ghdl_gen_154_;
  (* unused_bits = "0" *)
  wire ghdl_gen_155_;
  (* unused_bits = "0" *)
  wire ghdl_gen_156_;
  (* unused_bits = "0" *)
  wire ghdl_gen_157_;
  (* unused_bits = "0" *)
  wire ghdl_gen_158_;
  (* unused_bits = "0" *)
  wire ghdl_gen_159_;
  (* unused_bits = "0" *)
  wire ghdl_gen_160_;
  (* unused_bits = "0" *)
  wire ghdl_gen_161_;
  (* unused_bits = "0" *)
  wire ghdl_gen_162_;
  (* unused_bits = "0" *)
  wire ghdl_gen_163_;
  (* unused_bits = "0" *)
  wire ghdl_gen_164_;
  (* unused_bits = "0" *)
  wire ghdl_gen_165_;
  (* unused_bits = "0" *)
  wire ghdl_gen_166_;
  (* unused_bits = "0" *)
  wire ghdl_gen_167_;
  (* unused_bits = "0" *)
  wire ghdl_gen_168_;
  (* unused_bits = "0" *)
  wire ghdl_gen_169_;
  (* unused_bits = "0" *)
  wire ghdl_gen_170_;
  (* unused_bits = "0" *)
  wire ghdl_gen_171_;
  (* unused_bits = "0" *)
  wire ghdl_gen_172_;
  (* unused_bits = "0" *)
  wire ghdl_gen_173_;
  (* unused_bits = "0" *)
  wire ghdl_gen_174_;
  (* unused_bits = "0" *)
  wire ghdl_gen_175_;
  (* unused_bits = "0" *)
  wire ghdl_gen_176_;
  (* unused_bits = "0" *)
  wire ghdl_gen_177_;
  (* unused_bits = "0" *)
  wire ghdl_gen_178_;
  (* unused_bits = "0" *)
  wire ghdl_gen_179_;
  (* unused_bits = "0" *)
  wire ghdl_gen_180_;
  (* unused_bits = "0" *)
  wire ghdl_gen_181_;
  (* unused_bits = "0" *)
  wire ghdl_gen_182_;
  (* unused_bits = "0" *)
  wire ghdl_gen_183_;
  (* unused_bits = "0" *)
  wire ghdl_gen_184_;
  (* unused_bits = "0" *)
  wire ghdl_gen_185_;
  (* unused_bits = "0" *)
  wire ghdl_gen_186_;
  (* unused_bits = "0" *)
  wire ghdl_gen_187_;
  (* unused_bits = "0" *)
  wire ghdl_gen_188_;
  (* unused_bits = "0" *)
  wire ghdl_gen_189_;
  (* unused_bits = "0" *)
  wire ghdl_gen_190_;
  (* unused_bits = "0" *)
  wire ghdl_gen_191_;
  (* unused_bits = "0" *)
  wire ghdl_gen_192_;
  (* unused_bits = "0" *)
  wire ghdl_gen_193_;
  (* unused_bits = "0" *)
  wire ghdl_gen_194_;
  (* unused_bits = "0" *)
  wire ghdl_gen_195_;
  (* unused_bits = "0" *)
  wire ghdl_gen_196_;
  (* unused_bits = "0" *)
  wire ghdl_gen_197_;
  (* unused_bits = "0" *)
  wire ghdl_gen_198_;
  (* unused_bits = "0" *)
  wire ghdl_gen_199_;
  (* unused_bits = "0" *)
  wire ghdl_gen_200_;
  (* unused_bits = "0" *)
  wire ghdl_gen_201_;
  (* unused_bits = "0" *)
  wire ghdl_gen_202_;
  (* unused_bits = "0" *)
  wire ghdl_gen_203_;
  (* unused_bits = "0" *)
  wire ghdl_gen_204_;
  wire [23:0] ghdl_gen_205_;
  wire [13:0] ghdl_gen_206_;
  wire [23:0] ghdl_gen_207_;
  wire [13:0] ghdl_gen_208_;
  wire [23:0] ghdl_gen_209_;
  wire [13:0] ghdl_gen_210_;
  wire [23:0] ghdl_gen_211_;
  wire [13:0] ghdl_gen_212_;
  wire [23:0] ghdl_gen_213_;
  wire [13:0] ghdl_gen_214_;
  wire [23:0] ghdl_gen_215_;
  wire [13:0] ghdl_gen_216_;
  wire [23:0] ghdl_gen_217_;
  wire [13:0] ghdl_gen_218_;
  wire [23:0] ghdl_gen_219_;
  wire [13:0] ghdl_gen_220_;
  wire [23:0] ghdl_gen_221_;
  wire [13:0] ghdl_gen_222_;
  wire [23:0] ghdl_gen_223_;
  wire [13:0] ghdl_gen_224_;
  wire [23:0] ghdl_gen_225_;
  wire [13:0] ghdl_gen_226_;
  wire [23:0] ghdl_gen_227_;
  wire [13:0] ghdl_gen_228_;
  wire [23:0] ghdl_gen_229_;
  wire [13:0] ghdl_gen_230_;
  wire [23:0] ghdl_gen_231_;
  wire [13:0] ghdl_gen_232_;
  wire [23:0] ghdl_gen_233_;
  wire [13:0] ghdl_gen_234_;
  wire [23:0] ghdl_gen_235_;
  wire [13:0] ghdl_gen_236_;
  wire [23:0] ghdl_gen_237_;
  wire [13:0] ghdl_gen_238_;
  wire [23:0] ghdl_gen_239_;
  wire [13:0] ghdl_gen_240_;
  wire [23:0] ghdl_gen_241_;
  wire [13:0] ghdl_gen_242_;
  wire [23:0] ghdl_gen_243_;
  wire [13:0] ghdl_gen_244_;
  wire [23:0] ghdl_gen_245_;
  wire [13:0] ghdl_gen_246_;
  wire [23:0] ghdl_gen_247_;
  wire [13:0] ghdl_gen_248_;
  wire [23:0] ghdl_gen_249_;
  wire [13:0] ghdl_gen_250_;
  wire [23:0] ghdl_gen_251_;
  wire [13:0] ghdl_gen_252_;
  wire [23:0] ghdl_gen_253_;
  wire [13:0] ghdl_gen_254_;
  wire [23:0] ghdl_gen_255_;
  wire [13:0] ghdl_gen_256_;
  wire [23:0] ghdl_gen_257_;
  wire [13:0] ghdl_gen_258_;
  wire [23:0] ghdl_gen_259_;
  wire [13:0] ghdl_gen_260_;
  wire [23:0] ghdl_gen_261_;
  wire [13:0] ghdl_gen_262_;
  wire [23:0] ghdl_gen_263_;
  wire [13:0] ghdl_gen_264_;
  wire [23:0] ghdl_gen_265_;
  wire [13:0] ghdl_gen_266_;
  wire [23:0] ghdl_gen_267_;
  wire [13:0] ghdl_gen_268_;
  wire [23:0] ghdl_gen_269_;
  wire [13:0] ghdl_gen_270_;
  wire [23:0] ghdl_gen_271_;
  wire [13:0] ghdl_gen_272_;
  wire [23:0] ghdl_gen_273_;
  wire [13:0] ghdl_gen_274_;
  wire [23:0] ghdl_gen_275_;
  wire [13:0] ghdl_gen_276_;
  wire [23:0] ghdl_gen_277_;
  wire [13:0] ghdl_gen_278_;
  wire [23:0] ghdl_gen_279_;
  wire [13:0] ghdl_gen_280_;
  wire [23:0] ghdl_gen_281_;
  wire [13:0] ghdl_gen_282_;
  wire [23:0] ghdl_gen_283_;
  wire [13:0] ghdl_gen_284_;
  wire [23:0] ghdl_gen_285_;
  wire [13:0] ghdl_gen_286_;
  wire [23:0] ghdl_gen_287_;
  wire [13:0] ghdl_gen_288_;
  wire [23:0] ghdl_gen_289_;
  wire [13:0] ghdl_gen_290_;
  wire [23:0] ghdl_gen_291_;
  wire [13:0] ghdl_gen_292_;
  wire [23:0] ghdl_gen_293_;
  wire [13:0] ghdl_gen_294_;
  wire [23:0] ghdl_gen_295_;
  wire [13:0] ghdl_gen_296_;
  wire [23:0] ghdl_gen_297_;
  wire [13:0] ghdl_gen_298_;
  wire [23:0] ghdl_gen_299_;
  wire [13:0] ghdl_gen_300_;
  wire [23:0] ghdl_gen_301_;
  wire [13:0] ghdl_gen_302_;
  wire [23:0] ghdl_gen_303_;
  wire [13:0] ghdl_gen_304_;
  wire [23:0] ghdl_gen_305_;
  wire [13:0] ghdl_gen_306_;
  wire [23:0] ghdl_gen_307_;
  wire [13:0] ghdl_gen_308_;
  wire [23:0] ghdl_gen_309_;
  wire [13:0] ghdl_gen_310_;
  wire [23:0] ghdl_gen_311_;
  wire [13:0] ghdl_gen_312_;
  wire [23:0] ghdl_gen_313_;
  wire [13:0] ghdl_gen_314_;
  wire [23:0] ghdl_gen_315_;
  wire [13:0] ghdl_gen_316_;
  wire [23:0] ghdl_gen_317_;
  wire [13:0] ghdl_gen_318_;
  wire [23:0] ghdl_gen_319_;
  wire [13:0] ghdl_gen_320_;
  wire [23:0] ghdl_gen_321_;
  wire [13:0] ghdl_gen_322_;
  wire [23:0] ghdl_gen_323_;
  wire [13:0] ghdl_gen_324_;
  wire [23:0] ghdl_gen_325_;
  wire [13:0] ghdl_gen_326_;
  wire [23:0] ghdl_gen_327_;
  wire [13:0] ghdl_gen_328_;
  wire [23:0] ghdl_gen_329_;
  wire [13:0] ghdl_gen_330_;
  (* unused_bits = "0" *)
  reg [126:0] \9426.v_valid_in ;
  reg [14:0] \9450.count  = 15'h0000;
  (* unused_bits = "0" *)
  reg [126:0] \9450.v_valid_in ;
  (* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11" *)
  wire [767:0] cmpcosto;
  (* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11" *)
  wire [767:0] cmpcostol;
  wire [447:0] cmpdispa;
  wire [447:0] cmpdispal;
  reg [1511:0] costo;
  (* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11" *)
  wire [767:0] costol;
  reg [447:0] delay_reg;
  reg [881:0] dispa;
  (* unused_bits = "0 1 2 3 4 5 6" *)
  wire [447:0] dispal;
  input i_clk;
  wire i_clk;
  input [23:0] i_data_lh;
  wire [23:0] i_data_lh;
  input [23:0] i_data_ll;
  wire [23:0] i_data_ll;
  input [23:0] i_data_rh;
  wire [23:0] i_data_rh;
  input [23:0] i_data_rl;
  wire [23:0] i_data_rl;
  input i_dval;
  wire i_dval;
  input i_rst;
  wire i_rst;
  output [6:0] o_data_l;
  reg [6:0] o_data_l;
  output [6:0] o_data_r;
  reg [6:0] o_data_r;
  output o_dval;
  reg o_dval;
  wire [1535:0] s_hamming_h;
  wire [1535:0] s_hamming_l;
  wire [319:0] s_phamming_h;
  wire [319:0] s_phamming_l;
  wire [767:0] s_sum_w;
  (* unused_bits = "1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99 101 103 105 107 109 111 113 115 117 119 121 123 125" *)
  reg [126:0] s_valid_in;
  (* unused_bits = "1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99 101 103 105 107 109 111 113 115 117 119 121 123 125" *)
  reg [126:0] s_valid_inh;
  wire [63:0] s_valid_l;
  wire [63:0] s_valid_w;
  reg [1535:0] slide_window_lh;
  reg [1535:0] slide_window_ll;
  reg [3047:0] slide_window_rh;
  reg [3047:0] slide_window_rl;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) slide_window_rh <= 3048'h
    else if (i_dval) slide_window_rh <= ghdl_gen_129_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1511:1488] <= 24'h000000;
    else if (s_valid_w[0]) costo[1511:1488] <= ghdl_gen_205_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1487:1464] <= 24'h000000;
    else if (s_valid_w[1]) costo[1487:1464] <= ghdl_gen_207_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1463:1440] <= 24'h000000;
    else if (s_valid_w[2]) costo[1463:1440] <= ghdl_gen_209_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1439:1416] <= 24'h000000;
    else if (s_valid_w[3]) costo[1439:1416] <= ghdl_gen_211_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1415:1392] <= 24'h000000;
    else if (s_valid_w[4]) costo[1415:1392] <= ghdl_gen_213_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1391:1368] <= 24'h000000;
    else if (s_valid_w[5]) costo[1391:1368] <= ghdl_gen_215_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1367:1344] <= 24'h000000;
    else if (s_valid_w[6]) costo[1367:1344] <= ghdl_gen_217_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1343:1320] <= 24'h000000;
    else if (s_valid_w[7]) costo[1343:1320] <= ghdl_gen_219_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1319:1296] <= 24'h000000;
    else if (s_valid_w[8]) costo[1319:1296] <= ghdl_gen_221_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1295:1272] <= 24'h000000;
    else if (s_valid_w[9]) costo[1295:1272] <= ghdl_gen_223_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1271:1248] <= 24'h000000;
    else if (s_valid_w[10]) costo[1271:1248] <= ghdl_gen_225_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1247:1224] <= 24'h000000;
    else if (s_valid_w[11]) costo[1247:1224] <= ghdl_gen_227_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1223:1200] <= 24'h000000;
    else if (s_valid_w[12]) costo[1223:1200] <= ghdl_gen_229_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1199:1176] <= 24'h000000;
    else if (s_valid_w[13]) costo[1199:1176] <= ghdl_gen_231_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1175:1152] <= 24'h000000;
    else if (s_valid_w[14]) costo[1175:1152] <= ghdl_gen_233_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1151:1128] <= 24'h000000;
    else if (s_valid_w[15]) costo[1151:1128] <= ghdl_gen_235_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1127:1104] <= 24'h000000;
    else if (s_valid_w[16]) costo[1127:1104] <= ghdl_gen_237_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1103:1080] <= 24'h000000;
    else if (s_valid_w[17]) costo[1103:1080] <= ghdl_gen_239_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1079:1056] <= 24'h000000;
    else if (s_valid_w[18]) costo[1079:1056] <= ghdl_gen_241_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1055:1032] <= 24'h000000;
    else if (s_valid_w[19]) costo[1055:1032] <= ghdl_gen_243_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1031:1008] <= 24'h000000;
    else if (s_valid_w[20]) costo[1031:1008] <= ghdl_gen_245_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[1007:984] <= 24'h000000;
    else if (s_valid_w[21]) costo[1007:984] <= ghdl_gen_247_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[983:960] <= 24'h000000;
    else if (s_valid_w[22]) costo[983:960] <= ghdl_gen_249_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[959:936] <= 24'h000000;
    else if (s_valid_w[23]) costo[959:936] <= ghdl_gen_251_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[935:912] <= 24'h000000;
    else if (s_valid_w[24]) costo[935:912] <= ghdl_gen_253_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[911:888] <= 24'h000000;
    else if (s_valid_w[25]) costo[911:888] <= ghdl_gen_255_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[887:864] <= 24'h000000;
    else if (s_valid_w[26]) costo[887:864] <= ghdl_gen_257_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[863:840] <= 24'h000000;
    else if (s_valid_w[27]) costo[863:840] <= ghdl_gen_259_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[839:816] <= 24'h000000;
    else if (s_valid_w[28]) costo[839:816] <= ghdl_gen_261_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[815:792] <= 24'h000000;
    else if (s_valid_w[29]) costo[815:792] <= ghdl_gen_263_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[791:768] <= 24'h000000;
    else if (s_valid_w[30]) costo[791:768] <= ghdl_gen_265_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[767:744] <= 24'h000000;
    else if (s_valid_w[31]) costo[767:744] <= ghdl_gen_267_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[743:720] <= 24'h000000;
    else if (s_valid_w[32]) costo[743:720] <= ghdl_gen_269_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[719:696] <= 24'h000000;
    else if (s_valid_w[33]) costo[719:696] <= ghdl_gen_271_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[695:672] <= 24'h000000;
    else if (s_valid_w[34]) costo[695:672] <= ghdl_gen_273_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[671:648] <= 24'h000000;
    else if (s_valid_w[35]) costo[671:648] <= ghdl_gen_275_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[647:624] <= 24'h000000;
    else if (s_valid_w[36]) costo[647:624] <= ghdl_gen_277_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[623:600] <= 24'h000000;
    else if (s_valid_w[37]) costo[623:600] <= ghdl_gen_279_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[599:576] <= 24'h000000;
    else if (s_valid_w[38]) costo[599:576] <= ghdl_gen_281_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[575:552] <= 24'h000000;
    else if (s_valid_w[39]) costo[575:552] <= ghdl_gen_283_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[551:528] <= 24'h000000;
    else if (s_valid_w[40]) costo[551:528] <= ghdl_gen_285_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[527:504] <= 24'h000000;
    else if (s_valid_w[41]) costo[527:504] <= ghdl_gen_287_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[503:480] <= 24'h000000;
    else if (s_valid_w[42]) costo[503:480] <= ghdl_gen_289_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[479:456] <= 24'h000000;
    else if (s_valid_w[43]) costo[479:456] <= ghdl_gen_291_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[455:432] <= 24'h000000;
    else if (s_valid_w[44]) costo[455:432] <= ghdl_gen_293_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[431:408] <= 24'h000000;
    else if (s_valid_w[45]) costo[431:408] <= ghdl_gen_295_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[407:384] <= 24'h000000;
    else if (s_valid_w[46]) costo[407:384] <= ghdl_gen_297_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[383:360] <= 24'h000000;
    else if (s_valid_w[47]) costo[383:360] <= ghdl_gen_299_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[359:336] <= 24'h000000;
    else if (s_valid_w[48]) costo[359:336] <= ghdl_gen_301_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[335:312] <= 24'h000000;
    else if (s_valid_w[49]) costo[335:312] <= ghdl_gen_303_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[311:288] <= 24'h000000;
    else if (s_valid_w[50]) costo[311:288] <= ghdl_gen_305_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[287:264] <= 24'h000000;
    else if (s_valid_w[51]) costo[287:264] <= ghdl_gen_307_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[263:240] <= 24'h000000;
    else if (s_valid_w[52]) costo[263:240] <= ghdl_gen_309_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[239:216] <= 24'h000000;
    else if (s_valid_w[53]) costo[239:216] <= ghdl_gen_311_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[215:192] <= 24'h000000;
    else if (s_valid_w[54]) costo[215:192] <= ghdl_gen_313_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[191:168] <= 24'h000000;
    else if (s_valid_w[55]) costo[191:168] <= ghdl_gen_315_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[167:144] <= 24'h000000;
    else if (s_valid_w[56]) costo[167:144] <= ghdl_gen_317_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[143:120] <= 24'h000000;
    else if (s_valid_w[57]) costo[143:120] <= ghdl_gen_319_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[119:96] <= 24'h000000;
    else if (s_valid_w[58]) costo[119:96] <= ghdl_gen_321_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[95:72] <= 24'h000000;
    else if (s_valid_w[59]) costo[95:72] <= ghdl_gen_323_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[71:48] <= 24'h000000;
    else if (s_valid_w[60]) costo[71:48] <= ghdl_gen_325_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[47:24] <= 24'h000000;
    else if (s_valid_w[61]) costo[47:24] <= ghdl_gen_327_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) costo[23:0] <= 24'h000000;
    else if (s_valid_w[62]) costo[23:0] <= ghdl_gen_329_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[881:868] <= 14'h0000;
    else if (s_valid_w[0]) dispa[881:868] <= ghdl_gen_206_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[867:854] <= 14'h0000;
    else if (s_valid_w[1]) dispa[867:854] <= ghdl_gen_208_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[853:840] <= 14'h0000;
    else if (s_valid_w[2]) dispa[853:840] <= ghdl_gen_210_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[839:826] <= 14'h0000;
    else if (s_valid_w[3]) dispa[839:826] <= ghdl_gen_212_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[825:812] <= 14'h0000;
    else if (s_valid_w[4]) dispa[825:812] <= ghdl_gen_214_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[811:798] <= 14'h0000;
    else if (s_valid_w[5]) dispa[811:798] <= ghdl_gen_216_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[797:784] <= 14'h0000;
    else if (s_valid_w[6]) dispa[797:784] <= ghdl_gen_218_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[783:770] <= 14'h0000;
    else if (s_valid_w[7]) dispa[783:770] <= ghdl_gen_220_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[769:756] <= 14'h0000;
    else if (s_valid_w[8]) dispa[769:756] <= ghdl_gen_222_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[755:742] <= 14'h0000;
    else if (s_valid_w[9]) dispa[755:742] <= ghdl_gen_224_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[741:728] <= 14'h0000;
    else if (s_valid_w[10]) dispa[741:728] <= ghdl_gen_226_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[727:714] <= 14'h0000;
    else if (s_valid_w[11]) dispa[727:714] <= ghdl_gen_228_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[713:700] <= 14'h0000;
    else if (s_valid_w[12]) dispa[713:700] <= ghdl_gen_230_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[699:686] <= 14'h0000;
    else if (s_valid_w[13]) dispa[699:686] <= ghdl_gen_232_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[685:672] <= 14'h0000;
    else if (s_valid_w[14]) dispa[685:672] <= ghdl_gen_234_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[671:658] <= 14'h0000;
    else if (s_valid_w[15]) dispa[671:658] <= ghdl_gen_236_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[657:644] <= 14'h0000;
    else if (s_valid_w[16]) dispa[657:644] <= ghdl_gen_238_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[643:630] <= 14'h0000;
    else if (s_valid_w[17]) dispa[643:630] <= ghdl_gen_240_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[629:616] <= 14'h0000;
    else if (s_valid_w[18]) dispa[629:616] <= ghdl_gen_242_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[615:602] <= 14'h0000;
    else if (s_valid_w[19]) dispa[615:602] <= ghdl_gen_244_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[601:588] <= 14'h0000;
    else if (s_valid_w[20]) dispa[601:588] <= ghdl_gen_246_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[587:574] <= 14'h0000;
    else if (s_valid_w[21]) dispa[587:574] <= ghdl_gen_248_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[573:560] <= 14'h0000;
    else if (s_valid_w[22]) dispa[573:560] <= ghdl_gen_250_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[559:546] <= 14'h0000;
    else if (s_valid_w[23]) dispa[559:546] <= ghdl_gen_252_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[545:532] <= 14'h0000;
    else if (s_valid_w[24]) dispa[545:532] <= ghdl_gen_254_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[531:518] <= 14'h0000;
    else if (s_valid_w[25]) dispa[531:518] <= ghdl_gen_256_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[517:504] <= 14'h0000;
    else if (s_valid_w[26]) dispa[517:504] <= ghdl_gen_258_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[503:490] <= 14'h0000;
    else if (s_valid_w[27]) dispa[503:490] <= ghdl_gen_260_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[489:476] <= 14'h0000;
    else if (s_valid_w[28]) dispa[489:476] <= ghdl_gen_262_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[475:462] <= 14'h0000;
    else if (s_valid_w[29]) dispa[475:462] <= ghdl_gen_264_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[461:448] <= 14'h0000;
    else if (s_valid_w[30]) dispa[461:448] <= ghdl_gen_266_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[447:434] <= 14'h0000;
    else if (s_valid_w[31]) dispa[447:434] <= ghdl_gen_268_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[433:420] <= 14'h0000;
    else if (s_valid_w[32]) dispa[433:420] <= ghdl_gen_270_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[419:406] <= 14'h0000;
    else if (s_valid_w[33]) dispa[419:406] <= ghdl_gen_272_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[405:392] <= 14'h0000;
    else if (s_valid_w[34]) dispa[405:392] <= ghdl_gen_274_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[391:378] <= 14'h0000;
    else if (s_valid_w[35]) dispa[391:378] <= ghdl_gen_276_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[377:364] <= 14'h0000;
    else if (s_valid_w[36]) dispa[377:364] <= ghdl_gen_278_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[363:350] <= 14'h0000;
    else if (s_valid_w[37]) dispa[363:350] <= ghdl_gen_280_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[349:336] <= 14'h0000;
    else if (s_valid_w[38]) dispa[349:336] <= ghdl_gen_282_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[335:322] <= 14'h0000;
    else if (s_valid_w[39]) dispa[335:322] <= ghdl_gen_284_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[321:308] <= 14'h0000;
    else if (s_valid_w[40]) dispa[321:308] <= ghdl_gen_286_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[307:294] <= 14'h0000;
    else if (s_valid_w[41]) dispa[307:294] <= ghdl_gen_288_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[293:280] <= 14'h0000;
    else if (s_valid_w[42]) dispa[293:280] <= ghdl_gen_290_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[279:266] <= 14'h0000;
    else if (s_valid_w[43]) dispa[279:266] <= ghdl_gen_292_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[265:252] <= 14'h0000;
    else if (s_valid_w[44]) dispa[265:252] <= ghdl_gen_294_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[251:238] <= 14'h0000;
    else if (s_valid_w[45]) dispa[251:238] <= ghdl_gen_296_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[237:224] <= 14'h0000;
    else if (s_valid_w[46]) dispa[237:224] <= ghdl_gen_298_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[223:210] <= 14'h0000;
    else if (s_valid_w[47]) dispa[223:210] <= ghdl_gen_300_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[209:196] <= 14'h0000;
    else if (s_valid_w[48]) dispa[209:196] <= ghdl_gen_302_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[195:182] <= 14'h0000;
    else if (s_valid_w[49]) dispa[195:182] <= ghdl_gen_304_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[181:168] <= 14'h0000;
    else if (s_valid_w[50]) dispa[181:168] <= ghdl_gen_306_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[167:154] <= 14'h0000;
    else if (s_valid_w[51]) dispa[167:154] <= ghdl_gen_308_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[153:140] <= 14'h0000;
    else if (s_valid_w[52]) dispa[153:140] <= ghdl_gen_310_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[139:126] <= 14'h0000;
    else if (s_valid_w[53]) dispa[139:126] <= ghdl_gen_312_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[125:112] <= 14'h0000;
    else if (s_valid_w[54]) dispa[125:112] <= ghdl_gen_314_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[111:98] <= 14'h0000;
    else if (s_valid_w[55]) dispa[111:98] <= ghdl_gen_316_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[97:84] <= 14'h0000;
    else if (s_valid_w[56]) dispa[97:84] <= ghdl_gen_318_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[83:70] <= 14'h0000;
    else if (s_valid_w[57]) dispa[83:70] <= ghdl_gen_320_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[69:56] <= 14'h0000;
    else if (s_valid_w[58]) dispa[69:56] <= ghdl_gen_322_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[55:42] <= 14'h0000;
    else if (s_valid_w[59]) dispa[55:42] <= ghdl_gen_324_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[41:28] <= 14'h0000;
    else if (s_valid_w[60]) dispa[41:28] <= ghdl_gen_326_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[27:14] <= 14'h0000;
    else if (s_valid_w[61]) dispa[27:14] <= ghdl_gen_328_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) dispa[13:0] <= 14'h0000;
    else if (s_valid_w[62]) dispa[13:0] <= ghdl_gen_330_;
  reg [11:0] ghdl_gen_458_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_458_ <= 12'h000;
    else if (s_valid_w[0]) ghdl_gen_458_ <= ghdl_gen_000_;
  assign costol[767:756] = ghdl_gen_458_;
  reg [11:0] ghdl_gen_459_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_459_ <= 12'h000;
    else if (s_valid_w[1]) ghdl_gen_459_ <= ghdl_gen_002_;
  assign costol[755:744] = ghdl_gen_459_;
  reg [11:0] ghdl_gen_460_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_460_ <= 12'h000;
    else if (s_valid_w[2]) ghdl_gen_460_ <= ghdl_gen_004_;
  assign costol[743:732] = ghdl_gen_460_;
  reg [11:0] ghdl_gen_461_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_461_ <= 12'h000;
    else if (s_valid_w[3]) ghdl_gen_461_ <= ghdl_gen_006_;
  assign costol[731:720] = ghdl_gen_461_;
  reg [11:0] ghdl_gen_462_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_462_ <= 12'h000;
    else if (s_valid_w[4]) ghdl_gen_462_ <= ghdl_gen_008_;
  assign costol[719:708] = ghdl_gen_462_;
  reg [11:0] ghdl_gen_463_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_463_ <= 12'h000;
    else if (s_valid_w[5]) ghdl_gen_463_ <= ghdl_gen_010_;
  assign costol[707:696] = ghdl_gen_463_;
  reg [11:0] ghdl_gen_464_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_464_ <= 12'h000;
    else if (s_valid_w[6]) ghdl_gen_464_ <= ghdl_gen_012_;
  assign costol[695:684] = ghdl_gen_464_;
  reg [11:0] ghdl_gen_465_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_465_ <= 12'h000;
    else if (s_valid_w[7]) ghdl_gen_465_ <= ghdl_gen_014_;
  assign costol[683:672] = ghdl_gen_465_;
  reg [11:0] ghdl_gen_466_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_466_ <= 12'h000;
    else if (s_valid_w[8]) ghdl_gen_466_ <= ghdl_gen_016_;
  assign costol[671:660] = ghdl_gen_466_;
  reg [11:0] ghdl_gen_467_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_467_ <= 12'h000;
    else if (s_valid_w[9]) ghdl_gen_467_ <= ghdl_gen_018_;
  assign costol[659:648] = ghdl_gen_467_;
  reg [11:0] ghdl_gen_468_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_468_ <= 12'h000;
    else if (s_valid_w[10]) ghdl_gen_468_ <= ghdl_gen_020_;
  assign costol[647:636] = ghdl_gen_468_;
  reg [11:0] ghdl_gen_469_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_469_ <= 12'h000;
    else if (s_valid_w[11]) ghdl_gen_469_ <= ghdl_gen_022_;
  assign costol[635:624] = ghdl_gen_469_;
  reg [11:0] ghdl_gen_470_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_470_ <= 12'h000;
    else if (s_valid_w[12]) ghdl_gen_470_ <= ghdl_gen_024_;
  assign costol[623:612] = ghdl_gen_470_;
  reg [11:0] ghdl_gen_471_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_471_ <= 12'h000;
    else if (s_valid_w[13]) ghdl_gen_471_ <= ghdl_gen_026_;
  assign costol[611:600] = ghdl_gen_471_;
  reg [11:0] ghdl_gen_472_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_472_ <= 12'h000;
    else if (s_valid_w[14]) ghdl_gen_472_ <= ghdl_gen_028_;
  assign costol[599:588] = ghdl_gen_472_;
  reg [11:0] ghdl_gen_473_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_473_ <= 12'h000;
    else if (s_valid_w[15]) ghdl_gen_473_ <= ghdl_gen_030_;
  assign costol[587:576] = ghdl_gen_473_;
  reg [11:0] ghdl_gen_474_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_474_ <= 12'h000;
    else if (s_valid_w[16]) ghdl_gen_474_ <= ghdl_gen_032_;
  assign costol[575:564] = ghdl_gen_474_;
  reg [11:0] ghdl_gen_475_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_475_ <= 12'h000;
    else if (s_valid_w[17]) ghdl_gen_475_ <= ghdl_gen_034_;
  assign costol[563:552] = ghdl_gen_475_;
  reg [11:0] ghdl_gen_476_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_476_ <= 12'h000;
    else if (s_valid_w[18]) ghdl_gen_476_ <= ghdl_gen_036_;
  assign costol[551:540] = ghdl_gen_476_;
  reg [11:0] ghdl_gen_477_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_477_ <= 12'h000;
    else if (s_valid_w[19]) ghdl_gen_477_ <= ghdl_gen_038_;
  assign costol[539:528] = ghdl_gen_477_;
  reg [11:0] ghdl_gen_478_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_478_ <= 12'h000;
    else if (s_valid_w[20]) ghdl_gen_478_ <= ghdl_gen_040_;
  assign costol[527:516] = ghdl_gen_478_;
  reg [11:0] ghdl_gen_479_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_479_ <= 12'h000;
    else if (s_valid_w[21]) ghdl_gen_479_ <= ghdl_gen_042_;
  assign costol[515:504] = ghdl_gen_479_;
  reg [11:0] ghdl_gen_480_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_480_ <= 12'h000;
    else if (s_valid_w[22]) ghdl_gen_480_ <= ghdl_gen_044_;
  assign costol[503:492] = ghdl_gen_480_;
  reg [11:0] ghdl_gen_481_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_481_ <= 12'h000;
    else if (s_valid_w[23]) ghdl_gen_481_ <= ghdl_gen_046_;
  assign costol[491:480] = ghdl_gen_481_;
  reg [11:0] ghdl_gen_482_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_482_ <= 12'h000;
    else if (s_valid_w[24]) ghdl_gen_482_ <= ghdl_gen_048_;
  assign costol[479:468] = ghdl_gen_482_;
  reg [11:0] ghdl_gen_483_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_483_ <= 12'h000;
    else if (s_valid_w[25]) ghdl_gen_483_ <= ghdl_gen_050_;
  assign costol[467:456] = ghdl_gen_483_;
  reg [11:0] ghdl_gen_484_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_484_ <= 12'h000;
    else if (s_valid_w[26]) ghdl_gen_484_ <= ghdl_gen_052_;
  assign costol[455:444] = ghdl_gen_484_;
  reg [11:0] ghdl_gen_485_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_485_ <= 12'h000;
    else if (s_valid_w[27]) ghdl_gen_485_ <= ghdl_gen_054_;
  assign costol[443:432] = ghdl_gen_485_;
  reg [11:0] ghdl_gen_486_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_486_ <= 12'h000;
    else if (s_valid_w[28]) ghdl_gen_486_ <= ghdl_gen_056_;
  assign costol[431:420] = ghdl_gen_486_;
  reg [11:0] ghdl_gen_487_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_487_ <= 12'h000;
    else if (s_valid_w[29]) ghdl_gen_487_ <= ghdl_gen_058_;
  assign costol[419:408] = ghdl_gen_487_;
  reg [11:0] ghdl_gen_488_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_488_ <= 12'h000;
    else if (s_valid_w[30]) ghdl_gen_488_ <= ghdl_gen_060_;
  assign costol[407:396] = ghdl_gen_488_;
  reg [11:0] ghdl_gen_489_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_489_ <= 12'h000;
    else if (s_valid_w[31]) ghdl_gen_489_ <= ghdl_gen_062_;
  assign costol[395:384] = ghdl_gen_489_;
  reg [11:0] ghdl_gen_490_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_490_ <= 12'h000;
    else if (s_valid_w[32]) ghdl_gen_490_ <= ghdl_gen_064_;
  assign costol[383:372] = ghdl_gen_490_;
  reg [11:0] ghdl_gen_491_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_491_ <= 12'h000;
    else if (s_valid_w[33]) ghdl_gen_491_ <= ghdl_gen_066_;
  assign costol[371:360] = ghdl_gen_491_;
  reg [11:0] ghdl_gen_492_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_492_ <= 12'h000;
    else if (s_valid_w[34]) ghdl_gen_492_ <= ghdl_gen_068_;
  assign costol[359:348] = ghdl_gen_492_;
  reg [11:0] ghdl_gen_493_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_493_ <= 12'h000;
    else if (s_valid_w[35]) ghdl_gen_493_ <= ghdl_gen_070_;
  assign costol[347:336] = ghdl_gen_493_;
  reg [11:0] ghdl_gen_494_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_494_ <= 12'h000;
    else if (s_valid_w[36]) ghdl_gen_494_ <= ghdl_gen_072_;
  assign costol[335:324] = ghdl_gen_494_;
  reg [11:0] ghdl_gen_495_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_495_ <= 12'h000;
    else if (s_valid_w[37]) ghdl_gen_495_ <= ghdl_gen_074_;
  assign costol[323:312] = ghdl_gen_495_;
  reg [11:0] ghdl_gen_496_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_496_ <= 12'h000;
    else if (s_valid_w[38]) ghdl_gen_496_ <= ghdl_gen_076_;
  assign costol[311:300] = ghdl_gen_496_;
  reg [11:0] ghdl_gen_497_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_497_ <= 12'h000;
    else if (s_valid_w[39]) ghdl_gen_497_ <= ghdl_gen_078_;
  assign costol[299:288] = ghdl_gen_497_;
  reg [11:0] ghdl_gen_498_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_498_ <= 12'h000;
    else if (s_valid_w[40]) ghdl_gen_498_ <= ghdl_gen_080_;
  assign costol[287:276] = ghdl_gen_498_;
  reg [11:0] ghdl_gen_499_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_499_ <= 12'h000;
    else if (s_valid_w[41]) ghdl_gen_499_ <= ghdl_gen_082_;
  assign costol[275:264] = ghdl_gen_499_;
  reg [11:0] ghdl_gen_500_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_500_ <= 12'h000;
    else if (s_valid_w[42]) ghdl_gen_500_ <= ghdl_gen_084_;
  assign costol[263:252] = ghdl_gen_500_;
  reg [11:0] ghdl_gen_501_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_501_ <= 12'h000;
    else if (s_valid_w[43]) ghdl_gen_501_ <= ghdl_gen_086_;
  assign costol[251:240] = ghdl_gen_501_;
  reg [11:0] ghdl_gen_502_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_502_ <= 12'h000;
    else if (s_valid_w[44]) ghdl_gen_502_ <= ghdl_gen_088_;
  assign costol[239:228] = ghdl_gen_502_;
  reg [11:0] ghdl_gen_503_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_503_ <= 12'h000;
    else if (s_valid_w[45]) ghdl_gen_503_ <= ghdl_gen_090_;
  assign costol[227:216] = ghdl_gen_503_;
  reg [11:0] ghdl_gen_504_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_504_ <= 12'h000;
    else if (s_valid_w[46]) ghdl_gen_504_ <= ghdl_gen_092_;
  assign costol[215:204] = ghdl_gen_504_;
  reg [11:0] ghdl_gen_505_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_505_ <= 12'h000;
    else if (s_valid_w[47]) ghdl_gen_505_ <= ghdl_gen_094_;
  assign costol[203:192] = ghdl_gen_505_;
  reg [11:0] ghdl_gen_506_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_506_ <= 12'h000;
    else if (s_valid_w[48]) ghdl_gen_506_ <= ghdl_gen_096_;
  assign costol[191:180] = ghdl_gen_506_;
  reg [11:0] ghdl_gen_507_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_507_ <= 12'h000;
    else if (s_valid_w[49]) ghdl_gen_507_ <= ghdl_gen_098_;
  assign costol[179:168] = ghdl_gen_507_;
  reg [11:0] ghdl_gen_508_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_508_ <= 12'h000;
    else if (s_valid_w[50]) ghdl_gen_508_ <= ghdl_gen_100_;
  assign costol[167:156] = ghdl_gen_508_;
  reg [11:0] ghdl_gen_509_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_509_ <= 12'h000;
    else if (s_valid_w[51]) ghdl_gen_509_ <= ghdl_gen_102_;
  assign costol[155:144] = ghdl_gen_509_;
  reg [11:0] ghdl_gen_510_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_510_ <= 12'h000;
    else if (s_valid_w[52]) ghdl_gen_510_ <= ghdl_gen_104_;
  assign costol[143:132] = ghdl_gen_510_;
  reg [11:0] ghdl_gen_511_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_511_ <= 12'h000;
    else if (s_valid_w[53]) ghdl_gen_511_ <= ghdl_gen_106_;
  assign costol[131:120] = ghdl_gen_511_;
  reg [11:0] ghdl_gen_512_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_512_ <= 12'h000;
    else if (s_valid_w[54]) ghdl_gen_512_ <= ghdl_gen_108_;
  assign costol[119:108] = ghdl_gen_512_;
  reg [11:0] ghdl_gen_513_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_513_ <= 12'h000;
    else if (s_valid_w[55]) ghdl_gen_513_ <= ghdl_gen_110_;
  assign costol[107:96] = ghdl_gen_513_;
  reg [11:0] ghdl_gen_514_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_514_ <= 12'h000;
    else if (s_valid_w[56]) ghdl_gen_514_ <= ghdl_gen_112_;
  assign costol[95:84] = ghdl_gen_514_;
  reg [11:0] ghdl_gen_515_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_515_ <= 12'h000;
    else if (s_valid_w[57]) ghdl_gen_515_ <= ghdl_gen_114_;
  assign costol[83:72] = ghdl_gen_515_;
  reg [11:0] ghdl_gen_516_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_516_ <= 12'h000;
    else if (s_valid_w[58]) ghdl_gen_516_ <= ghdl_gen_116_;
  assign costol[71:60] = ghdl_gen_516_;
  reg [11:0] ghdl_gen_517_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_517_ <= 12'h000;
    else if (s_valid_w[59]) ghdl_gen_517_ <= ghdl_gen_118_;
  assign costol[59:48] = ghdl_gen_517_;
  reg [11:0] ghdl_gen_518_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_518_ <= 12'h000;
    else if (s_valid_w[60]) ghdl_gen_518_ <= ghdl_gen_120_;
  assign costol[47:36] = ghdl_gen_518_;
  reg [11:0] ghdl_gen_519_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_519_ <= 12'h000;
    else if (s_valid_w[61]) ghdl_gen_519_ <= ghdl_gen_122_;
  assign costol[35:24] = ghdl_gen_519_;
  reg [11:0] ghdl_gen_520_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_520_ <= 12'h000;
    else if (s_valid_w[62]) ghdl_gen_520_ <= ghdl_gen_124_;
  assign costol[23:12] = ghdl_gen_520_;
  reg [6:0] ghdl_gen_521_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_521_ <= 7'h00;
    else if (s_valid_w[0]) ghdl_gen_521_ <= ghdl_gen_001_;
  assign dispal[447:441] = ghdl_gen_521_;
  reg [6:0] ghdl_gen_522_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_522_ <= 7'h00;
    else if (s_valid_w[1]) ghdl_gen_522_ <= ghdl_gen_003_;
  assign dispal[440:434] = ghdl_gen_522_;
  reg [6:0] ghdl_gen_523_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_523_ <= 7'h00;
    else if (s_valid_w[2]) ghdl_gen_523_ <= ghdl_gen_005_;
  assign dispal[433:427] = ghdl_gen_523_;
  reg [6:0] ghdl_gen_524_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_524_ <= 7'h00;
    else if (s_valid_w[3]) ghdl_gen_524_ <= ghdl_gen_007_;
  assign dispal[426:420] = ghdl_gen_524_;
  reg [6:0] ghdl_gen_525_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_525_ <= 7'h00;
    else if (s_valid_w[4]) ghdl_gen_525_ <= ghdl_gen_009_;
  assign dispal[419:413] = ghdl_gen_525_;
  reg [6:0] ghdl_gen_526_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_526_ <= 7'h00;
    else if (s_valid_w[5]) ghdl_gen_526_ <= ghdl_gen_011_;
  assign dispal[412:406] = ghdl_gen_526_;
  reg [6:0] ghdl_gen_527_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_527_ <= 7'h00;
    else if (s_valid_w[6]) ghdl_gen_527_ <= ghdl_gen_013_;
  assign dispal[405:399] = ghdl_gen_527_;
  reg [6:0] ghdl_gen_528_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_528_ <= 7'h00;
    else if (s_valid_w[7]) ghdl_gen_528_ <= ghdl_gen_015_;
  assign dispal[398:392] = ghdl_gen_528_;
  reg [6:0] ghdl_gen_529_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_529_ <= 7'h00;
    else if (s_valid_w[8]) ghdl_gen_529_ <= ghdl_gen_017_;
  assign dispal[391:385] = ghdl_gen_529_;
  reg [6:0] ghdl_gen_530_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_530_ <= 7'h00;
    else if (s_valid_w[9]) ghdl_gen_530_ <= ghdl_gen_019_;
  assign dispal[384:378] = ghdl_gen_530_;
  reg [6:0] ghdl_gen_531_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_531_ <= 7'h00;
    else if (s_valid_w[10]) ghdl_gen_531_ <= ghdl_gen_021_;
  assign dispal[377:371] = ghdl_gen_531_;
  reg [6:0] ghdl_gen_532_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_532_ <= 7'h00;
    else if (s_valid_w[11]) ghdl_gen_532_ <= ghdl_gen_023_;
  assign dispal[370:364] = ghdl_gen_532_;
  reg [6:0] ghdl_gen_533_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_533_ <= 7'h00;
    else if (s_valid_w[12]) ghdl_gen_533_ <= ghdl_gen_025_;
  assign dispal[363:357] = ghdl_gen_533_;
  reg [6:0] ghdl_gen_534_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_534_ <= 7'h00;
    else if (s_valid_w[13]) ghdl_gen_534_ <= ghdl_gen_027_;
  assign dispal[356:350] = ghdl_gen_534_;
  reg [6:0] ghdl_gen_535_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_535_ <= 7'h00;
    else if (s_valid_w[14]) ghdl_gen_535_ <= ghdl_gen_029_;
  assign dispal[349:343] = ghdl_gen_535_;
  reg [6:0] ghdl_gen_536_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_536_ <= 7'h00;
    else if (s_valid_w[15]) ghdl_gen_536_ <= ghdl_gen_031_;
  assign dispal[342:336] = ghdl_gen_536_;
  reg [6:0] ghdl_gen_537_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_537_ <= 7'h00;
    else if (s_valid_w[16]) ghdl_gen_537_ <= ghdl_gen_033_;
  assign dispal[335:329] = ghdl_gen_537_;
  reg [6:0] ghdl_gen_538_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_538_ <= 7'h00;
    else if (s_valid_w[17]) ghdl_gen_538_ <= ghdl_gen_035_;
  assign dispal[328:322] = ghdl_gen_538_;
  reg [6:0] ghdl_gen_539_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_539_ <= 7'h00;
    else if (s_valid_w[18]) ghdl_gen_539_ <= ghdl_gen_037_;
  assign dispal[321:315] = ghdl_gen_539_;
  reg [6:0] ghdl_gen_540_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_540_ <= 7'h00;
    else if (s_valid_w[19]) ghdl_gen_540_ <= ghdl_gen_039_;
  assign dispal[314:308] = ghdl_gen_540_;
  reg [6:0] ghdl_gen_541_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_541_ <= 7'h00;
    else if (s_valid_w[20]) ghdl_gen_541_ <= ghdl_gen_041_;
  assign dispal[307:301] = ghdl_gen_541_;
  reg [6:0] ghdl_gen_542_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_542_ <= 7'h00;
    else if (s_valid_w[21]) ghdl_gen_542_ <= ghdl_gen_043_;
  assign dispal[300:294] = ghdl_gen_542_;
  reg [6:0] ghdl_gen_543_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_543_ <= 7'h00;
    else if (s_valid_w[22]) ghdl_gen_543_ <= ghdl_gen_045_;
  assign dispal[293:287] = ghdl_gen_543_;
  reg [6:0] ghdl_gen_544_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_544_ <= 7'h00;
    else if (s_valid_w[23]) ghdl_gen_544_ <= ghdl_gen_047_;
  assign dispal[286:280] = ghdl_gen_544_;
  reg [6:0] ghdl_gen_545_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_545_ <= 7'h00;
    else if (s_valid_w[24]) ghdl_gen_545_ <= ghdl_gen_049_;
  assign dispal[279:273] = ghdl_gen_545_;
  reg [6:0] ghdl_gen_546_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_546_ <= 7'h00;
    else if (s_valid_w[25]) ghdl_gen_546_ <= ghdl_gen_051_;
  assign dispal[272:266] = ghdl_gen_546_;
  reg [6:0] ghdl_gen_547_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_547_ <= 7'h00;
    else if (s_valid_w[26]) ghdl_gen_547_ <= ghdl_gen_053_;
  assign dispal[265:259] = ghdl_gen_547_;
  reg [6:0] ghdl_gen_548_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_548_ <= 7'h00;
    else if (s_valid_w[27]) ghdl_gen_548_ <= ghdl_gen_055_;
  assign dispal[258:252] = ghdl_gen_548_;
  reg [6:0] ghdl_gen_549_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_549_ <= 7'h00;
    else if (s_valid_w[28]) ghdl_gen_549_ <= ghdl_gen_057_;
  assign dispal[251:245] = ghdl_gen_549_;
  reg [6:0] ghdl_gen_550_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_550_ <= 7'h00;
    else if (s_valid_w[29]) ghdl_gen_550_ <= ghdl_gen_059_;
  assign dispal[244:238] = ghdl_gen_550_;
  reg [6:0] ghdl_gen_551_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_551_ <= 7'h00;
    else if (s_valid_w[30]) ghdl_gen_551_ <= ghdl_gen_061_;
  assign dispal[237:231] = ghdl_gen_551_;
  reg [6:0] ghdl_gen_552_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_552_ <= 7'h00;
    else if (s_valid_w[31]) ghdl_gen_552_ <= ghdl_gen_063_;
  assign dispal[230:224] = ghdl_gen_552_;
  reg [6:0] ghdl_gen_553_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_553_ <= 7'h00;
    else if (s_valid_w[32]) ghdl_gen_553_ <= ghdl_gen_065_;
  assign dispal[223:217] = ghdl_gen_553_;
  reg [6:0] ghdl_gen_554_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_554_ <= 7'h00;
    else if (s_valid_w[33]) ghdl_gen_554_ <= ghdl_gen_067_;
  assign dispal[216:210] = ghdl_gen_554_;
  reg [6:0] ghdl_gen_555_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_555_ <= 7'h00;
    else if (s_valid_w[34]) ghdl_gen_555_ <= ghdl_gen_069_;
  assign dispal[209:203] = ghdl_gen_555_;
  reg [6:0] ghdl_gen_556_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_556_ <= 7'h00;
    else if (s_valid_w[35]) ghdl_gen_556_ <= ghdl_gen_071_;
  assign dispal[202:196] = ghdl_gen_556_;
  reg [6:0] ghdl_gen_557_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_557_ <= 7'h00;
    else if (s_valid_w[36]) ghdl_gen_557_ <= ghdl_gen_073_;
  assign dispal[195:189] = ghdl_gen_557_;
  reg [6:0] ghdl_gen_558_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_558_ <= 7'h00;
    else if (s_valid_w[37]) ghdl_gen_558_ <= ghdl_gen_075_;
  assign dispal[188:182] = ghdl_gen_558_;
  reg [6:0] ghdl_gen_559_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_559_ <= 7'h00;
    else if (s_valid_w[38]) ghdl_gen_559_ <= ghdl_gen_077_;
  assign dispal[181:175] = ghdl_gen_559_;
  reg [6:0] ghdl_gen_560_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_560_ <= 7'h00;
    else if (s_valid_w[39]) ghdl_gen_560_ <= ghdl_gen_079_;
  assign dispal[174:168] = ghdl_gen_560_;
  reg [6:0] ghdl_gen_561_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_561_ <= 7'h00;
    else if (s_valid_w[40]) ghdl_gen_561_ <= ghdl_gen_081_;
  assign dispal[167:161] = ghdl_gen_561_;
  reg [6:0] ghdl_gen_562_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_562_ <= 7'h00;
    else if (s_valid_w[41]) ghdl_gen_562_ <= ghdl_gen_083_;
  assign dispal[160:154] = ghdl_gen_562_;
  reg [6:0] ghdl_gen_563_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_563_ <= 7'h00;
    else if (s_valid_w[42]) ghdl_gen_563_ <= ghdl_gen_085_;
  assign dispal[153:147] = ghdl_gen_563_;
  reg [6:0] ghdl_gen_564_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_564_ <= 7'h00;
    else if (s_valid_w[43]) ghdl_gen_564_ <= ghdl_gen_087_;
  assign dispal[146:140] = ghdl_gen_564_;
  reg [6:0] ghdl_gen_565_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_565_ <= 7'h00;
    else if (s_valid_w[44]) ghdl_gen_565_ <= ghdl_gen_089_;
  assign dispal[139:133] = ghdl_gen_565_;
  reg [6:0] ghdl_gen_566_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_566_ <= 7'h00;
    else if (s_valid_w[45]) ghdl_gen_566_ <= ghdl_gen_091_;
  assign dispal[132:126] = ghdl_gen_566_;
  reg [6:0] ghdl_gen_567_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_567_ <= 7'h00;
    else if (s_valid_w[46]) ghdl_gen_567_ <= ghdl_gen_093_;
  assign dispal[125:119] = ghdl_gen_567_;
  reg [6:0] ghdl_gen_568_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_568_ <= 7'h00;
    else if (s_valid_w[47]) ghdl_gen_568_ <= ghdl_gen_095_;
  assign dispal[118:112] = ghdl_gen_568_;
  reg [6:0] ghdl_gen_569_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_569_ <= 7'h00;
    else if (s_valid_w[48]) ghdl_gen_569_ <= ghdl_gen_097_;
  assign dispal[111:105] = ghdl_gen_569_;
  reg [6:0] ghdl_gen_570_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_570_ <= 7'h00;
    else if (s_valid_w[49]) ghdl_gen_570_ <= ghdl_gen_099_;
  assign dispal[104:98] = ghdl_gen_570_;
  reg [6:0] ghdl_gen_571_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_571_ <= 7'h00;
    else if (s_valid_w[50]) ghdl_gen_571_ <= ghdl_gen_101_;
  assign dispal[97:91] = ghdl_gen_571_;
  reg [6:0] ghdl_gen_572_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_572_ <= 7'h00;
    else if (s_valid_w[51]) ghdl_gen_572_ <= ghdl_gen_103_;
  assign dispal[90:84] = ghdl_gen_572_;
  reg [6:0] ghdl_gen_573_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_573_ <= 7'h00;
    else if (s_valid_w[52]) ghdl_gen_573_ <= ghdl_gen_105_;
  assign dispal[83:77] = ghdl_gen_573_;
  reg [6:0] ghdl_gen_574_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_574_ <= 7'h00;
    else if (s_valid_w[53]) ghdl_gen_574_ <= ghdl_gen_107_;
  assign dispal[76:70] = ghdl_gen_574_;
  reg [6:0] ghdl_gen_575_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_575_ <= 7'h00;
    else if (s_valid_w[54]) ghdl_gen_575_ <= ghdl_gen_109_;
  assign dispal[69:63] = ghdl_gen_575_;
  reg [6:0] ghdl_gen_576_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_576_ <= 7'h00;
    else if (s_valid_w[55]) ghdl_gen_576_ <= ghdl_gen_111_;
  assign dispal[62:56] = ghdl_gen_576_;
  reg [6:0] ghdl_gen_577_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_577_ <= 7'h00;
    else if (s_valid_w[56]) ghdl_gen_577_ <= ghdl_gen_113_;
  assign dispal[55:49] = ghdl_gen_577_;
  reg [6:0] ghdl_gen_578_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_578_ <= 7'h00;
    else if (s_valid_w[57]) ghdl_gen_578_ <= ghdl_gen_115_;
  assign dispal[48:42] = ghdl_gen_578_;
  reg [6:0] ghdl_gen_579_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_579_ <= 7'h00;
    else if (s_valid_w[58]) ghdl_gen_579_ <= ghdl_gen_117_;
  assign dispal[41:35] = ghdl_gen_579_;
  reg [6:0] ghdl_gen_580_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_580_ <= 7'h00;
    else if (s_valid_w[59]) ghdl_gen_580_ <= ghdl_gen_119_;
  assign dispal[34:28] = ghdl_gen_580_;
  reg [6:0] ghdl_gen_581_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_581_ <= 7'h00;
    else if (s_valid_w[60]) ghdl_gen_581_ <= ghdl_gen_121_;
  assign dispal[27:21] = ghdl_gen_581_;
  reg [6:0] ghdl_gen_582_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_582_ <= 7'h00;
    else if (s_valid_w[61]) ghdl_gen_582_ <= ghdl_gen_123_;
  assign dispal[20:14] = ghdl_gen_582_;
  reg [6:0] ghdl_gen_583_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) ghdl_gen_583_ <= 7'h00;
    else if (s_valid_w[62]) ghdl_gen_583_ <= ghdl_gen_125_;
  assign dispal[13:7] = ghdl_gen_583_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) \9426.v_valid_in  <= 127'h00000000000000000000000000000000;
    else if (i_dval) \9426.v_valid_in  <= ghdl_gen_132_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) \9450.v_valid_in  <= 127'h00000000000000000000000000000000;
    else if (i_dval) \9450.v_valid_in  <= ghdl_gen_138_;
  always @(posedge i_clk)
    if (ghdl_gen_139_) \9450.count  <= ghdl_gen_140_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) delay_reg <= 448'h0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    else if (s_valid_w[63]) delay_reg <= ghdl_gen_130_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) slide_window_rl <= 3048'h
    else if (i_dval) slide_window_rl <= ghdl_gen_128_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) slide_window_ll <= 1536'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    else if (i_dval) slide_window_ll <= ghdl_gen_126_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) slide_window_lh <= 1536'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    else if (i_dval) slide_window_lh <= ghdl_gen_127_;
  assign ghdl_gen_205_ = s_valid_w[0] ? { s_sum_w[767:756], costo[1511:1500] } : 24'hxxxxxx;
  assign ghdl_gen_206_ = s_valid_w[0] ? { 7'h00, dispa[881:875] } : 14'hxxxx;
  assign ghdl_gen_207_ = s_valid_w[1] ? { cmpcosto[755:744], costo[1487:1476] } : 24'hxxxxxx;
  assign ghdl_gen_208_ = s_valid_w[1] ? { cmpdispa[440:434], dispa[867:861] } : 14'hxxxx;
  assign ghdl_gen_209_ = s_valid_w[2] ? { cmpcosto[743:732], costo[1463:1452] } : 24'hxxxxxx;
  assign ghdl_gen_210_ = s_valid_w[2] ? { cmpdispa[433:427], dispa[853:847] } : 14'hxxxx;
  assign ghdl_gen_211_ = s_valid_w[3] ? { cmpcosto[731:720], costo[1439:1428] } : 24'hxxxxxx;
  assign ghdl_gen_212_ = s_valid_w[3] ? { cmpdispa[426:420], dispa[839:833] } : 14'hxxxx;
  assign ghdl_gen_213_ = s_valid_w[4] ? { cmpcosto[719:708], costo[1415:1404] } : 24'hxxxxxx;
  assign ghdl_gen_214_ = s_valid_w[4] ? { cmpdispa[419:413], dispa[825:819] } : 14'hxxxx;
  assign ghdl_gen_215_ = s_valid_w[5] ? { cmpcosto[707:696], costo[1391:1380] } : 24'hxxxxxx;
  assign ghdl_gen_216_ = s_valid_w[5] ? { cmpdispa[412:406], dispa[811:805] } : 14'hxxxx;
  assign ghdl_gen_217_ = s_valid_w[6] ? { cmpcosto[695:684], costo[1367:1356] } : 24'hxxxxxx;
  assign ghdl_gen_218_ = s_valid_w[6] ? { cmpdispa[405:399], dispa[797:791] } : 14'hxxxx;
  assign ghdl_gen_219_ = s_valid_w[7] ? { cmpcosto[683:672], costo[1343:1332] } : 24'hxxxxxx;
  assign ghdl_gen_220_ = s_valid_w[7] ? { cmpdispa[398:392], dispa[783:777] } : 14'hxxxx;
  assign ghdl_gen_221_ = s_valid_w[8] ? { cmpcosto[671:660], costo[1319:1308] } : 24'hxxxxxx;
  assign ghdl_gen_222_ = s_valid_w[8] ? { cmpdispa[391:385], dispa[769:763] } : 14'hxxxx;
  assign ghdl_gen_223_ = s_valid_w[9] ? { cmpcosto[659:648], costo[1295:1284] } : 24'hxxxxxx;
  assign ghdl_gen_224_ = s_valid_w[9] ? { cmpdispa[384:378], dispa[755:749] } : 14'hxxxx;
  assign ghdl_gen_225_ = s_valid_w[10] ? { cmpcosto[647:636], costo[1271:1260] } : 24'hxxxxxx;
  assign ghdl_gen_226_ = s_valid_w[10] ? { cmpdispa[377:371], dispa[741:735] } : 14'hxxxx;
  assign ghdl_gen_227_ = s_valid_w[11] ? { cmpcosto[635:624], costo[1247:1236] } : 24'hxxxxxx;
  assign ghdl_gen_228_ = s_valid_w[11] ? { cmpdispa[370:364], dispa[727:721] } : 14'hxxxx;
  assign ghdl_gen_229_ = s_valid_w[12] ? { cmpcosto[623:612], costo[1223:1212] } : 24'hxxxxxx;
  assign ghdl_gen_230_ = s_valid_w[12] ? { cmpdispa[363:357], dispa[713:707] } : 14'hxxxx;
  assign ghdl_gen_231_ = s_valid_w[13] ? { cmpcosto[611:600], costo[1199:1188] } : 24'hxxxxxx;
  assign ghdl_gen_232_ = s_valid_w[13] ? { cmpdispa[356:350], dispa[699:693] } : 14'hxxxx;
  assign ghdl_gen_233_ = s_valid_w[14] ? { cmpcosto[599:588], costo[1175:1164] } : 24'hxxxxxx;
  assign ghdl_gen_234_ = s_valid_w[14] ? { cmpdispa[349:343], dispa[685:679] } : 14'hxxxx;
  assign ghdl_gen_235_ = s_valid_w[15] ? { cmpcosto[587:576], costo[1151:1140] } : 24'hxxxxxx;
  assign ghdl_gen_236_ = s_valid_w[15] ? { cmpdispa[342:336], dispa[671:665] } : 14'hxxxx;
  assign ghdl_gen_237_ = s_valid_w[16] ? { cmpcosto[575:564], costo[1127:1116] } : 24'hxxxxxx;
  assign ghdl_gen_238_ = s_valid_w[16] ? { cmpdispa[335:329], dispa[657:651] } : 14'hxxxx;
  assign ghdl_gen_239_ = s_valid_w[17] ? { cmpcosto[563:552], costo[1103:1092] } : 24'hxxxxxx;
  assign ghdl_gen_240_ = s_valid_w[17] ? { cmpdispa[328:322], dispa[643:637] } : 14'hxxxx;
  assign ghdl_gen_241_ = s_valid_w[18] ? { cmpcosto[551:540], costo[1079:1068] } : 24'hxxxxxx;
  assign ghdl_gen_242_ = s_valid_w[18] ? { cmpdispa[321:315], dispa[629:623] } : 14'hxxxx;
  assign ghdl_gen_243_ = s_valid_w[19] ? { cmpcosto[539:528], costo[1055:1044] } : 24'hxxxxxx;
  assign ghdl_gen_244_ = s_valid_w[19] ? { cmpdispa[314:308], dispa[615:609] } : 14'hxxxx;
  assign ghdl_gen_245_ = s_valid_w[20] ? { cmpcosto[527:516], costo[1031:1020] } : 24'hxxxxxx;
  assign ghdl_gen_246_ = s_valid_w[20] ? { cmpdispa[307:301], dispa[601:595] } : 14'hxxxx;
  assign ghdl_gen_247_ = s_valid_w[21] ? { cmpcosto[515:504], costo[1007:996] } : 24'hxxxxxx;
  assign ghdl_gen_248_ = s_valid_w[21] ? { cmpdispa[300:294], dispa[587:581] } : 14'hxxxx;
  assign ghdl_gen_249_ = s_valid_w[22] ? { cmpcosto[503:492], costo[983:972] } : 24'hxxxxxx;
  assign ghdl_gen_250_ = s_valid_w[22] ? { cmpdispa[293:287], dispa[573:567] } : 14'hxxxx;
  assign ghdl_gen_251_ = s_valid_w[23] ? { cmpcosto[491:480], costo[959:948] } : 24'hxxxxxx;
  assign ghdl_gen_252_ = s_valid_w[23] ? { cmpdispa[286:280], dispa[559:553] } : 14'hxxxx;
  assign ghdl_gen_253_ = s_valid_w[24] ? { cmpcosto[479:468], costo[935:924] } : 24'hxxxxxx;
  assign ghdl_gen_254_ = s_valid_w[24] ? { cmpdispa[279:273], dispa[545:539] } : 14'hxxxx;
  assign ghdl_gen_255_ = s_valid_w[25] ? { cmpcosto[467:456], costo[911:900] } : 24'hxxxxxx;
  assign ghdl_gen_256_ = s_valid_w[25] ? { cmpdispa[272:266], dispa[531:525] } : 14'hxxxx;
  assign ghdl_gen_257_ = s_valid_w[26] ? { cmpcosto[455:444], costo[887:876] } : 24'hxxxxxx;
  assign ghdl_gen_258_ = s_valid_w[26] ? { cmpdispa[265:259], dispa[517:511] } : 14'hxxxx;
  assign ghdl_gen_259_ = s_valid_w[27] ? { cmpcosto[443:432], costo[863:852] } : 24'hxxxxxx;
  assign ghdl_gen_260_ = s_valid_w[27] ? { cmpdispa[258:252], dispa[503:497] } : 14'hxxxx;
  assign ghdl_gen_261_ = s_valid_w[28] ? { cmpcosto[431:420], costo[839:828] } : 24'hxxxxxx;
  assign ghdl_gen_262_ = s_valid_w[28] ? { cmpdispa[251:245], dispa[489:483] } : 14'hxxxx;
  assign ghdl_gen_263_ = s_valid_w[29] ? { cmpcosto[419:408], costo[815:804] } : 24'hxxxxxx;
  assign ghdl_gen_264_ = s_valid_w[29] ? { cmpdispa[244:238], dispa[475:469] } : 14'hxxxx;
  assign ghdl_gen_265_ = s_valid_w[30] ? { cmpcosto[407:396], costo[791:780] } : 24'hxxxxxx;
  assign ghdl_gen_266_ = s_valid_w[30] ? { cmpdispa[237:231], dispa[461:455] } : 14'hxxxx;
  assign ghdl_gen_267_ = s_valid_w[31] ? { cmpcosto[395:384], costo[767:756] } : 24'hxxxxxx;
  assign ghdl_gen_268_ = s_valid_w[31] ? { cmpdispa[230:224], dispa[447:441] } : 14'hxxxx;
  assign ghdl_gen_269_ = s_valid_w[32] ? { cmpcosto[383:372], costo[743:732] } : 24'hxxxxxx;
  assign ghdl_gen_270_ = s_valid_w[32] ? { cmpdispa[223:217], dispa[433:427] } : 14'hxxxx;
  assign ghdl_gen_271_ = s_valid_w[33] ? { cmpcosto[371:360], costo[719:708] } : 24'hxxxxxx;
  assign ghdl_gen_272_ = s_valid_w[33] ? { cmpdispa[216:210], dispa[419:413] } : 14'hxxxx;
  assign ghdl_gen_273_ = s_valid_w[34] ? { cmpcosto[359:348], costo[695:684] } : 24'hxxxxxx;
  assign ghdl_gen_274_ = s_valid_w[34] ? { cmpdispa[209:203], dispa[405:399] } : 14'hxxxx;
  assign ghdl_gen_275_ = s_valid_w[35] ? { cmpcosto[347:336], costo[671:660] } : 24'hxxxxxx;
  assign ghdl_gen_276_ = s_valid_w[35] ? { cmpdispa[202:196], dispa[391:385] } : 14'hxxxx;
  assign ghdl_gen_277_ = s_valid_w[36] ? { cmpcosto[335:324], costo[647:636] } : 24'hxxxxxx;
  assign ghdl_gen_278_ = s_valid_w[36] ? { cmpdispa[195:189], dispa[377:371] } : 14'hxxxx;
  assign ghdl_gen_279_ = s_valid_w[37] ? { cmpcosto[323:312], costo[623:612] } : 24'hxxxxxx;
  assign ghdl_gen_280_ = s_valid_w[37] ? { cmpdispa[188:182], dispa[363:357] } : 14'hxxxx;
  assign ghdl_gen_281_ = s_valid_w[38] ? { cmpcosto[311:300], costo[599:588] } : 24'hxxxxxx;
  assign ghdl_gen_282_ = s_valid_w[38] ? { cmpdispa[181:175], dispa[349:343] } : 14'hxxxx;
  assign ghdl_gen_283_ = s_valid_w[39] ? { cmpcosto[299:288], costo[575:564] } : 24'hxxxxxx;
  assign ghdl_gen_284_ = s_valid_w[39] ? { cmpdispa[174:168], dispa[335:329] } : 14'hxxxx;
  assign ghdl_gen_285_ = s_valid_w[40] ? { cmpcosto[287:276], costo[551:540] } : 24'hxxxxxx;
  assign ghdl_gen_286_ = s_valid_w[40] ? { cmpdispa[167:161], dispa[321:315] } : 14'hxxxx;
  assign ghdl_gen_287_ = s_valid_w[41] ? { cmpcosto[275:264], costo[527:516] } : 24'hxxxxxx;
  assign ghdl_gen_288_ = s_valid_w[41] ? { cmpdispa[160:154], dispa[307:301] } : 14'hxxxx;
  assign ghdl_gen_289_ = s_valid_w[42] ? { cmpcosto[263:252], costo[503:492] } : 24'hxxxxxx;
  assign ghdl_gen_290_ = s_valid_w[42] ? { cmpdispa[153:147], dispa[293:287] } : 14'hxxxx;
  assign ghdl_gen_291_ = s_valid_w[43] ? { cmpcosto[251:240], costo[479:468] } : 24'hxxxxxx;
  assign ghdl_gen_292_ = s_valid_w[43] ? { cmpdispa[146:140], dispa[279:273] } : 14'hxxxx;
  assign ghdl_gen_293_ = s_valid_w[44] ? { cmpcosto[239:228], costo[455:444] } : 24'hxxxxxx;
  assign ghdl_gen_294_ = s_valid_w[44] ? { cmpdispa[139:133], dispa[265:259] } : 14'hxxxx;
  assign ghdl_gen_295_ = s_valid_w[45] ? { cmpcosto[227:216], costo[431:420] } : 24'hxxxxxx;
  assign ghdl_gen_296_ = s_valid_w[45] ? { cmpdispa[132:126], dispa[251:245] } : 14'hxxxx;
  assign ghdl_gen_297_ = s_valid_w[46] ? { cmpcosto[215:204], costo[407:396] } : 24'hxxxxxx;
  assign ghdl_gen_298_ = s_valid_w[46] ? { cmpdispa[125:119], dispa[237:231] } : 14'hxxxx;
  assign ghdl_gen_299_ = s_valid_w[47] ? { cmpcosto[203:192], costo[383:372] } : 24'hxxxxxx;
  assign ghdl_gen_300_ = s_valid_w[47] ? { cmpdispa[118:112], dispa[223:217] } : 14'hxxxx;
  assign ghdl_gen_301_ = s_valid_w[48] ? { cmpcosto[191:180], costo[359:348] } : 24'hxxxxxx;
  assign ghdl_gen_302_ = s_valid_w[48] ? { cmpdispa[111:105], dispa[209:203] } : 14'hxxxx;
  assign ghdl_gen_303_ = s_valid_w[49] ? { cmpcosto[179:168], costo[335:324] } : 24'hxxxxxx;
  assign ghdl_gen_304_ = s_valid_w[49] ? { cmpdispa[104:98], dispa[195:189] } : 14'hxxxx;
  assign ghdl_gen_305_ = s_valid_w[50] ? { cmpcosto[167:156], costo[311:300] } : 24'hxxxxxx;
  assign ghdl_gen_306_ = s_valid_w[50] ? { cmpdispa[97:91], dispa[181:175] } : 14'hxxxx;
  assign ghdl_gen_307_ = s_valid_w[51] ? { cmpcosto[155:144], costo[287:276] } : 24'hxxxxxx;
  assign ghdl_gen_308_ = s_valid_w[51] ? { cmpdispa[90:84], dispa[167:161] } : 14'hxxxx;
  assign ghdl_gen_309_ = s_valid_w[52] ? { cmpcosto[143:132], costo[263:252] } : 24'hxxxxxx;
  assign ghdl_gen_310_ = s_valid_w[52] ? { cmpdispa[83:77], dispa[153:147] } : 14'hxxxx;
  assign ghdl_gen_311_ = s_valid_w[53] ? { cmpcosto[131:120], costo[239:228] } : 24'hxxxxxx;
  assign ghdl_gen_312_ = s_valid_w[53] ? { cmpdispa[76:70], dispa[139:133] } : 14'hxxxx;
  assign ghdl_gen_313_ = s_valid_w[54] ? { cmpcosto[119:108], costo[215:204] } : 24'hxxxxxx;
  assign ghdl_gen_314_ = s_valid_w[54] ? { cmpdispa[69:63], dispa[125:119] } : 14'hxxxx;
  assign ghdl_gen_315_ = s_valid_w[55] ? { cmpcosto[107:96], costo[191:180] } : 24'hxxxxxx;
  assign ghdl_gen_316_ = s_valid_w[55] ? { cmpdispa[62:56], dispa[111:105] } : 14'hxxxx;
  assign ghdl_gen_317_ = s_valid_w[56] ? { cmpcosto[95:84], costo[167:156] } : 24'hxxxxxx;
  assign ghdl_gen_318_ = s_valid_w[56] ? { cmpdispa[55:49], dispa[97:91] } : 14'hxxxx;
  assign ghdl_gen_319_ = s_valid_w[57] ? { cmpcosto[83:72], costo[143:132] } : 24'hxxxxxx;
  assign ghdl_gen_320_ = s_valid_w[57] ? { cmpdispa[48:42], dispa[83:77] } : 14'hxxxx;
  assign ghdl_gen_321_ = s_valid_w[58] ? { cmpcosto[71:60], costo[119:108] } : 24'hxxxxxx;
  assign ghdl_gen_322_ = s_valid_w[58] ? { cmpdispa[41:35], dispa[69:63] } : 14'hxxxx;
  assign ghdl_gen_323_ = s_valid_w[59] ? { cmpcosto[59:48], costo[95:84] } : 24'hxxxxxx;
  assign ghdl_gen_324_ = s_valid_w[59] ? { cmpdispa[34:28], dispa[55:49] } : 14'hxxxx;
  assign ghdl_gen_325_ = s_valid_w[60] ? { cmpcosto[47:36], costo[71:60] } : 24'hxxxxxx;
  assign ghdl_gen_326_ = s_valid_w[60] ? { cmpdispa[27:21], dispa[41:35] } : 14'hxxxx;
  assign ghdl_gen_327_ = s_valid_w[61] ? { cmpcosto[35:24], costo[47:36] } : 24'hxxxxxx;
  assign ghdl_gen_328_ = s_valid_w[61] ? { cmpdispa[20:14], dispa[27:21] } : 14'hxxxx;
  assign ghdl_gen_329_ = s_valid_w[62] ? { cmpcosto[23:12], costo[23:12] } : 24'hxxxxxx;
  assign ghdl_gen_330_ = s_valid_w[62] ? { cmpdispa[13:7], dispa[13:7] } : 14'hxxxx;
  assign ghdl_gen_000_ = s_valid_w[0] ? s_sum_w[767:756] : 12'hxxx;
  assign ghdl_gen_001_ = s_valid_w[0] ? 7'h00 : 7'hxx;
  assign ghdl_gen_002_ = s_valid_w[1] ? cmpcostol[755:744] : 12'hxxx;
  assign ghdl_gen_003_ = s_valid_w[1] ? cmpdispal[440:434] : 7'hxx;
  assign ghdl_gen_004_ = s_valid_w[2] ? cmpcostol[743:732] : 12'hxxx;
  assign ghdl_gen_005_ = s_valid_w[2] ? cmpdispal[433:427] : 7'hxx;
  assign ghdl_gen_006_ = s_valid_w[3] ? cmpcostol[731:720] : 12'hxxx;
  assign ghdl_gen_007_ = s_valid_w[3] ? cmpdispal[426:420] : 7'hxx;
  assign ghdl_gen_008_ = s_valid_w[4] ? cmpcostol[719:708] : 12'hxxx;
  assign ghdl_gen_009_ = s_valid_w[4] ? cmpdispal[419:413] : 7'hxx;
  assign ghdl_gen_010_ = s_valid_w[5] ? cmpcostol[707:696] : 12'hxxx;
  assign ghdl_gen_011_ = s_valid_w[5] ? cmpdispal[412:406] : 7'hxx;
  assign ghdl_gen_012_ = s_valid_w[6] ? cmpcostol[695:684] : 12'hxxx;
  assign ghdl_gen_013_ = s_valid_w[6] ? cmpdispal[405:399] : 7'hxx;
  assign ghdl_gen_014_ = s_valid_w[7] ? cmpcostol[683:672] : 12'hxxx;
  assign ghdl_gen_015_ = s_valid_w[7] ? cmpdispal[398:392] : 7'hxx;
  assign ghdl_gen_016_ = s_valid_w[8] ? cmpcostol[671:660] : 12'hxxx;
  assign ghdl_gen_017_ = s_valid_w[8] ? cmpdispal[391:385] : 7'hxx;
  assign ghdl_gen_018_ = s_valid_w[9] ? cmpcostol[659:648] : 12'hxxx;
  assign ghdl_gen_019_ = s_valid_w[9] ? cmpdispal[384:378] : 7'hxx;
  assign ghdl_gen_020_ = s_valid_w[10] ? cmpcostol[647:636] : 12'hxxx;
  assign ghdl_gen_021_ = s_valid_w[10] ? cmpdispal[377:371] : 7'hxx;
  assign ghdl_gen_022_ = s_valid_w[11] ? cmpcostol[635:624] : 12'hxxx;
  assign ghdl_gen_023_ = s_valid_w[11] ? cmpdispal[370:364] : 7'hxx;
  assign ghdl_gen_024_ = s_valid_w[12] ? cmpcostol[623:612] : 12'hxxx;
  assign ghdl_gen_025_ = s_valid_w[12] ? cmpdispal[363:357] : 7'hxx;
  assign ghdl_gen_026_ = s_valid_w[13] ? cmpcostol[611:600] : 12'hxxx;
  assign ghdl_gen_027_ = s_valid_w[13] ? cmpdispal[356:350] : 7'hxx;
  assign ghdl_gen_028_ = s_valid_w[14] ? cmpcostol[599:588] : 12'hxxx;
  assign ghdl_gen_029_ = s_valid_w[14] ? cmpdispal[349:343] : 7'hxx;
  assign ghdl_gen_030_ = s_valid_w[15] ? cmpcostol[587:576] : 12'hxxx;
  assign ghdl_gen_031_ = s_valid_w[15] ? cmpdispal[342:336] : 7'hxx;
  assign ghdl_gen_032_ = s_valid_w[16] ? cmpcostol[575:564] : 12'hxxx;
  assign ghdl_gen_033_ = s_valid_w[16] ? cmpdispal[335:329] : 7'hxx;
  assign ghdl_gen_034_ = s_valid_w[17] ? cmpcostol[563:552] : 12'hxxx;
  assign ghdl_gen_035_ = s_valid_w[17] ? cmpdispal[328:322] : 7'hxx;
  assign ghdl_gen_036_ = s_valid_w[18] ? cmpcostol[551:540] : 12'hxxx;
  assign ghdl_gen_037_ = s_valid_w[18] ? cmpdispal[321:315] : 7'hxx;
  assign ghdl_gen_038_ = s_valid_w[19] ? cmpcostol[539:528] : 12'hxxx;
  assign ghdl_gen_039_ = s_valid_w[19] ? cmpdispal[314:308] : 7'hxx;
  assign ghdl_gen_040_ = s_valid_w[20] ? cmpcostol[527:516] : 12'hxxx;
  assign ghdl_gen_041_ = s_valid_w[20] ? cmpdispal[307:301] : 7'hxx;
  assign ghdl_gen_042_ = s_valid_w[21] ? cmpcostol[515:504] : 12'hxxx;
  assign ghdl_gen_043_ = s_valid_w[21] ? cmpdispal[300:294] : 7'hxx;
  assign ghdl_gen_044_ = s_valid_w[22] ? cmpcostol[503:492] : 12'hxxx;
  assign ghdl_gen_045_ = s_valid_w[22] ? cmpdispal[293:287] : 7'hxx;
  assign ghdl_gen_046_ = s_valid_w[23] ? cmpcostol[491:480] : 12'hxxx;
  assign ghdl_gen_047_ = s_valid_w[23] ? cmpdispal[286:280] : 7'hxx;
  assign ghdl_gen_048_ = s_valid_w[24] ? cmpcostol[479:468] : 12'hxxx;
  assign ghdl_gen_049_ = s_valid_w[24] ? cmpdispal[279:273] : 7'hxx;
  assign ghdl_gen_050_ = s_valid_w[25] ? cmpcostol[467:456] : 12'hxxx;
  assign ghdl_gen_051_ = s_valid_w[25] ? cmpdispal[272:266] : 7'hxx;
  assign ghdl_gen_052_ = s_valid_w[26] ? cmpcostol[455:444] : 12'hxxx;
  assign ghdl_gen_053_ = s_valid_w[26] ? cmpdispal[265:259] : 7'hxx;
  assign ghdl_gen_054_ = s_valid_w[27] ? cmpcostol[443:432] : 12'hxxx;
  assign ghdl_gen_055_ = s_valid_w[27] ? cmpdispal[258:252] : 7'hxx;
  assign ghdl_gen_056_ = s_valid_w[28] ? cmpcostol[431:420] : 12'hxxx;
  assign ghdl_gen_057_ = s_valid_w[28] ? cmpdispal[251:245] : 7'hxx;
  assign ghdl_gen_058_ = s_valid_w[29] ? cmpcostol[419:408] : 12'hxxx;
  assign ghdl_gen_059_ = s_valid_w[29] ? cmpdispal[244:238] : 7'hxx;
  assign ghdl_gen_060_ = s_valid_w[30] ? cmpcostol[407:396] : 12'hxxx;
  assign ghdl_gen_061_ = s_valid_w[30] ? cmpdispal[237:231] : 7'hxx;
  assign ghdl_gen_062_ = s_valid_w[31] ? cmpcostol[395:384] : 12'hxxx;
  assign ghdl_gen_063_ = s_valid_w[31] ? cmpdispal[230:224] : 7'hxx;
  assign ghdl_gen_064_ = s_valid_w[32] ? cmpcostol[383:372] : 12'hxxx;
  assign ghdl_gen_065_ = s_valid_w[32] ? cmpdispal[223:217] : 7'hxx;
  assign ghdl_gen_066_ = s_valid_w[33] ? cmpcostol[371:360] : 12'hxxx;
  assign ghdl_gen_067_ = s_valid_w[33] ? cmpdispal[216:210] : 7'hxx;
  assign ghdl_gen_068_ = s_valid_w[34] ? cmpcostol[359:348] : 12'hxxx;
  assign ghdl_gen_069_ = s_valid_w[34] ? cmpdispal[209:203] : 7'hxx;
  assign ghdl_gen_070_ = s_valid_w[35] ? cmpcostol[347:336] : 12'hxxx;
  assign ghdl_gen_071_ = s_valid_w[35] ? cmpdispal[202:196] : 7'hxx;
  assign ghdl_gen_072_ = s_valid_w[36] ? cmpcostol[335:324] : 12'hxxx;
  assign ghdl_gen_073_ = s_valid_w[36] ? cmpdispal[195:189] : 7'hxx;
  assign ghdl_gen_074_ = s_valid_w[37] ? cmpcostol[323:312] : 12'hxxx;
  assign ghdl_gen_075_ = s_valid_w[37] ? cmpdispal[188:182] : 7'hxx;
  assign ghdl_gen_076_ = s_valid_w[38] ? cmpcostol[311:300] : 12'hxxx;
  assign ghdl_gen_077_ = s_valid_w[38] ? cmpdispal[181:175] : 7'hxx;
  assign ghdl_gen_078_ = s_valid_w[39] ? cmpcostol[299:288] : 12'hxxx;
  assign ghdl_gen_079_ = s_valid_w[39] ? cmpdispal[174:168] : 7'hxx;
  assign ghdl_gen_080_ = s_valid_w[40] ? cmpcostol[287:276] : 12'hxxx;
  assign ghdl_gen_081_ = s_valid_w[40] ? cmpdispal[167:161] : 7'hxx;
  assign ghdl_gen_082_ = s_valid_w[41] ? cmpcostol[275:264] : 12'hxxx;
  assign ghdl_gen_083_ = s_valid_w[41] ? cmpdispal[160:154] : 7'hxx;
  assign ghdl_gen_084_ = s_valid_w[42] ? cmpcostol[263:252] : 12'hxxx;
  assign ghdl_gen_085_ = s_valid_w[42] ? cmpdispal[153:147] : 7'hxx;
  assign ghdl_gen_086_ = s_valid_w[43] ? cmpcostol[251:240] : 12'hxxx;
  assign ghdl_gen_087_ = s_valid_w[43] ? cmpdispal[146:140] : 7'hxx;
  assign ghdl_gen_088_ = s_valid_w[44] ? cmpcostol[239:228] : 12'hxxx;
  assign ghdl_gen_089_ = s_valid_w[44] ? cmpdispal[139:133] : 7'hxx;
  assign ghdl_gen_090_ = s_valid_w[45] ? cmpcostol[227:216] : 12'hxxx;
  assign ghdl_gen_091_ = s_valid_w[45] ? cmpdispal[132:126] : 7'hxx;
  assign ghdl_gen_092_ = s_valid_w[46] ? cmpcostol[215:204] : 12'hxxx;
  assign ghdl_gen_093_ = s_valid_w[46] ? cmpdispal[125:119] : 7'hxx;
  assign ghdl_gen_094_ = s_valid_w[47] ? cmpcostol[203:192] : 12'hxxx;
  assign ghdl_gen_095_ = s_valid_w[47] ? cmpdispal[118:112] : 7'hxx;
  assign ghdl_gen_096_ = s_valid_w[48] ? cmpcostol[191:180] : 12'hxxx;
  assign ghdl_gen_097_ = s_valid_w[48] ? cmpdispal[111:105] : 7'hxx;
  assign ghdl_gen_098_ = s_valid_w[49] ? cmpcostol[179:168] : 12'hxxx;
  assign ghdl_gen_099_ = s_valid_w[49] ? cmpdispal[104:98] : 7'hxx;
  assign ghdl_gen_100_ = s_valid_w[50] ? cmpcostol[167:156] : 12'hxxx;
  assign ghdl_gen_101_ = s_valid_w[50] ? cmpdispal[97:91] : 7'hxx;
  assign ghdl_gen_102_ = s_valid_w[51] ? cmpcostol[155:144] : 12'hxxx;
  assign ghdl_gen_103_ = s_valid_w[51] ? cmpdispal[90:84] : 7'hxx;
  assign ghdl_gen_104_ = s_valid_w[52] ? cmpcostol[143:132] : 12'hxxx;
  assign ghdl_gen_105_ = s_valid_w[52] ? cmpdispal[83:77] : 7'hxx;
  assign ghdl_gen_106_ = s_valid_w[53] ? cmpcostol[131:120] : 12'hxxx;
  assign ghdl_gen_107_ = s_valid_w[53] ? cmpdispal[76:70] : 7'hxx;
  assign ghdl_gen_108_ = s_valid_w[54] ? cmpcostol[119:108] : 12'hxxx;
  assign ghdl_gen_109_ = s_valid_w[54] ? cmpdispal[69:63] : 7'hxx;
  assign ghdl_gen_110_ = s_valid_w[55] ? cmpcostol[107:96] : 12'hxxx;
  assign ghdl_gen_111_ = s_valid_w[55] ? cmpdispal[62:56] : 7'hxx;
  assign ghdl_gen_112_ = s_valid_w[56] ? cmpcostol[95:84] : 12'hxxx;
  assign ghdl_gen_113_ = s_valid_w[56] ? cmpdispal[55:49] : 7'hxx;
  assign ghdl_gen_114_ = s_valid_w[57] ? cmpcostol[83:72] : 12'hxxx;
  assign ghdl_gen_115_ = s_valid_w[57] ? cmpdispal[48:42] : 7'hxx;
  assign ghdl_gen_116_ = s_valid_w[58] ? cmpcostol[71:60] : 12'hxxx;
  assign ghdl_gen_117_ = s_valid_w[58] ? cmpdispal[41:35] : 7'hxx;
  assign ghdl_gen_118_ = s_valid_w[59] ? cmpcostol[59:48] : 12'hxxx;
  assign ghdl_gen_119_ = s_valid_w[59] ? cmpdispal[34:28] : 7'hxx;
  assign ghdl_gen_120_ = s_valid_w[60] ? cmpcostol[47:36] : 12'hxxx;
  assign ghdl_gen_121_ = s_valid_w[60] ? cmpdispal[27:21] : 7'hxx;
  assign ghdl_gen_122_ = s_valid_w[61] ? cmpcostol[35:24] : 12'hxxx;
  assign ghdl_gen_123_ = s_valid_w[61] ? cmpdispal[20:14] : 7'hxx;
  assign ghdl_gen_124_ = s_valid_w[62] ? cmpcostol[23:12] : 12'hxxx;
  assign ghdl_gen_125_ = s_valid_w[62] ? cmpdispal[13:7] : 7'hxx;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_valid_in <= 127'h00000000000000000000000000000000;
    else s_valid_in <= ghdl_gen_131_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_valid_inh <= 127'h00000000000000000000000000000000;
    else s_valid_inh <= ghdl_gen_136_;
  assign ghdl_gen_126_ = i_dval ? { i_data_ll, slide_window_ll[1535:24] } : 1536'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_127_ = i_dval ? { i_data_lh, slide_window_lh[1535:24] } : 1536'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_128_ = i_dval ? { i_data_rl, slide_window_rl[3047:24] } : 3048'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_129_ = i_dval ? { i_data_rh, slide_window_rh[3047:24] } : 3048'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_130_ = s_valid_w[63] ? { cmpdispal[6:0], delay_reg[447:7] } : 448'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) o_dval <= 1'h0;
    else o_dval <= s_valid_w[63];
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) o_data_l <= 7'h00;
    else o_data_l <= delay_reg[6:0];
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) o_data_r <= 7'h00;
    else o_data_r <= cmpdispa[6:0];
  assign ghdl_gen_131_ = i_dval ? { \9426.v_valid_in [126:1], 1'h1 } : 127'h00000000000000000000000000000000;
  assign ghdl_gen_132_ = i_dval ? { \9426.v_valid_in [125:1], 2'h3 } : 127'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_133_ = $signed({ 17'h00000, \9450.count  }) < $signed(32'd5850);
  assign ghdl_gen_134_ = { 17'h00000, \9450.count  } + 32'd1;
  assign ghdl_gen_135_ = ghdl_gen_133_ ? 1'h0 : 1'h1;
  assign ghdl_gen_136_ = i_dval ? { \9450.v_valid_in [126:1], ghdl_gen_135_ } : 127'h00000000000000000000000000000000;
  assign ghdl_gen_137_ = i_dval & ghdl_gen_133_;
  assign ghdl_gen_138_ = i_dval ? { \9450.v_valid_in [125:1], ghdl_gen_135_, ghdl_gen_135_ } : 127'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_139_ = ghdl_gen_137_ & i_rst;
  assign ghdl_gen_140_ = ghdl_gen_139_ ? ghdl_gen_134_[14:0] : 15'hxxxx;
  assign s_hamming_l[1535:1512] = slide_window_ll[1535:1512] ^ slide_window_rl[3047:3024];
  assign s_hamming_h[1535:1512] = slide_window_lh[1535:1512] ^ slide_window_rh[3047:3024];
  assign s_hamming_l[1511:1488] = slide_window_ll[1511:1488] ^ slide_window_rl[2999:2976];
  assign s_hamming_h[1511:1488] = slide_window_lh[1511:1488] ^ slide_window_rh[2999:2976];
  assign s_hamming_l[1487:1464] = slide_window_ll[1487:1464] ^ slide_window_rl[2951:2928];
  assign s_hamming_h[1487:1464] = slide_window_lh[1487:1464] ^ slide_window_rh[2951:2928];
  assign s_hamming_l[1463:1440] = slide_window_ll[1463:1440] ^ slide_window_rl[2903:2880];
  assign s_hamming_h[1463:1440] = slide_window_lh[1463:1440] ^ slide_window_rh[2903:2880];
  assign s_hamming_l[1439:1416] = slide_window_ll[1439:1416] ^ slide_window_rl[2855:2832];
  assign s_hamming_h[1439:1416] = slide_window_lh[1439:1416] ^ slide_window_rh[2855:2832];
  assign s_hamming_l[1415:1392] = slide_window_ll[1415:1392] ^ slide_window_rl[2807:2784];
  assign s_hamming_h[1415:1392] = slide_window_lh[1415:1392] ^ slide_window_rh[2807:2784];
  assign s_hamming_l[1391:1368] = slide_window_ll[1391:1368] ^ slide_window_rl[2759:2736];
  assign s_hamming_h[1391:1368] = slide_window_lh[1391:1368] ^ slide_window_rh[2759:2736];
  assign s_hamming_l[1367:1344] = slide_window_ll[1367:1344] ^ slide_window_rl[2711:2688];
  assign s_hamming_h[1367:1344] = slide_window_lh[1367:1344] ^ slide_window_rh[2711:2688];
  assign s_hamming_l[1343:1320] = slide_window_ll[1343:1320] ^ slide_window_rl[2663:2640];
  assign s_hamming_h[1343:1320] = slide_window_lh[1343:1320] ^ slide_window_rh[2663:2640];
  assign s_hamming_l[1319:1296] = slide_window_ll[1319:1296] ^ slide_window_rl[2615:2592];
  assign s_hamming_h[1319:1296] = slide_window_lh[1319:1296] ^ slide_window_rh[2615:2592];
  assign s_hamming_l[1295:1272] = slide_window_ll[1295:1272] ^ slide_window_rl[2567:2544];
  assign s_hamming_h[1295:1272] = slide_window_lh[1295:1272] ^ slide_window_rh[2567:2544];
  assign s_hamming_l[1271:1248] = slide_window_ll[1271:1248] ^ slide_window_rl[2519:2496];
  assign s_hamming_h[1271:1248] = slide_window_lh[1271:1248] ^ slide_window_rh[2519:2496];
  assign s_hamming_l[1247:1224] = slide_window_ll[1247:1224] ^ slide_window_rl[2471:2448];
  assign s_hamming_h[1247:1224] = slide_window_lh[1247:1224] ^ slide_window_rh[2471:2448];
  assign s_hamming_l[1223:1200] = slide_window_ll[1223:1200] ^ slide_window_rl[2423:2400];
  assign s_hamming_h[1223:1200] = slide_window_lh[1223:1200] ^ slide_window_rh[2423:2400];
  assign s_hamming_l[1199:1176] = slide_window_ll[1199:1176] ^ slide_window_rl[2375:2352];
  assign s_hamming_h[1199:1176] = slide_window_lh[1199:1176] ^ slide_window_rh[2375:2352];
  assign s_hamming_l[1175:1152] = slide_window_ll[1175:1152] ^ slide_window_rl[2327:2304];
  assign s_hamming_h[1175:1152] = slide_window_lh[1175:1152] ^ slide_window_rh[2327:2304];
  assign s_hamming_l[1151:1128] = slide_window_ll[1151:1128] ^ slide_window_rl[2279:2256];
  assign s_hamming_h[1151:1128] = slide_window_lh[1151:1128] ^ slide_window_rh[2279:2256];
  assign s_hamming_l[1127:1104] = slide_window_ll[1127:1104] ^ slide_window_rl[2231:2208];
  assign s_hamming_h[1127:1104] = slide_window_lh[1127:1104] ^ slide_window_rh[2231:2208];
  assign s_hamming_l[1103:1080] = slide_window_ll[1103:1080] ^ slide_window_rl[2183:2160];
  assign s_hamming_h[1103:1080] = slide_window_lh[1103:1080] ^ slide_window_rh[2183:2160];
  assign s_hamming_l[1079:1056] = slide_window_ll[1079:1056] ^ slide_window_rl[2135:2112];
  assign s_hamming_h[1079:1056] = slide_window_lh[1079:1056] ^ slide_window_rh[2135:2112];
  assign s_hamming_l[1055:1032] = slide_window_ll[1055:1032] ^ slide_window_rl[2087:2064];
  assign s_hamming_h[1055:1032] = slide_window_lh[1055:1032] ^ slide_window_rh[2087:2064];
  assign s_hamming_l[1031:1008] = slide_window_ll[1031:1008] ^ slide_window_rl[2039:2016];
  assign s_hamming_h[1031:1008] = slide_window_lh[1031:1008] ^ slide_window_rh[2039:2016];
  assign s_hamming_l[1007:984] = slide_window_ll[1007:984] ^ slide_window_rl[1991:1968];
  assign s_hamming_h[1007:984] = slide_window_lh[1007:984] ^ slide_window_rh[1991:1968];
  assign s_hamming_l[983:960] = slide_window_ll[983:960] ^ slide_window_rl[1943:1920];
  assign s_hamming_h[983:960] = slide_window_lh[983:960] ^ slide_window_rh[1943:1920];
  assign s_hamming_l[959:936] = slide_window_ll[959:936] ^ slide_window_rl[1895:1872];
  assign s_hamming_h[959:936] = slide_window_lh[959:936] ^ slide_window_rh[1895:1872];
  assign s_hamming_l[935:912] = slide_window_ll[935:912] ^ slide_window_rl[1847:1824];
  assign s_hamming_h[935:912] = slide_window_lh[935:912] ^ slide_window_rh[1847:1824];
  assign s_hamming_l[911:888] = slide_window_ll[911:888] ^ slide_window_rl[1799:1776];
  assign s_hamming_h[911:888] = slide_window_lh[911:888] ^ slide_window_rh[1799:1776];
  assign s_hamming_l[887:864] = slide_window_ll[887:864] ^ slide_window_rl[1751:1728];
  assign s_hamming_h[887:864] = slide_window_lh[887:864] ^ slide_window_rh[1751:1728];
  assign s_hamming_l[863:840] = slide_window_ll[863:840] ^ slide_window_rl[1703:1680];
  assign s_hamming_h[863:840] = slide_window_lh[863:840] ^ slide_window_rh[1703:1680];
  assign s_hamming_l[839:816] = slide_window_ll[839:816] ^ slide_window_rl[1655:1632];
  assign s_hamming_h[839:816] = slide_window_lh[839:816] ^ slide_window_rh[1655:1632];
  assign s_hamming_l[815:792] = slide_window_ll[815:792] ^ slide_window_rl[1607:1584];
  assign s_hamming_h[815:792] = slide_window_lh[815:792] ^ slide_window_rh[1607:1584];
  assign s_hamming_l[791:768] = slide_window_ll[791:768] ^ slide_window_rl[1559:1536];
  assign s_hamming_h[791:768] = slide_window_lh[791:768] ^ slide_window_rh[1559:1536];
  assign s_hamming_l[767:744] = slide_window_ll[767:744] ^ slide_window_rl[1511:1488];
  assign s_hamming_h[767:744] = slide_window_lh[767:744] ^ slide_window_rh[1511:1488];
  assign s_hamming_l[743:720] = slide_window_ll[743:720] ^ slide_window_rl[1463:1440];
  assign s_hamming_h[743:720] = slide_window_lh[743:720] ^ slide_window_rh[1463:1440];
  assign s_hamming_l[719:696] = slide_window_ll[719:696] ^ slide_window_rl[1415:1392];
  assign s_hamming_h[719:696] = slide_window_lh[719:696] ^ slide_window_rh[1415:1392];
  assign s_hamming_l[695:672] = slide_window_ll[695:672] ^ slide_window_rl[1367:1344];
  assign s_hamming_h[695:672] = slide_window_lh[695:672] ^ slide_window_rh[1367:1344];
  assign s_hamming_l[671:648] = slide_window_ll[671:648] ^ slide_window_rl[1319:1296];
  assign s_hamming_h[671:648] = slide_window_lh[671:648] ^ slide_window_rh[1319:1296];
  assign s_hamming_l[647:624] = slide_window_ll[647:624] ^ slide_window_rl[1271:1248];
  assign s_hamming_h[647:624] = slide_window_lh[647:624] ^ slide_window_rh[1271:1248];
  assign s_hamming_l[623:600] = slide_window_ll[623:600] ^ slide_window_rl[1223:1200];
  assign s_hamming_h[623:600] = slide_window_lh[623:600] ^ slide_window_rh[1223:1200];
  assign s_hamming_l[599:576] = slide_window_ll[599:576] ^ slide_window_rl[1175:1152];
  assign s_hamming_h[599:576] = slide_window_lh[599:576] ^ slide_window_rh[1175:1152];
  assign s_hamming_l[575:552] = slide_window_ll[575:552] ^ slide_window_rl[1127:1104];
  assign s_hamming_h[575:552] = slide_window_lh[575:552] ^ slide_window_rh[1127:1104];
  assign s_hamming_l[551:528] = slide_window_ll[551:528] ^ slide_window_rl[1079:1056];
  assign s_hamming_h[551:528] = slide_window_lh[551:528] ^ slide_window_rh[1079:1056];
  assign s_hamming_l[527:504] = slide_window_ll[527:504] ^ slide_window_rl[1031:1008];
  assign s_hamming_h[527:504] = slide_window_lh[527:504] ^ slide_window_rh[1031:1008];
  assign s_hamming_l[503:480] = slide_window_ll[503:480] ^ slide_window_rl[983:960];
  assign s_hamming_h[503:480] = slide_window_lh[503:480] ^ slide_window_rh[983:960];
  assign s_hamming_l[479:456] = slide_window_ll[479:456] ^ slide_window_rl[935:912];
  assign s_hamming_h[479:456] = slide_window_lh[479:456] ^ slide_window_rh[935:912];
  assign s_hamming_l[455:432] = slide_window_ll[455:432] ^ slide_window_rl[887:864];
  assign s_hamming_h[455:432] = slide_window_lh[455:432] ^ slide_window_rh[887:864];
  assign s_hamming_l[431:408] = slide_window_ll[431:408] ^ slide_window_rl[839:816];
  assign s_hamming_h[431:408] = slide_window_lh[431:408] ^ slide_window_rh[839:816];
  assign s_hamming_l[407:384] = slide_window_ll[407:384] ^ slide_window_rl[791:768];
  assign s_hamming_h[407:384] = slide_window_lh[407:384] ^ slide_window_rh[791:768];
  assign s_hamming_l[383:360] = slide_window_ll[383:360] ^ slide_window_rl[743:720];
  assign s_hamming_h[383:360] = slide_window_lh[383:360] ^ slide_window_rh[743:720];
  assign s_hamming_l[359:336] = slide_window_ll[359:336] ^ slide_window_rl[695:672];
  assign s_hamming_h[359:336] = slide_window_lh[359:336] ^ slide_window_rh[695:672];
  assign s_hamming_l[335:312] = slide_window_ll[335:312] ^ slide_window_rl[647:624];
  assign s_hamming_h[335:312] = slide_window_lh[335:312] ^ slide_window_rh[647:624];
  assign s_hamming_l[311:288] = slide_window_ll[311:288] ^ slide_window_rl[599:576];
  assign s_hamming_h[311:288] = slide_window_lh[311:288] ^ slide_window_rh[599:576];
  assign s_hamming_l[287:264] = slide_window_ll[287:264] ^ slide_window_rl[551:528];
  assign s_hamming_h[287:264] = slide_window_lh[287:264] ^ slide_window_rh[551:528];
  assign s_hamming_l[263:240] = slide_window_ll[263:240] ^ slide_window_rl[503:480];
  assign s_hamming_h[263:240] = slide_window_lh[263:240] ^ slide_window_rh[503:480];
  assign s_hamming_l[239:216] = slide_window_ll[239:216] ^ slide_window_rl[455:432];
  assign s_hamming_h[239:216] = slide_window_lh[239:216] ^ slide_window_rh[455:432];
  assign s_hamming_l[215:192] = slide_window_ll[215:192] ^ slide_window_rl[407:384];
  assign s_hamming_h[215:192] = slide_window_lh[215:192] ^ slide_window_rh[407:384];
  assign s_hamming_l[191:168] = slide_window_ll[191:168] ^ slide_window_rl[359:336];
  assign s_hamming_h[191:168] = slide_window_lh[191:168] ^ slide_window_rh[359:336];
  assign s_hamming_l[167:144] = slide_window_ll[167:144] ^ slide_window_rl[311:288];
  assign s_hamming_h[167:144] = slide_window_lh[167:144] ^ slide_window_rh[311:288];
  assign s_hamming_l[143:120] = slide_window_ll[143:120] ^ slide_window_rl[263:240];
  assign s_hamming_h[143:120] = slide_window_lh[143:120] ^ slide_window_rh[263:240];
  assign s_hamming_l[119:96] = slide_window_ll[119:96] ^ slide_window_rl[215:192];
  assign s_hamming_h[119:96] = slide_window_lh[119:96] ^ slide_window_rh[215:192];
  assign s_hamming_l[95:72] = slide_window_ll[95:72] ^ slide_window_rl[167:144];
  assign s_hamming_h[95:72] = slide_window_lh[95:72] ^ slide_window_rh[167:144];
  assign s_hamming_l[71:48] = slide_window_ll[71:48] ^ slide_window_rl[119:96];
  assign s_hamming_h[71:48] = slide_window_lh[71:48] ^ slide_window_rh[119:96];
  assign s_hamming_l[47:24] = slide_window_ll[47:24] ^ slide_window_rl[71:48];
  assign s_hamming_h[47:24] = slide_window_lh[47:24] ^ slide_window_rh[71:48];
  assign s_hamming_l[23:0] = slide_window_ll[23:0] ^ slide_window_rl[23:0];
  assign s_hamming_h[23:0] = slide_window_lh[23:0] ^ slide_window_rh[23:0];
//module Disp_Cmp #(parameter WIDTH_SR = 93)(i_data_C1, i_data_D1, i_data_C2, i_data_D2, o_data_C, o_data_D, i_CLK_x, i_RST_x, i_TFEn, i_EN_SR, i_SI, o_CLK_x, o_RST_x, o_TFEn, o_EN_SR, o_SI);
	wire ctrl_CLK_x_110;  // Control signal for clock (passed from cmp_1 to cmp_10)
	wire ctrl_CLK_x_1011;  // Control signal for clock (passed from cmp_10 to cmp_11)
	wire ctrl_CLK_x_1112;  // Control signal for clock (passed from cmp_11 to cmp_12)
	wire ctrl_CLK_x_1213;  // Control signal for clock (passed from cmp_12 to cmp_13)
	wire ctrl_CLK_x_1314;  // Control signal for clock (passed from cmp_13 to cmp_14)
	wire ctrl_CLK_x_1415;  // Control signal for clock (passed from cmp_14 to cmp_15)
	wire ctrl_CLK_x_1516;  // Control signal for clock (passed from cmp_15 to cmp_16)
	wire ctrl_CLK_x_1617;  // Control signal for clock (passed from cmp_16 to cmp_17)
	wire ctrl_CLK_x_1718;  // Control signal for clock (passed from cmp_17 to cmp_18)
	wire ctrl_CLK_x_1819;  // Control signal for clock (passed from cmp_18 to cmp_19)
	wire ctrl_CLK_x_192;  // Control signal for clock (passed from cmp_19 to cmp_2)


	wire ctrl_CLK_x_1_2;
	wire ctrl_RST_x_1_2;
	wire ctrl_TFEn_1_2;
	wire ctrl_EN_SR_1_2;
	wire ctrl_SI_1_2;
	wire ctrl_CLK_x_2_3;
	wire ctrl_RST_x_2_3;
	wire ctrl_TFEn_2_3;
	wire ctrl_EN_SR_2_3;
	wire ctrl_SI_2_3;
	wire ctrl_CLK_x_3_4;
	wire ctrl_RST_x_3_4;
	wire ctrl_TFEn_3_4;
	wire ctrl_EN_SR_3_4;
	wire ctrl_SI_3_4;
	wire ctrl_CLK_x_4_5;
	wire ctrl_RST_x_4_5;
	wire ctrl_TFEn_4_5;
	wire ctrl_EN_SR_4_5;
	wire ctrl_SI_4_5;
	wire ctrl_CLK_x_5_6;
	wire ctrl_RST_x_5_6;
	wire ctrl_TFEn_5_6;
	wire ctrl_EN_SR_5_6;
	wire ctrl_SI_5_6;
	wire ctrl_CLK_x_6_7;
	wire ctrl_RST_x_6_7;
	wire ctrl_TFEn_6_7;
	wire ctrl_EN_SR_6_7;
	wire ctrl_SI_6_7;
	wire ctrl_CLK_x_7_8;
	wire ctrl_RST_x_7_8;
	wire ctrl_TFEn_7_8;
	wire ctrl_EN_SR_7_8;
	wire ctrl_SI_7_8;
	wire ctrl_CLK_x_8_9;
	wire ctrl_RST_x_8_9;
	wire ctrl_TFEn_8_9;
	wire ctrl_EN_SR_8_9;
	wire ctrl_SI_8_9;
	wire ctrl_CLK_x_9_10;
	wire ctrl_RST_x_9_10;
	wire ctrl_TFEn_9_10;
	wire ctrl_EN_SR_9_10;
	wire ctrl_SI_9_10;
	wire ctrl_CLK_x_10_11;
	wire ctrl_RST_x_10_11;
	wire ctrl_TFEn_10_11;
	wire ctrl_EN_SR_10_11;
	wire ctrl_SI_10_11;
	wire ctrl_CLK_x_11_12;
	wire ctrl_RST_x_11_12;
	wire ctrl_TFEn_11_12;
	wire ctrl_EN_SR_11_12;
	wire ctrl_SI_11_12;
	wire ctrl_CLK_x_12_13;
	wire ctrl_RST_x_12_13;
	wire ctrl_TFEn_12_13;
	wire ctrl_EN_SR_12_13;
	wire ctrl_SI_12_13;
	wire ctrl_CLK_x_13_14;
	wire ctrl_RST_x_13_14;
	wire ctrl_TFEn_13_14;
	wire ctrl_EN_SR_13_14;
	wire ctrl_SI_13_14;
	wire ctrl_CLK_x_14_15;
	wire ctrl_RST_x_14_15;
	wire ctrl_TFEn_14_15;
	wire ctrl_EN_SR_14_15;
	wire ctrl_SI_14_15;
	wire ctrl_CLK_x_15_16;
	wire ctrl_RST_x_15_16;
	wire ctrl_TFEn_15_16;
	wire ctrl_EN_SR_15_16;
	wire ctrl_SI_15_16;
	wire ctrl_CLK_x_16_17;
	wire ctrl_RST_x_16_17;
	wire ctrl_TFEn_16_17;
	wire ctrl_EN_SR_16_17;
	wire ctrl_SI_16_17;
	wire ctrl_CLK_x_17_18;
	wire ctrl_RST_x_17_18;
	wire ctrl_TFEn_17_18;
	wire ctrl_EN_SR_17_18;
	wire ctrl_SI_17_18;
	wire ctrl_CLK_x_18_19;
	wire ctrl_RST_x_18_19;
	wire ctrl_TFEn_18_19;
	wire ctrl_EN_SR_18_19;
	wire ctrl_SI_18_19;
	wire ctrl_CLK_x_19_20;
	wire ctrl_RST_x_19_20;
	wire ctrl_TFEn_19_20;
	wire ctrl_EN_SR_19_20;
	wire ctrl_SI_19_20;
	wire ctrl_CLK_x_20_21;
	wire ctrl_RST_x_20_21;
	wire ctrl_TFEn_20_21;
	wire ctrl_EN_SR_20_21;
	wire ctrl_SI_20_21;
	wire ctrl_CLK_x_21_22;
	wire ctrl_RST_x_21_22;
	wire ctrl_TFEn_21_22;
	wire ctrl_EN_SR_21_22;
	wire ctrl_SI_21_22;
	wire ctrl_CLK_x_22_23;
	wire ctrl_RST_x_22_23;
	wire ctrl_TFEn_22_23;
	wire ctrl_EN_SR_22_23;
	wire ctrl_SI_22_23;
	wire ctrl_CLK_x_23_24;
	wire ctrl_RST_x_23_24;
	wire ctrl_TFEn_23_24;
	wire ctrl_EN_SR_23_24;
	wire ctrl_SI_23_24;
	wire ctrl_CLK_x_24_25;
	wire ctrl_RST_x_24_25;
	wire ctrl_TFEn_24_25;
	wire ctrl_EN_SR_24_25;
	wire ctrl_SI_24_25;
	wire ctrl_CLK_x_25_26;
	wire ctrl_RST_x_25_26;
	wire ctrl_TFEn_25_26;
	wire ctrl_EN_SR_25_26;
	wire ctrl_SI_25_26;
	wire ctrl_CLK_x_26_27;
	wire ctrl_RST_x_26_27;
	wire ctrl_TFEn_26_27;
	wire ctrl_EN_SR_26_27;
	wire ctrl_SI_26_27;
	wire ctrl_CLK_x_27_28;
	wire ctrl_RST_x_27_28;
	wire ctrl_TFEn_27_28;
	wire ctrl_EN_SR_27_28;
	wire ctrl_SI_27_28;
	wire ctrl_CLK_x_28_29;
	wire ctrl_RST_x_28_29;
	wire ctrl_TFEn_28_29;
	wire ctrl_EN_SR_28_29;
	wire ctrl_SI_28_29;
	wire ctrl_CLK_x_29_30;
	wire ctrl_RST_x_29_30;
	wire ctrl_TFEn_29_30;
	wire ctrl_EN_SR_29_30;
	wire ctrl_SI_29_30;
	wire ctrl_CLK_x_30_31;
	wire ctrl_RST_x_30_31;
	wire ctrl_TFEn_30_31;
	wire ctrl_EN_SR_30_31;
	wire ctrl_SI_30_31;
	wire ctrl_CLK_x_31_32;
	wire ctrl_RST_x_31_32;
	wire ctrl_TFEn_31_32;
	wire ctrl_EN_SR_31_32;
	wire ctrl_SI_31_32;
	wire ctrl_CLK_x_32_33;
	wire ctrl_RST_x_32_33;
	wire ctrl_TFEn_32_33;
	wire ctrl_EN_SR_32_33;
	wire ctrl_SI_32_33;
	wire ctrl_CLK_x_33_34;
	wire ctrl_RST_x_33_34;
	wire ctrl_TFEn_33_34;
	wire ctrl_EN_SR_33_34;
	wire ctrl_SI_33_34;
	wire ctrl_CLK_x_34_35;
	wire ctrl_RST_x_34_35;
	wire ctrl_TFEn_34_35;
	wire ctrl_EN_SR_34_35;
	wire ctrl_SI_34_35;
	wire ctrl_CLK_x_35_36;
	wire ctrl_RST_x_35_36;
	wire ctrl_TFEn_35_36;
	wire ctrl_EN_SR_35_36;
	wire ctrl_SI_35_36;
	wire ctrl_CLK_x_36_37;
	wire ctrl_RST_x_36_37;
	wire ctrl_TFEn_36_37;
	wire ctrl_EN_SR_36_37;
	wire ctrl_SI_36_37;
	wire ctrl_CLK_x_37_38;
	wire ctrl_RST_x_37_38;
	wire ctrl_TFEn_37_38;
	wire ctrl_EN_SR_37_38;
	wire ctrl_SI_37_38;
	wire ctrl_CLK_x_38_39;
	wire ctrl_RST_x_38_39;
	wire ctrl_TFEn_38_39;
	wire ctrl_EN_SR_38_39;
	wire ctrl_SI_38_39;
	wire ctrl_CLK_x_39_40;
	wire ctrl_RST_x_39_40;
	wire ctrl_TFEn_39_40;
	wire ctrl_EN_SR_39_40;
	wire ctrl_SI_39_40;
	wire ctrl_CLK_x_40_41;
	wire ctrl_RST_x_40_41;
	wire ctrl_TFEn_40_41;
	wire ctrl_EN_SR_40_41;
	wire ctrl_SI_40_41;
	wire ctrl_CLK_x_41_42;
	wire ctrl_RST_x_41_42;
	wire ctrl_TFEn_41_42;
	wire ctrl_EN_SR_41_42;
	wire ctrl_SI_41_42;
	wire ctrl_CLK_x_42_43;
	wire ctrl_RST_x_42_43;
	wire ctrl_TFEn_42_43;
	wire ctrl_EN_SR_42_43;
	wire ctrl_SI_42_43;
	wire ctrl_CLK_x_43_44;
	wire ctrl_RST_x_43_44;
	wire ctrl_TFEn_43_44;
	wire ctrl_EN_SR_43_44;
	wire ctrl_SI_43_44;
	wire ctrl_CLK_x_44_45;
	wire ctrl_RST_x_44_45;
	wire ctrl_TFEn_44_45;
	wire ctrl_EN_SR_44_45;
	wire ctrl_SI_44_45;
	wire ctrl_CLK_x_45_46;
	wire ctrl_RST_x_45_46;
	wire ctrl_TFEn_45_46;
	wire ctrl_EN_SR_45_46;
	wire ctrl_SI_45_46;
	wire ctrl_CLK_x_46_47;
	wire ctrl_RST_x_46_47;
	wire ctrl_TFEn_46_47;
	wire ctrl_EN_SR_46_47;
	wire ctrl_SI_46_47;
	wire ctrl_CLK_x_47_48;
	wire ctrl_RST_x_47_48;
	wire ctrl_TFEn_47_48;
	wire ctrl_EN_SR_47_48;
	wire ctrl_SI_47_48;
	wire ctrl_CLK_x_48_49;
	wire ctrl_RST_x_48_49;
	wire ctrl_TFEn_48_49;
	wire ctrl_EN_SR_48_49;
	wire ctrl_SI_48_49;
	wire ctrl_CLK_x_49_50;
	wire ctrl_RST_x_49_50;
	wire ctrl_TFEn_49_50;
	wire ctrl_EN_SR_49_50;
	wire ctrl_SI_49_50;
	wire ctrl_CLK_x_50_51;
	wire ctrl_RST_x_50_51;
	wire ctrl_TFEn_50_51;
	wire ctrl_EN_SR_50_51;
	wire ctrl_SI_50_51;
	wire ctrl_CLK_x_51_52;
	wire ctrl_RST_x_51_52;
	wire ctrl_TFEn_51_52;
	wire ctrl_EN_SR_51_52;
	wire ctrl_SI_51_52;
	wire ctrl_CLK_x_52_53;
	wire ctrl_RST_x_52_53;
	wire ctrl_TFEn_52_53;
	wire ctrl_EN_SR_52_53;
	wire ctrl_SI_52_53;
	wire ctrl_CLK_x_53_54;
	wire ctrl_RST_x_53_54;
	wire ctrl_TFEn_53_54;
	wire ctrl_EN_SR_53_54;
	wire ctrl_SI_53_54;
	wire ctrl_CLK_x_54_55;
	wire ctrl_RST_x_54_55;
	wire ctrl_TFEn_54_55;
	wire ctrl_EN_SR_54_55;
	wire ctrl_SI_54_55;
	wire ctrl_CLK_x_55_56;
	wire ctrl_RST_x_55_56;
	wire ctrl_TFEn_55_56;
	wire ctrl_EN_SR_55_56;
	wire ctrl_SI_55_56;
	wire ctrl_CLK_x_56_57;
	wire ctrl_RST_x_56_57;
	wire ctrl_TFEn_56_57;
	wire ctrl_EN_SR_56_57;
	wire ctrl_SI_56_57;
	wire ctrl_CLK_x_57_58;
	wire ctrl_RST_x_57_58;
	wire ctrl_TFEn_57_58;
	wire ctrl_EN_SR_57_58;
	wire ctrl_SI_57_58;
	wire ctrl_CLK_x_58_59;
	wire ctrl_RST_x_58_59;
	wire ctrl_TFEn_58_59;
	wire ctrl_EN_SR_58_59;
	wire ctrl_SI_58_59;
	wire ctrl_CLK_x_59_60;
	wire ctrl_RST_x_59_60;
	wire ctrl_TFEn_59_60;
	wire ctrl_EN_SR_59_60;
	wire ctrl_SI_59_60;
	wire ctrl_CLK_x_60_61;
	wire ctrl_RST_x_60_61;
	wire ctrl_TFEn_60_61;
	wire ctrl_EN_SR_60_61;
	wire ctrl_SI_60_61;
	wire ctrl_CLK_x_61_62;
	wire ctrl_RST_x_61_62;
	wire ctrl_TFEn_61_62;
	wire ctrl_EN_SR_61_62;
	wire ctrl_SI_61_62;
	wire ctrl_CLK_x_62_63;
	wire ctrl_RST_x_62_63;
	wire ctrl_TFEn_62_63;
	wire ctrl_EN_SR_62_63;
	wire ctrl_SI_62_63;
	wire ctrl_CLK_x_63_64;
	wire ctrl_RST_x_63_64;
	wire ctrl_TFEn_63_64;
	wire ctrl_EN_SR_63_64;
	wire ctrl_SI_63_64;
  input i_CLK_x;//yeni
  wire i_CLK_x;//yeni
  input i_RST_x; //yeni
  wire i_RST_x; //yeni
  input i_TFEn; //yeni
  wire i_TFEn; //yeni
  input i_EN_SR; //yeni
  wire i_EN_SR; //yeni
  input i_SI; //yeni
  wire i_SI; //yeni
  output o_CLK_x//yeni
  wire o_CLK_x//yeni
  output o_RST_x//yeni
  wire o_RST_x//yeni
  output o_TFEn//yeni
  wire o_TFEn//yeni
  output o_EN_SR//yeni
  wire o_EN_SR//yeni
  output o_SI//yeni
  wire o_SI//yeni
  
  wire injector_i_CLK_x; //yeni
  wire injector_i_RST_x; //yeni
  wire injector_i_TFEn; //yeni
  wire injector_i_EN_SR; //yeni
  wire injector_i_SI; //yeni
  
  wire injector_o_CLK_x; //yeni
  wire injector_o_RST_x; //yeni
  wire injector_o_TFEn; //yeni
  wire injector_o_EN_SR; //yeni
  wire injector_o_SI; //yeni
  
  assign injector_i_CLK_x = i_CLK_x;//yeni
  assign injector_i_RST_x = i_RST_x;//yeni
  assign injector_i_TFEn = i_TFEn;//yeni
  assign injector_i_EN_SR = i_EN_SR;//yeni
  assign injector_i_SI = i_SI;//yeni
  
  
  assign injector_o_CLK_x = o_CLK_x;//yeni
  assign injector_o_RST_x = o_RST_x;//yeni
  assign injector_o_TFEn = o_TFEn;//yeni
  assign injector_o_EN_SR = o_EN_SR;//yeni
  assign injector_o_SI = o_SI;//yeni

  Disp_Cmp \cmp:1.comparador  (
    .i_data_C1(costo[1499:1488]),
    .i_data_C2(s_sum_w[755:744]),
    .i_data_D1(dispa[874:868]),
    .i_data_D2(7'h01),
    .o_data_C(cmpcosto[755:744]),
    .o_data_D(cmpdispa[440:434]),
	.i_CLK_x(injector_i_CLK_x),              // Clock input
    .i_RST_x(injector_i_RST_x),              // Reset input
    .i_TFEn(injector_i_TFEn),                // Enable input
    .i_EN_SR(injector_i_EN_SR),              // Shift register enable input
    .i_SI(injector_i_SI),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_1_2),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_1_2),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_1_2),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_1_2),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_1_2)                  // Control signal to be passed to cmp_10
	
  );
  Disp_Cmp \cmp:10.comparador  (
    .i_data_c1(costo[1283:1272]),
    .i_data_c2(s_sum_w[647:636]),
    .i_data_d1(dispa[748:742]),
    .i_data_d2(7'h0a),
    .o_data_c(cmpcosto[647:636]),
    .o_data_d(cmpdispa[377:371]),
	.i_CLK_x(i_CLK_x_9_10),              // Clock input
    .i_RST_x(ctrl_RST_x_9_10),              // Reset input
    .i_TFEn(ctrl_TFEn_9_10),                // Enable input
    .i_EN_SR(ctrl_EN_SR_9_10),              // Shift register enable input
    .i_SI(ctrl_SI_9_10),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_10_11),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_10_11),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_10_11),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_10_11),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_10_11) 
  );
  Disp_Cmp \cmp:11.comparador  (
    .i_data_c1(costo[1259:1248]),
    .i_data_c2(s_sum_w[635:624]),
    .i_data_d1(dispa[734:728]),
    .i_data_d2(7'h0b),
    .o_data_c(cmpcosto[635:624]),
    .o_data_d(cmpdispa[370:364]),
	.i_CLK_x(i_CLK_x_10_11),              // Clock input
    .i_RST_x(ctrl_RST_x_10_11),              // Reset input
    .i_TFEn(ctrl_TFEn_10_11),                // Enable input
    .i_EN_SR(ctrl_EN_SR_10_11),              // Shift register enable input
    .i_SI(ctrl_SI_10_11),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_11_12),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_11_12),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_11_12),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_11_12),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_11_12) 	
  );
  Disp_Cmp \cmp:12.comparador  (
    .i_data_c1(costo[1235:1224]),
    .i_data_c2(s_sum_w[623:612]),
    .i_data_d1(dispa[720:714]),
    .i_data_d2(7'h0c),
    .o_data_c(cmpcosto[623:612]),
    .o_data_d(cmpdispa[363:357]),
	.i_CLK_x(i_CLK_x_11_12),              // Clock input
    .i_RST_x(ctrl_RST_x_11_12),              // Reset input
    .i_TFEn(ctrl_TFEn_11_12),                // Enable input
    .i_EN_SR(ctrl_EN_SR_11_12),              // Shift register enable input
    .i_SI(ctrl_SI_11_12),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_12_13),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_12_13),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_12_13),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_12_13),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_12_13)
  );
  Disp_Cmp \cmp:13.comparador  (
    .i_data_c1(costo[1211:1200]),
    .i_data_c2(s_sum_w[611:600]),
    .i_data_d1(dispa[706:700]),
    .i_data_d2(7'h0d),
    .o_data_c(cmpcosto[611:600]),
    .o_data_d(cmpdispa[356:350]),
	.i_CLK_x(i_CLK_x_12_13),              // Clock input
    .i_RST_x(ctrl_RST_x_12_13),              // Reset input
    .i_TFEn(ctrl_TFEn_12_13),                // Enable input
    .i_EN_SR(ctrl_EN_SR_12_13),              // Shift register enable input
    .i_SI(ctrl_SI_12_13),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_13_14),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_13_14),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_13_14),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_13_14),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_13_14)
  );
  Disp_Cmp \cmp:14.comparador  (
    .i_data_c1(costo[1187:1176]),
    .i_data_c2(s_sum_w[599:588]),
    .i_data_d1(dispa[692:686]),
    .i_data_d2(7'h0e),
    .o_data_c(cmpcosto[599:588]),
    .o_data_d(cmpdispa[349:343]),
	.i_CLK_x(i_CLK_x_13_14),
    .i_RST_x(ctrl_RST_x_13_14),
	.i_TFEn(ctrl_TFEn_13_14),
	.i_EN_SR(ctrl_EN_SR_13_14),
	.i_SI(ctrl_SI_13_14),
	.o_CLK_x(ctrl_CLK_x_14_15),
	.o_RST_x(ctrl_RST_x_14_15),
	.o_TFEn(ctrl_TFEn_14_15),
	.o_EN_SR(ctrl_EN_SR_14_15),
	.o_SI(ctrl_SI_14_15)
  );
  Disp_Cmp \cmp:15.comparador  (
    .i_data_c1(costo[1163:1152]),
    .i_data_c2(s_sum_w[587:576]),
    .i_data_d1(dispa[678:672]),
    .i_data_d2(7'h0f),
    .o_data_c(cmpcosto[587:576]),
    .o_data_d(cmpdispa[342:336]),
	.i_CLK_x(i_CLK_x_14_15),
	.i_RST_x(ctrl_RST_x_14_15),
	.i_TFEn(ctrl_TFEn_14_15),
	.i_EN_SR(ctrl_EN_SR_14_15),
	.i_SI(ctrl_SI_14_15),
	.o_CLK_x(ctrl_CLK_x_15_16),
	.o_RST_x(ctrl_RST_x_15_16),
	.o_TFEn(ctrl_TFEn_15_16),
	.o_EN_SR(ctrl_EN_SR_15_16),
	.o_SI(ctrl_SI_15_16)
  );
  Disp_Cmp \cmp:16.comparador  (
    .i_data_c1(costo[1139:1128]),
    .i_data_c2(s_sum_w[575:564]),
    .i_data_d1(dispa[664:658]),
    .i_data_d2(7'h10),
    .o_data_c(cmpcosto[575:564]),
    .o_data_d(cmpdispa[335:329]),
	.i_CLK_x(i_CLK_x_15_16),
	.i_RST_x(ctrl_RST_x_15_16),
	.i_TFEn(ctrl_TFEn_15_16),
	.i_EN_SR(ctrl_EN_SR_15_16),
	.i_SI(ctrl_SI_15_16),
	.o_CLK_x(ctrl_CLK_x_16_17),
	.o_RST_x(ctrl_RST_x_16_17),
	.o_TFEn(ctrl_TFEn_16_17),
	.o_EN_SR(ctrl_EN_SR_16_17),
	.o_SI(ctrl_SI_16_17)
  );
  Disp_Cmp \cmp:17.comparador  (
    .i_data_c1(costo[1115:1104]),
    .i_data_c2(s_sum_w[563:552]),
    .i_data_d1(dispa[650:644]),
    .i_data_d2(7'h11),
    .o_data_c(cmpcosto[563:552]),
    .o_data_d(cmpdispa[328:322]),
	.i_CLK_x(i_CLK_x_16_17),
	.i_RST_x(ctrl_RST_x_16_17),
	.i_TFEn(ctrl_TFEn_16_17),
	.i_EN_SR(ctrl_EN_SR_16_17),
	.i_SI(ctrl_SI_16_17),
	.o_CLK_x(ctrl_CLK_x_17_18),
	.o_RST_x(ctrl_RST_x_17_18),
	.o_TFEn(ctrl_TFEn_17_18),
	.o_EN_SR(ctrl_EN_SR_17_18),
	.o_SI(ctrl_SI_17_18)
  );
  Disp_Cmp \cmp:18.comparador  (
    .i_data_c1(costo[1091:1080]),
    .i_data_c2(s_sum_w[551:540]),
    .i_data_d1(dispa[636:630]),
    .i_data_d2(7'h12),
    .o_data_c(cmpcosto[551:540]),
    .o_data_d(cmpdispa[321:315]),
	.i_CLK_x(i_CLK_x_17_18),
	.i_RST_x(ctrl_RST_x_17_18),
	.i_TFEn(ctrl_TFEn_17_18),
	.i_EN_SR(ctrl_EN_SR_17_18),
	.i_SI(ctrl_SI_17_18),
	.o_CLK_x(ctrl_CLK_x_18_19),
	.o_RST_x(ctrl_RST_x_18_19),
	.o_TFEn(ctrl_TFEn_18_19),
	.o_EN_SR(ctrl_EN_SR_18_19),
	.o_SI(ctrl_SI_18_19)
  );
  Disp_Cmp \cmp:19.comparador  (
    .i_data_c1(costo[1067:1056]),
    .i_data_c2(s_sum_w[539:528]),
    .i_data_d1(dispa[622:616]),
    .i_data_d2(7'h13),
    .o_data_c(cmpcosto[539:528]),
    .o_data_d(cmpdispa[314:308]),
	.i_CLK_x(i_CLK_x_18_19),
	.i_RST_x(ctrl_RST_x_18_19),
	.i_TFEn(ctrl_TFEn_18_19),
	.i_EN_SR(ctrl_EN_SR_18_19),
	.i_SI(ctrl_SI_18_19),
	.o_CLK_x(ctrl_CLK_x_19_20),
	.o_RST_x(ctrl_RST_x_19_20),
	.o_TFEn(ctrl_TFEn_19_20),
	.o_EN_SR(ctrl_EN_SR_19_20),
	.o_SI(ctrl_SI_19_20)
  );
  Disp_Cmp \cmp:2.comparador  (
    .i_data_c1(costo[1475:1464]),
    .i_data_c2(s_sum_w[743:732]),
    .i_data_d1(dispa[860:854]),
    .i_data_d2(7'h02),
    .o_data_c(cmpcosto[743:732]),
    .o_data_d(cmpdispa[433:427]),
	.i_CLK_x(ctrl_CLK_x_1_2),              // Clock input
    .i_RST_x(ctrl_RST_x_1_2),              // Reset input
    .i_TFEn(ctrl_TFEn_1_2),                // Enable input
    .i_EN_SR(ctrl_EN_SR_1_2),              // Shift register enable input
    .i_SI(ctrl_SI_1_2),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_2_3),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_2_3),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_2_3),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_2_3),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_2_3)                  // Control signal to be passed to cmp_10
	
  );
  Disp_Cmp \cmp:20.comparador  (
    .i_data_c1(costo[1043:1032]),
    .i_data_c2(s_sum_w[527:516]),
    .i_data_d1(dispa[608:602]),
    .i_data_d2(7'h14),
    .o_data_c(cmpcosto[527:516]),
    .o_data_d(cmpdispa[307:301]),
	.i_CLK_x(i_CLK_x_19_20),
	.i_RST_x(ctrl_RST_x_19_20),
	.i_TFEn(ctrl_TFEn_19_20),
	.i_EN_SR(ctrl_EN_SR_19_20),
	.i_SI(ctrl_SI_19_20),
	.o_CLK_x(ctrl_CLK_x_20_21),
	.o_RST_x(ctrl_RST_x_20_21),
	.o_TFEn(ctrl_TFEn_20_21),
	.o_EN_SR(ctrl_EN_SR_20_21),
	.o_SI(ctrl_SI_20_21)
  );
  Disp_Cmp \cmp:21.comparador  (
    .i_data_c1(costo[1019:1008]),
    .i_data_c2(s_sum_w[515:504]),
    .i_data_d1(dispa[594:588]),
    .i_data_d2(7'h15),
    .o_data_c(cmpcosto[515:504]),
    .o_data_d(cmpdispa[300:294]),
	.i_CLK_x(i_CLK_x_20_21),
	.i_RST_x(ctrl_RST_x_20_21),
	.i_TFEn(ctrl_TFEn_20_21),
	.i_EN_SR(ctrl_EN_SR_20_21),
	.i_SI(ctrl_SI_20_21),
	.o_CLK_x(ctrl_CLK_x_21_22),
	.o_RST_x(ctrl_RST_x_21_22),
	.o_TFEn(ctrl_TFEn_21_22),
	.o_EN_SR(ctrl_EN_SR_21_22),
	.o_SI(ctrl_SI_21_22)
  );
  Disp_Cmp \cmp:22.comparador  (
    .i_data_c1(costo[995:984]),
    .i_data_c2(s_sum_w[503:492]),
    .i_data_d1(dispa[580:574]),
    .i_data_d2(7'h16),
    .o_data_c(cmpcosto[503:492]),
    .o_data_d(cmpdispa[293:287]),
	.i_CLK_x(i_CLK_x_21_22),
	.i_RST_x(ctrl_RST_x_21_22),
	.i_TFEn(ctrl_TFEn_21_22),
	.i_EN_SR(ctrl_EN_SR_21_22),
	.i_SI(ctrl_SI_21_22),
	.o_CLK_x(ctrl_CLK_x_22_23),
	.o_RST_x(ctrl_RST_x_22_23),
	.o_TFEn(ctrl_TFEn_22_23),
	.o_EN_SR(ctrl_EN_SR_22_23),
	.o_SI(ctrl_SI_22_23)
  );
  Disp_Cmp \cmp:23.comparador  (
    .i_data_c1(costo[971:960]),
    .i_data_c2(s_sum_w[491:480]),
    .i_data_d1(dispa[566:560]),
    .i_data_d2(7'h17),
    .o_data_c(cmpcosto[491:480]),
    .o_data_d(cmpdispa[286:280]),
	.i_CLK_x(i_CLK_x_22_23),
	.i_RST_x(ctrl_RST_x_22_23),
	.i_TFEn(ctrl_TFEn_22_23),
	.i_EN_SR(ctrl_EN_SR_22_23),
	.i_SI(ctrl_SI_22_23),
	.o_CLK_x(ctrl_CLK_x_23_24),
	.o_RST_x(ctrl_RST_x_23_24),
	.o_TFEn(ctrl_TFEn_23_24),
	.o_EN_SR(ctrl_EN_SR_23_24),
	.o_SI(ctrl_SI_23_24)
  );
  Disp_Cmp \cmp:24.comparador  (
    .i_data_c1(costo[947:936]),
    .i_data_c2(s_sum_w[479:468]),
    .i_data_d1(dispa[552:546]),
    .i_data_d2(7'h18),
    .o_data_c(cmpcosto[479:468]),
    .o_data_d(cmpdispa[279:273]),
	.i_CLK_x(i_CLK_x_23_24),
	.i_RST_x(ctrl_RST_x_23_24),
	.i_TFEn(ctrl_TFEn_23_24),
	.i_EN_SR(ctrl_EN_SR_23_24),
	.i_SI(ctrl_SI_23_24),
	.o_CLK_x(ctrl_CLK_x_24_25),
	.o_RST_x(ctrl_RST_x_24_25),
	.o_TFEn(ctrl_TFEn_24_25),
	.o_EN_SR(ctrl_EN_SR_24_25),
	.o_SI(ctrl_SI_24_25)
  );
  Disp_Cmp \cmp:25.comparador  (
    .i_data_c1(costo[923:912]),
    .i_data_c2(s_sum_w[467:456]),
    .i_data_d1(dispa[538:532]),
    .i_data_d2(7'h19),
    .o_data_c(cmpcosto[467:456]),
    .o_data_d(cmpdispa[272:266]),
	.i_CLK_x(i_CLK_x_24_25),
	.i_RST_x(ctrl_RST_x_24_25),
	.i_TFEn(ctrl_TFEn_24_25),
	.i_EN_SR(ctrl_EN_SR_24_25),
	.i_SI(ctrl_SI_24_25),
	.o_CLK_x(ctrl_CLK_x_25_26),
	.o_RST_x(ctrl_RST_x_25_26),
	.o_TFEn(ctrl_TFEn_25_26),
	.o_EN_SR(ctrl_EN_SR_25_26),
	.o_SI(ctrl_SI_25_26)
  );
  Disp_Cmp \cmp:26.comparador  (
    .i_data_c1(costo[899:888]),
    .i_data_c2(s_sum_w[455:444]),
    .i_data_d1(dispa[524:518]),
    .i_data_d2(7'h1a),
    .o_data_c(cmpcosto[455:444]),
    .o_data_d(cmpdispa[265:259]),
	.i_CLK_x(i_CLK_x_25_26),
	.i_RST_x(ctrl_RST_x_25_26),
	.i_TFEn(ctrl_TFEn_25_26),
	.i_EN_SR(ctrl_EN_SR_25_26),
	.i_SI(ctrl_SI_25_26),
	.o_CLK_x(ctrl_CLK_x_26_27),
	.o_RST_x(ctrl_RST_x_26_27),
	.o_TFEn(ctrl_TFEn_26_27),
	.o_EN_SR(ctrl_EN_SR_26_27),
	.o_SI(ctrl_SI_26_27)
  );
  Disp_Cmp \cmp:27.comparador  (
    .i_data_c1(costo[875:864]),
    .i_data_c2(s_sum_w[443:432]),
    .i_data_d1(dispa[510:504]),
    .i_data_d2(7'h1b),
    .o_data_c(cmpcosto[443:432]),
    .o_data_d(cmpdispa[258:252]),
	.i_CLK_x(i_CLK_x_26_27),
	.i_RST_x(ctrl_RST_x_26_27),
	.i_TFEn(ctrl_TFEn_26_27),
	.i_EN_SR(ctrl_EN_SR_26_27),
	.i_SI(ctrl_SI_26_27),
	.o_CLK_x(ctrl_CLK_x_27_28),
	.o_RST_x(ctrl_RST_x_27_28),
	.o_TFEn(ctrl_TFEn_27_28),
	.o_EN_SR(ctrl_EN_SR_27_28),
	.o_SI(ctrl_SI_27_28)
  );
  Disp_Cmp \cmp:28.comparador  (
    .i_data_c1(costo[851:840]),
    .i_data_c2(s_sum_w[431:420]),
    .i_data_d1(dispa[496:490]),
    .i_data_d2(7'h1c),
    .o_data_c(cmpcosto[431:420]),
    .o_data_d(cmpdispa[251:245]),
	.i_CLK_x(i_CLK_x_27_28),
	.i_RST_x(ctrl_RST_x_27_28),
	.i_TFEn(ctrl_TFEn_27_28),
	.i_EN_SR(ctrl_EN_SR_27_28),
	.i_SI(ctrl_SI_27_28),
	.o_CLK_x(ctrl_CLK_x_28_29),
	.o_RST_x(ctrl_RST_x_28_29),
	.o_TFEn(ctrl_TFEn_28_29),
	.o_EN_SR(ctrl_EN_SR_28_29),
	.o_SI(ctrl_SI_28_29)
  );
  Disp_Cmp \cmp:29.comparador  (
    .i_data_c1(costo[827:816]),
    .i_data_c2(s_sum_w[419:408]),
    .i_data_d1(dispa[482:476]),
    .i_data_d2(7'h1d),
    .o_data_c(cmpcosto[419:408]),
    .o_data_d(cmpdispa[244:238]),
	.i_CLK_x(i_CLK_x_28_29),
	.i_RST_x(ctrl_RST_x_28_29),
	.i_TFEn(ctrl_TFEn_28_29),
	.i_EN_SR(ctrl_EN_SR_28_29),
	.i_SI(ctrl_SI_28_29),
	.o_CLK_x(ctrl_CLK_x_29_30),
	.o_RST_x(ctrl_RST_x_29_30),
	.o_TFEn(ctrl_TFEn_29_30),
	.o_EN_SR(ctrl_EN_SR_29_30),
	.o_SI(ctrl_SI_29_30)
  );
  Disp_Cmp \cmp:3.comparador  (
    .i_data_c1(costo[1451:1440]),
    .i_data_c2(s_sum_w[731:720]),
    .i_data_d1(dispa[846:840]),
    .i_data_d2(7'h03),
    .o_data_c(cmpcosto[731:720]),
    .o_data_d(cmpdispa[426:420]),
	.i_CLK_x(ctrl_CLK_x_2_3),              // Clock input
    .i_RST_x(ctrl_RST_x_2_3),              // Reset input
    .i_TFEn(ctrl_TFEn_2_3),                // Enable input
    .i_EN_SR(ctrl_EN_SR_2_3),              // Shift register enable input
    .i_SI(ctrl_SI_2_3),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_3_4),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_3_4),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_3_4),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_3_4),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_3_4)  
  );
  Disp_Cmp \cmp:30.comparador  (
    .i_data_c1(costo[803:792]),
    .i_data_c2(s_sum_w[407:396]),
    .i_data_d1(dispa[468:462]),
    .i_data_d2(7'h1e),
    .o_data_c(cmpcosto[407:396]),
    .o_data_d(cmpdispa[237:231]),
	.i_CLK_x(i_CLK_x_29_30),
	.i_RST_x(ctrl_RST_x_29_30),
	.i_TFEn(ctrl_TFEn_29_30),
	.i_EN_SR(ctrl_EN_SR_29_30),
	.i_SI(ctrl_SI_29_30),
	.o_CLK_x(ctrl_CLK_x_30_31),
	.o_RST_x(ctrl_RST_x_30_31),
	.o_TFEn(ctrl_TFEn_30_31),
	.o_EN_SR(ctrl_EN_SR_30_31),
	.o_SI(ctrl_SI_30_31)
  );
  Disp_Cmp \cmp:31.comparador  (
    .i_data_c1(costo[779:768]),
    .i_data_c2(s_sum_w[395:384]),
    .i_data_d1(dispa[454:448]),
    .i_data_d2(7'h1f),
    .o_data_c(cmpcosto[395:384]),
    .o_data_d(cmpdispa[230:224]),
	.i_CLK_x(i_CLK_x_30_31),
	.i_RST_x(ctrl_RST_x_30_31),
	.i_TFEn(ctrl_TFEn_30_31),
	.i_EN_SR(ctrl_EN_SR_30_31),
	.i_SI(ctrl_SI_30_31),
	.o_CLK_x(ctrl_CLK_x_31_32),
	.o_RST_x(ctrl_RST_x_31_32),
	.o_TFEn(ctrl_TFEn_31_32),
	.o_EN_SR(ctrl_EN_SR_31_32),
	.o_SI(ctrl_SI_31_32)
  );
  Disp_Cmp \cmp:32.comparador  (
    .i_data_c1(costo[755:744]),
    .i_data_c2(s_sum_w[383:372]),
    .i_data_d1(dispa[440:434]),
    .i_data_d2(7'h20),
    .o_data_c(cmpcosto[383:372]),
    .o_data_d(cmpdispa[223:217]),
	.i_CLK_x(i_CLK_x_31_32),
	.i_RST_x(ctrl_RST_x_31_32),
	.i_TFEn(ctrl_TFEn_31_32),
	.i_EN_SR(ctrl_EN_SR_31_32),
	.i_SI(ctrl_SI_31_32),
	.o_CLK_x(ctrl_CLK_x_32_33),
	.o_RST_x(ctrl_RST_x_32_33),
	.o_TFEn(ctrl_TFEn_32_33),
	.o_EN_SR(ctrl_EN_SR_32_33),
	.o_SI(ctrl_SI_32_33)
  );
  Disp_Cmp \cmp:33.comparador  (
    .i_data_c1(costo[731:720]),
    .i_data_c2(s_sum_w[371:360]),
    .i_data_d1(dispa[426:420]),
    .i_data_d2(7'h21),
    .o_data_c(cmpcosto[371:360]),
    .o_data_d(cmpdispa[216:210]),
	.i_CLK_x(i_CLK_x_32_33),
	.i_RST_x(ctrl_RST_x_32_33),
	.i_TFEn(ctrl_TFEn_32_33),
	.i_EN_SR(ctrl_EN_SR_32_33),
	.i_SI(ctrl_SI_32_33),
	.o_CLK_x(ctrl_CLK_x_33_34),
	.o_RST_x(ctrl_RST_x_33_34),
	.o_TFEn(ctrl_TFEn_33_34),
	.o_EN_SR(ctrl_EN_SR_33_34),
	.o_SI(ctrl_SI_33_34)
  );
  Disp_Cmp \cmp:34.comparador  (
    .i_data_c1(costo[707:696]),
    .i_data_c2(s_sum_w[359:348]),
    .i_data_d1(dispa[412:406]),
    .i_data_d2(7'h22),
    .o_data_c(cmpcosto[359:348]),
    .o_data_d(cmpdispa[209:203]),
	.i_CLK_x(i_CLK_x_33_34),
	.i_RST_x(ctrl_RST_x_33_34),
	.i_TFEn(ctrl_TFEn_33_34),
	.i_EN_SR(ctrl_EN_SR_33_34),
	.i_SI(ctrl_SI_33_34),
	.o_CLK_x(ctrl_CLK_x_34_35),
	.o_RST_x(ctrl_RST_x_34_35),
	.o_TFEn(ctrl_TFEn_34_35),
	.o_EN_SR(ctrl_EN_SR_34_35),
	.o_SI(ctrl_SI_34_35)
  );
  Disp_Cmp \cmp:35.comparador  (
    .i_data_c1(costo[683:672]),
    .i_data_c2(s_sum_w[347:336]),
    .i_data_d1(dispa[398:392]),
    .i_data_d2(7'h23),
    .o_data_c(cmpcosto[347:336]),
    .o_data_d(cmpdispa[202:196]),
	.i_CLK_x(i_CLK_x_34_35),
	.i_RST_x(ctrl_RST_x_34_35),
	.i_TFEn(ctrl_TFEn_34_35),
	.i_EN_SR(ctrl_EN_SR_34_35),
	.i_SI(ctrl_SI_34_35),
	.o_CLK_x(ctrl_CLK_x_35_36),
	.o_RST_x(ctrl_RST_x_35_36),
	.o_TFEn(ctrl_TFEn_35_36),
	.o_EN_SR(ctrl_EN_SR_35_36),
	.o_SI(ctrl_SI_35_36)
  );
  Disp_Cmp \cmp:36.comparador  (
    .i_data_c1(costo[659:648]),
    .i_data_c2(s_sum_w[335:324]),
    .i_data_d1(dispa[384:378]),
    .i_data_d2(7'h24),
    .o_data_c(cmpcosto[335:324]),
    .o_data_d(cmpdispa[195:189]),
	.i_CLK_x(i_CLK_x_35_36),
	.i_RST_x(ctrl_RST_x_35_36),
	.i_TFEn(ctrl_TFEn_35_36),
	.i_EN_SR(ctrl_EN_SR_35_36),
	.i_SI(ctrl_SI_35_36),
	.o_CLK_x(ctrl_CLK_x_36_37),
	.o_RST_x(ctrl_RST_x_36_37),
	.o_TFEn(ctrl_TFEn_36_37),
	.o_EN_SR(ctrl_EN_SR_36_37),
	.o_SI(ctrl_SI_36_37)
  );
  Disp_Cmp \cmp:37.comparador  (
    .i_data_c1(costo[635:624]),
    .i_data_c2(s_sum_w[323:312]),
    .i_data_d1(dispa[370:364]),
    .i_data_d2(7'h25),
    .o_data_c(cmpcosto[323:312]),
    .o_data_d(cmpdispa[188:182]),
	.i_CLK_x(i_CLK_x_36_37),
	.i_RST_x(ctrl_RST_x_36_37),
	.i_TFEn(ctrl_TFEn_36_37),
	.i_EN_SR(ctrl_EN_SR_36_37),
	.i_SI(ctrl_SI_36_37),
	.o_CLK_x(ctrl_CLK_x_37_38),
	.o_RST_x(ctrl_RST_x_37_38),
	.o_TFEn(ctrl_TFEn_37_38),
	.o_EN_SR(ctrl_EN_SR_37_38),
	.o_SI(ctrl_SI_37_38)
  );
  Disp_Cmp \cmp:38.comparador  (
    .i_data_c1(costo[611:600]),
    .i_data_c2(s_sum_w[311:300]),
    .i_data_d1(dispa[356:350]),
    .i_data_d2(7'h26),
    .o_data_c(cmpcosto[311:300]),
    .o_data_d(cmpdispa[181:175]),
	.i_CLK_x(i_CLK_x_37_38),
	.i_RST_x(ctrl_RST_x_37_38),
	.i_TFEn(ctrl_TFEn_37_38),
	.i_EN_SR(ctrl_EN_SR_37_38),
	.i_SI(ctrl_SI_37_38),
	.o_CLK_x(ctrl_CLK_x_38_39),
	.o_RST_x(ctrl_RST_x_38_39),
	.o_TFEn(ctrl_TFEn_38_39),
	.o_EN_SR(ctrl_EN_SR_38_39),
	.o_SI(ctrl_SI_38_39)
  );
  Disp_Cmp \cmp:39.comparador  (
    .i_data_c1(costo[587:576]),
    .i_data_c2(s_sum_w[299:288]),
    .i_data_d1(dispa[342:336]),
    .i_data_d2(7'h27),
    .o_data_c(cmpcosto[299:288]),
    .o_data_d(cmpdispa[174:168]),
	.i_CLK_x(i_CLK_x_38_39),
	.i_RST_x(ctrl_RST_x_38_39),
	.i_TFEn(ctrl_TFEn_38_39),
	.i_EN_SR(ctrl_EN_SR_38_39),
	.i_SI(ctrl_SI_38_39),
	.o_CLK_x(ctrl_CLK_x_39_40),
	.o_RST_x(ctrl_RST_x_39_40),
	.o_TFEn(ctrl_TFEn_39_40),
	.o_EN_SR(ctrl_EN_SR_39_40),
	.o_SI(ctrl_SI_39_40)
  );
  Disp_Cmp \cmp:4.comparador  (
    .i_data_c1(costo[1427:1416]),
    .i_data_c2(s_sum_w[719:708]),
    .i_data_d1(dispa[832:826]),
    .i_data_d2(7'h04),
    .o_data_c(cmpcosto[719:708]),
    .o_data_d(cmpdispa[419:413]),
	.i_CLK_x(ctrl_CLK_x_3_4),              // Clock input
    .i_RST_x(ctrl_RST_x_3_4),              // Reset input
    .i_TFEn(ctrl_TFEn_3_4),                // Enable input
    .i_EN_SR(ctrl_EN_SR_3_4),              // Shift register enable input
    .i_SI(ctrl_SI_3_4),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_4_5),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_4_5),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_4_5),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_4_5),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_4_5)  
  );
  Disp_Cmp \cmp:40.comparador  (
    .i_data_c1(costo[563:552]),
    .i_data_c2(s_sum_w[287:276]),
    .i_data_d1(dispa[328:322]),
    .i_data_d2(7'h28),
    .o_data_c(cmpcosto[287:276]),
    .o_data_d(cmpdispa[167:161]),
	.i_CLK_x(i_CLK_x_39_40),
	.i_RST_x(ctrl_RST_x_39_40),
	.i_TFEn(ctrl_TFEn_39_40),
	.i_EN_SR(ctrl_EN_SR_39_40),
	.i_SI(ctrl_SI_39_40),
	.o_CLK_x(ctrl_CLK_x_40_41),
	.o_RST_x(ctrl_RST_x_40_41),
	.o_TFEn(ctrl_TFEn_40_41),
	.o_EN_SR(ctrl_EN_SR_40_41),
	.o_SI(ctrl_SI_40_41)
  );
  Disp_Cmp \cmp:41.comparador  (
    .i_data_c1(costo[539:528]),
    .i_data_c2(s_sum_w[275:264]),
    .i_data_d1(dispa[314:308]),
    .i_data_d2(7'h29),
    .o_data_c(cmpcosto[275:264]),
    .o_data_d(cmpdispa[160:154]),
	.i_CLK_x(i_CLK_x_40_41),
	.i_RST_x(ctrl_RST_x_40_41),
	.i_TFEn(ctrl_TFEn_40_41),
	.i_EN_SR(ctrl_EN_SR_40_41),
	.i_SI(ctrl_SI_40_41),
	.o_CLK_x(ctrl_CLK_x_41_42),
	.o_RST_x(ctrl_RST_x_41_42),
	.o_TFEn(ctrl_TFEn_41_42),
	.o_EN_SR(ctrl_EN_SR_41_42),
	.o_SI(ctrl_SI_41_42)
  );
  Disp_Cmp \cmp:42.comparador  (
    .i_data_c1(costo[515:504]),
    .i_data_c2(s_sum_w[263:252]),
    .i_data_d1(dispa[300:294]),
    .i_data_d2(7'h2a),
    .o_data_c(cmpcosto[263:252]),
    .o_data_d(cmpdispa[153:147]),
	.i_CLK_x(i_CLK_x_41_42),
	.i_RST_x(ctrl_RST_x_41_42),
	.i_TFEn(ctrl_TFEn_41_42),
	.i_EN_SR(ctrl_EN_SR_41_42),
	.i_SI(ctrl_SI_41_42),
	.o_CLK_x(ctrl_CLK_x_42_43),
	.o_RST_x(ctrl_RST_x_42_43),
	.o_TFEn(ctrl_TFEn_42_43),
	.o_EN_SR(ctrl_EN_SR_42_43),
	.o_SI(ctrl_SI_42_43)
  );
  Disp_Cmp \cmp:43.comparador  (
    .i_data_c1(costo[491:480]),
    .i_data_c2(s_sum_w[251:240]),
    .i_data_d1(dispa[286:280]),
    .i_data_d2(7'h2b),
    .o_data_c(cmpcosto[251:240]),
    .o_data_d(cmpdispa[146:140]),
	.i_CLK_x(i_CLK_x_42_43),
	.i_RST_x(ctrl_RST_x_42_43),
	.i_TFEn(ctrl_TFEn_42_43),
	.i_EN_SR(ctrl_EN_SR_42_43),
	.i_SI(ctrl_SI_42_43),
	.o_CLK_x(ctrl_CLK_x_43_44),
	.o_RST_x(ctrl_RST_x_43_44),
	.o_TFEn(ctrl_TFEn_43_44),
	.o_EN_SR(ctrl_EN_SR_43_44),
	.o_SI(ctrl_SI_43_44)
  );
  Disp_Cmp \cmp:44.comparador  (
    .i_data_c1(costo[467:456]),
    .i_data_c2(s_sum_w[239:228]),
    .i_data_d1(dispa[272:266]),
    .i_data_d2(7'h2c),
    .o_data_c(cmpcosto[239:228]),
    .o_data_d(cmpdispa[139:133]),
	.i_CLK_x(i_CLK_x_43_44),
	.i_RST_x(ctrl_RST_x_43_44),
	.i_TFEn(ctrl_TFEn_43_44),
	.i_EN_SR(ctrl_EN_SR_43_44),
	.i_SI(ctrl_SI_43_44),
	.o_CLK_x(ctrl_CLK_x_44_45),
	.o_RST_x(ctrl_RST_x_44_45),
	.o_TFEn(ctrl_TFEn_44_45),
	.o_EN_SR(ctrl_EN_SR_44_45),
	.o_SI(ctrl_SI_44_45)
  );
  Disp_Cmp \cmp:45.comparador  (
    .i_data_c1(costo[443:432]),
    .i_data_c2(s_sum_w[227:216]),
    .i_data_d1(dispa[258:252]),
    .i_data_d2(7'h2d),
    .o_data_c(cmpcosto[227:216]),
    .o_data_d(cmpdispa[132:126]),
	.i_CLK_x(i_CLK_x_44_45),
	.i_RST_x(ctrl_RST_x_44_45),
	.i_TFEn(ctrl_TFEn_44_45),
	.i_EN_SR(ctrl_EN_SR_44_45),
	.i_SI(ctrl_SI_44_45),
	.o_CLK_x(ctrl_CLK_x_45_46),
	.o_RST_x(ctrl_RST_x_45_46),
	.o_TFEn(ctrl_TFEn_45_46),
	.o_EN_SR(ctrl_EN_SR_45_46),
	.o_SI(ctrl_SI_45_46)
  );
  Disp_Cmp \cmp:46.comparador  (
    .i_data_c1(costo[419:408]),
    .i_data_c2(s_sum_w[215:204]),
    .i_data_d1(dispa[244:238]),
    .i_data_d2(7'h2e),
    .o_data_c(cmpcosto[215:204]),
    .o_data_d(cmpdispa[125:119]),
	.i_CLK_x(i_CLK_x_45_46),
	.i_RST_x(ctrl_RST_x_45_46),
	.i_TFEn(ctrl_TFEn_45_46),
	.i_EN_SR(ctrl_EN_SR_45_46),
	.i_SI(ctrl_SI_45_46),
	.o_CLK_x(ctrl_CLK_x_46_47),
	.o_RST_x(ctrl_RST_x_46_47),
	.o_TFEn(ctrl_TFEn_46_47),
	.o_EN_SR(ctrl_EN_SR_46_47),
	.o_SI(ctrl_SI_46_47)
  );
  Disp_Cmp \cmp:47.comparador  (
    .i_data_c1(costo[395:384]),
    .i_data_c2(s_sum_w[203:192]),
    .i_data_d1(dispa[230:224]),
    .i_data_d2(7'h2f),
    .o_data_c(cmpcosto[203:192]),
    .o_data_d(cmpdispa[118:112]),
	.i_CLK_x(i_CLK_x_46_47),
	.i_RST_x(ctrl_RST_x_46_47),
	.i_TFEn(ctrl_TFEn_46_47),
	.i_EN_SR(ctrl_EN_SR_46_47),
	.i_SI(ctrl_SI_46_47),
	.o_CLK_x(ctrl_CLK_x_47_48),
	.o_RST_x(ctrl_RST_x_47_48),
	.o_TFEn(ctrl_TFEn_47_48),
	.o_EN_SR(ctrl_EN_SR_47_48),
	.o_SI(ctrl_SI_47_48)
  );
  Disp_Cmp \cmp:48.comparador  (
    .i_data_c1(costo[371:360]),
    .i_data_c2(s_sum_w[191:180]),
    .i_data_d1(dispa[216:210]),
    .i_data_d2(7'h30),
    .o_data_c(cmpcosto[191:180]),
    .o_data_d(cmpdispa[111:105]),
	.i_CLK_x(i_CLK_x_47_48),
	.i_RST_x(ctrl_RST_x_47_48),
	.i_TFEn(ctrl_TFEn_47_48),
	.i_EN_SR(ctrl_EN_SR_47_48),
	.i_SI(ctrl_SI_47_48),
	.o_CLK_x(ctrl_CLK_x_48_49),
	.o_RST_x(ctrl_RST_x_48_49),
	.o_TFEn(ctrl_TFEn_48_49),
	.o_EN_SR(ctrl_EN_SR_48_49),
	.o_SI(ctrl_SI_48_49)
  );
  Disp_Cmp \cmp:49.comparador  (
    .i_data_c1(costo[347:336]),
    .i_data_c2(s_sum_w[179:168]),
    .i_data_d1(dispa[202:196]),
    .i_data_d2(7'h31),
    .o_data_c(cmpcosto[179:168]),
    .o_data_d(cmpdispa[104:98]),
	.i_CLK_x(i_CLK_x_48_49),
	.i_RST_x(ctrl_RST_x_48_49),
	.i_TFEn(ctrl_TFEn_48_49),
	.i_EN_SR(ctrl_EN_SR_48_49),
	.i_SI(ctrl_SI_48_49),
	.o_CLK_x(ctrl_CLK_x_49_50),
	.o_RST_x(ctrl_RST_x_49_50),
	.o_TFEn(ctrl_TFEn_49_50),
	.o_EN_SR(ctrl_EN_SR_49_50),
	.o_SI(ctrl_SI_49_50)
  );
  Disp_Cmp \cmp:5.comparador  (
    .i_data_c1(costo[1403:1392]),
    .i_data_c2(s_sum_w[707:696]),
    .i_data_d1(dispa[818:812]),
    .i_data_d2(7'h05),
    .o_data_c(cmpcosto[707:696]),
    .o_data_d(cmpdispa[412:406]),
	.i_CLK_x(ctrl_CLK_x_4_5),              // Clock input
    .i_RST_x(ctrl_RST_x_4_5),              // Reset input
    .i_TFEn(ctrl_TFEn_4_5),                // Enable input
    .i_EN_SR(ctrl_EN_SR_4_5),              // Shift register enable input
    .i_SI(ctrl_SI_4_5),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_5_6),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_5_6),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_5_6),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_5_6),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_5_6) 
  );
  Disp_Cmp \cmp:50.comparador  (
    .i_data_c1(costo[323:312]),
    .i_data_c2(s_sum_w[167:156]),
    .i_data_d1(dispa[188:182]),
    .i_data_d2(7'h32),
    .o_data_c(cmpcosto[167:156]),
    .o_data_d(cmpdispa[97:91]),
	.i_CLK_x(i_CLK_x_49_50),
	.i_RST_x(ctrl_RST_x_49_50),
	.i_TFEn(ctrl_TFEn_49_50),
	.i_EN_SR(ctrl_EN_SR_49_50),
	.i_SI(ctrl_SI_49_50),
	.o_CLK_x(ctrl_CLK_x_50_51),
	.o_RST_x(ctrl_RST_x_50_51),
	.o_TFEn(ctrl_TFEn_50_51),
	.o_EN_SR(ctrl_EN_SR_50_51),
	.o_SI(ctrl_SI_50_51)
  );
  Disp_Cmp \cmp:51.comparador  (
    .i_data_c1(costo[299:288]),
    .i_data_c2(s_sum_w[155:144]),
    .i_data_d1(dispa[174:168]),
    .i_data_d2(7'h33),
    .o_data_c(cmpcosto[155:144]),
    .o_data_d(cmpdispa[90:84]),
	.i_CLK_x(i_CLK_x_50_51),
	.i_RST_x(ctrl_RST_x_50_51),
	.i_TFEn(ctrl_TFEn_50_51),
	.i_EN_SR(ctrl_EN_SR_50_51),
	.i_SI(ctrl_SI_50_51),
	.o_CLK_x(ctrl_CLK_x_51_52),
	.o_RST_x(ctrl_RST_x_51_52),
	.o_TFEn(ctrl_TFEn_51_52),
	.o_EN_SR(ctrl_EN_SR_51_52),
	.o_SI(ctrl_SI_51_52)
  );
  Disp_Cmp \cmp:52.comparador  (
    .i_data_c1(costo[275:264]),
    .i_data_c2(s_sum_w[143:132]),
    .i_data_d1(dispa[160:154]),
    .i_data_d2(7'h34),
    .o_data_c(cmpcosto[143:132]),
    .o_data_d(cmpdispa[83:77]),
	.i_CLK_x(i_CLK_x_51_52),
	.i_RST_x(ctrl_RST_x_51_52),
	.i_TFEn(ctrl_TFEn_51_52),
	.i_EN_SR(ctrl_EN_SR_51_52),
	.i_SI(ctrl_SI_51_52),
	.o_CLK_x(ctrl_CLK_x_52_53),
	.o_RST_x(ctrl_RST_x_52_53),
	.o_TFEn(ctrl_TFEn_52_53),
	.o_EN_SR(ctrl_EN_SR_52_53),
	.o_SI(ctrl_SI_52_53)
  );
  Disp_Cmp \cmp:53.comparador  (
    .i_data_c1(costo[251:240]),
    .i_data_c2(s_sum_w[131:120]),
    .i_data_d1(dispa[146:140]),
    .i_data_d2(7'h35),
    .o_data_c(cmpcosto[131:120]),
    .o_data_d(cmpdispa[76:70]),
	.i_CLK_x(i_CLK_x_52_53),
	.i_RST_x(ctrl_RST_x_52_53),
	.i_TFEn(ctrl_TFEn_52_53),
	.i_EN_SR(ctrl_EN_SR_52_53),
	.i_SI(ctrl_SI_52_53),
	.o_CLK_x(ctrl_CLK_x_53_54),
	.o_RST_x(ctrl_RST_x_53_54),
	.o_TFEn(ctrl_TFEn_53_54),
	.o_EN_SR(ctrl_EN_SR_53_54),
	.o_SI(ctrl_SI_53_54)
  );
  Disp_Cmp \cmp:54.comparador  (
    .i_data_c1(costo[227:216]),
    .i_data_c2(s_sum_w[119:108]),
    .i_data_d1(dispa[132:126]),
    .i_data_d2(7'h36),
    .o_data_c(cmpcosto[119:108]),
    .o_data_d(cmpdispa[69:63]),
	.i_CLK_x(i_CLK_x_53_54),
	.i_RST_x(ctrl_RST_x_53_54),
	.i_TFEn(ctrl_TFEn_53_54),
	.i_EN_SR(ctrl_EN_SR_53_54),
	.i_SI(ctrl_SI_53_54),
	.o_CLK_x(ctrl_CLK_x_54_55),
	.o_RST_x(ctrl_RST_x_54_55),
	.o_TFEn(ctrl_TFEn_54_55),
	.o_EN_SR(ctrl_EN_SR_54_55),
	.o_SI(ctrl_SI_54_55)
  );
  Disp_Cmp \cmp:55.comparador  (
    .i_data_c1(costo[203:192]),
    .i_data_c2(s_sum_w[107:96]),
    .i_data_d1(dispa[118:112]),
    .i_data_d2(7'h37),
    .o_data_c(cmpcosto[107:96]),
    .o_data_d(cmpdispa[62:56]),
	.i_CLK_x(i_CLK_x_54_55),
	.i_RST_x(ctrl_RST_x_54_55),
	.i_TFEn(ctrl_TFEn_54_55),
	.i_EN_SR(ctrl_EN_SR_54_55),
	.i_SI(ctrl_SI_54_55),
	.o_CLK_x(ctrl_CLK_x_55_56),
	.o_RST_x(ctrl_RST_x_55_56),
	.o_TFEn(ctrl_TFEn_55_56),
	.o_EN_SR(ctrl_EN_SR_55_56),
	.o_SI(ctrl_SI_55_56)

  );
  Disp_Cmp \cmp:56.comparador  (
    .i_data_c1(costo[179:168]),
    .i_data_c2(s_sum_w[95:84]),
    .i_data_d1(dispa[104:98]),
    .i_data_d2(7'h38),
    .o_data_c(cmpcosto[95:84]),
    .o_data_d(cmpdispa[55:49]),
	.i_CLK_x(i_CLK_x_55_56),
	.i_RST_x(ctrl_RST_x_55_56),
	.i_TFEn(ctrl_TFEn_55_56),
	.i_EN_SR(ctrl_EN_SR_55_56),
	.i_SI(ctrl_SI_55_56),
	.o_CLK_x(ctrl_CLK_x_56_57),
	.o_RST_x(ctrl_RST_x_56_57),
	.o_TFEn(ctrl_TFEn_56_57),
	.o_EN_SR(ctrl_EN_SR_56_57),
	.o_SI(ctrl_SI_56_57)
  );
  Disp_Cmp \cmp:57.comparador  (
    .i_data_c1(costo[155:144]),
    .i_data_c2(s_sum_w[83:72]),
    .i_data_d1(dispa[90:84]),
    .i_data_d2(7'h39),
    .o_data_c(cmpcosto[83:72]),
    .o_data_d(cmpdispa[48:42]),
	.i_CLK_x(i_CLK_x_56_57),
	.i_RST_x(ctrl_RST_x_56_57),
	.i_TFEn(ctrl_TFEn_56_57),
	.i_EN_SR(ctrl_EN_SR_56_57),
	.i_SI(ctrl_SI_56_57),
	.o_CLK_x(ctrl_CLK_x_57_58),
	.o_RST_x(ctrl_RST_x_57_58),
	.o_TFEn(ctrl_TFEn_57_58),
	.o_EN_SR(ctrl_EN_SR_57_58),
	.o_SI(ctrl_SI_57_58)
  );
  Disp_Cmp \cmp:58.comparador  (
    .i_data_c1(costo[131:120]),
    .i_data_c2(s_sum_w[71:60]),
    .i_data_d1(dispa[76:70]),
    .i_data_d2(7'h3a),
    .o_data_c(cmpcosto[71:60]),
    .o_data_d(cmpdispa[41:35]),
	.i_CLK_x(i_CLK_x_57_58),
	.i_RST_x(ctrl_RST_x_57_58),
	.i_TFEn(ctrl_TFEn_57_58),
	.i_EN_SR(ctrl_EN_SR_57_58),
	.i_SI(ctrl_SI_57_58),
	.o_CLK_x(ctrl_CLK_x_58_59),
	.o_RST_x(ctrl_RST_x_58_59),
	.o_TFEn(ctrl_TFEn_58_59),
	.o_EN_SR(ctrl_EN_SR_58_59),
	.o_SI(ctrl_SI_58_59)
  );
  Disp_Cmp \cmp:59.comparador  (
    .i_data_c1(costo[107:96]),
    .i_data_c2(s_sum_w[59:48]),
    .i_data_d1(dispa[62:56]),
    .i_data_d2(7'h3b),
    .o_data_c(cmpcosto[59:48]),
    .o_data_d(cmpdispa[34:28]),
	.i_CLK_x(i_CLK_x_58_59),
	.i_RST_x(ctrl_RST_x_58_59),
	.i_TFEn(ctrl_TFEn_58_59),
	.i_EN_SR(ctrl_EN_SR_58_59),
	.i_SI(ctrl_SI_58_59),
	.o_CLK_x(ctrl_CLK_x_59_60),
	.o_RST_x(ctrl_RST_x_59_60),
	.o_TFEn(ctrl_TFEn_59_60),
	.o_EN_SR(ctrl_EN_SR_59_60),
	.o_SI(ctrl_SI_59_60)
  );
  Disp_Cmp \cmp:6.comparador  (
    .i_data_c1(costo[1379:1368]),
    .i_data_c2(s_sum_w[695:684]),
    .i_data_d1(dispa[804:798]),
    .i_data_d2(7'h06),
    .o_data_c(cmpcosto[695:684]),
    .o_data_d(cmpdispa[405:399]),
	.i_CLK_x(ctrl_CLK_x_5_6),              // Clock input
    .i_RST_x(ctrl_RST_x_5_6),              // Reset input
    .i_TFEn(ctrl_TFEn_5_6),                // Enable input
    .i_EN_SR(ctrl_EN_SR_5_6),              // Shift register enable input
    .i_SI(ctrl_SI_5_6),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_6_7),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_6_7),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_6_7),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_6_7),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_6_7) 	
  );
  Disp_Cmp \cmp:60.comparador  (
    .i_data_c1(costo[83:72]),
    .i_data_c2(s_sum_w[47:36]),
    .i_data_d1(dispa[48:42]),
    .i_data_d2(7'h3c),
    .o_data_c(cmpcosto[47:36]),
    .o_data_d(cmpdispa[27:21]),
	.i_CLK_x(i_CLK_x_59_60),
	.i_RST_x(ctrl_RST_x_59_60),
	.i_TFEn(ctrl_TFEn_59_60),
	.i_EN_SR(ctrl_EN_SR_59_60),
	.i_SI(ctrl_SI_59_60),
	.o_CLK_x(ctrl_CLK_x_60_61),
	.o_RST_x(ctrl_RST_x_60_61),
	.o_TFEn(ctrl_TFEn_60_61),
	.o_EN_SR(ctrl_EN_SR_60_61),
	.o_SI(ctrl_SI_60_61)
  );
  Disp_Cmp \cmp:61.comparador  (
    .i_data_c1(costo[59:48]),
    .i_data_c2(s_sum_w[35:24]),
    .i_data_d1(dispa[34:28]),
    .i_data_d2(7'h3d),
    .o_data_c(cmpcosto[35:24]),
    .o_data_d(cmpdispa[20:14]),
	.i_CLK_x(i_CLK_x_60_61),
	.i_RST_x(ctrl_RST_x_60_61),
	.i_TFEn(ctrl_TFEn_60_61),
	.i_EN_SR(ctrl_EN_SR_60_61),
	.i_SI(ctrl_SI_60_61),
	.o_CLK_x(ctrl_CLK_x_61_62),
	.o_RST_x(ctrl_RST_x_61_62),
	.o_TFEn(ctrl_TFEn_61_62),
	.o_EN_SR(ctrl_EN_SR_61_62),
	.o_SI(ctrl_SI_61_62)
  );
  Disp_Cmp \cmp:62.comparador  (
    .i_data_c1(costo[35:24]),
    .i_data_c2(s_sum_w[23:12]),
    .i_data_d1(dispa[20:14]),
    .i_data_d2(7'h3e),
    .o_data_c(cmpcosto[23:12]),
    .o_data_d(cmpdispa[13:7]),
	.i_CLK_x(i_CLK_x_61_62),
	.i_RST_x(ctrl_RST_x_61_62),
	.i_TFEn(ctrl_TFEn_61_62),
	.i_EN_SR(ctrl_EN_SR_61_62),
	.i_SI(ctrl_SI_61_62),
	.o_CLK_x(ctrl_CLK_x_62_63),
	.o_RST_x(ctrl_RST_x_62_63),
	.o_TFEn(ctrl_TFEn_62_63),
	.o_EN_SR(ctrl_EN_SR_62_63),
	.o_SI(ctrl_SI_62_63)
  );
  Disp_Cmp \cmp:63.comparador  (
    .i_data_c1(costo[11:0]),
    .i_data_c2(s_sum_w[11:0]),
    .i_data_d1(dispa[6:0]),
    .i_data_d2(7'h3f),
    .o_data_c(cmpcosto[11:0]),
    .o_data_d(cmpdispa[6:0]),
	.i_CLK_x(i_CLK_x_62_63),
	.i_RST_x(ctrl_RST_x_62_63),
	.i_TFEn(ctrl_TFEn_62_63),
	.i_EN_SR(ctrl_EN_SR_62_63),
	.i_SI(ctrl_SI_62_63),
//	.o_CLK_x(ctrl_CLK_x_63_64),
//	.o_RST_x(ctrl_RST_x_63_64),
//	.o_TFEn(ctrl_TFEn_63_64),
//	.o_EN_SR(ctrl_EN_SR_63_64),
//	.o_SI(ctrl_SI_63_64)
	.o_CLK_x(injector_o_CLK_x),
	.o_RST_x(injector_o_RST_x),
	.o_TFEn(injector_o_TFEn),
	.o_EN_SR(injector_o_EN_SR),
	.o_SI(injector_o_SI)
  );

  Disp_Cmp \cmp:7.comparador  (
    .i_data_c1(costo[1355:1344]),
    .i_data_c2(s_sum_w[683:672]),
    .i_data_d1(dispa[790:784]),
    .i_data_d2(7'h07),
    .o_data_c(cmpcosto[683:672]),
    .o_data_d(cmpdispa[398:392]),
	.i_CLK_x(ctrl_CLK_x_6_7),              // Clock input
    .i_RST_x(ctrl_RST_x_6_7),              // Reset input
    .i_TFEn(ctrl_TFEn_6_7),                // Enable input
    .i_EN_SR(ctrl_EN_SR_6_7),              // Shift register enable input
    .i_SI(ctrl_SI_6_7),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_7_8),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_7_8),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_7_8),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_7_8),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_7_8)
  );
  Disp_Cmp \cmp:8.comparador  (
    .i_data_c1(costo[1331:1320]),
    .i_data_c2(s_sum_w[671:660]),
    .i_data_d1(dispa[776:770]),
    .i_data_d2(7'h08),
    .o_data_c(cmpcosto[671:660]),
    .o_data_d(cmpdispa[391:385]),
	.i_CLK_x(ctrl_CLK_x_7_8),              // Clock input
    .i_RST_x(ctrl_RST_x_7_8),              // Reset input
    .i_TFEn(ctrl_TFEn_7_8),                // Enable input
    .i_EN_SR(ctrl_EN_SR_7_8),              // Shift register enable input
    .i_SI(ctrl_SI_7_8),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_8_9),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_8_9),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_8_9),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_8_9),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_8_9)
  );
  Disp_Cmp \cmp:9.comparador  (
    .i_data_c1(costo[1307:1296]),
    .i_data_c2(s_sum_w[659:648]),
    .i_data_d1(dispa[762:756]),
    .i_data_d2(7'h09),
    .o_data_c(cmpcosto[659:648]),
    .o_data_d(cmpdispa[384:378]),
	.i_CLK_x(ctrl_CLK_x_8_9),              // Clock input
    .i_RST_x(ctrl_RST_x_8_9),              // Reset input
    .i_TFEn(ctrl_TFEn_8_9),                // Enable input
    .i_EN_SR(ctrl_EN_SR_8_9),              // Shift register enable input
    .i_SI(ctrl_SI_8_9),                    // Shift register serial input
    .o_CLK_x(ctrl_CLK_x_9_10),           // Control signal to be passed to cmp_10
    .o_RST_x(ctrl_RST_x_9_10),           // Control signal to be passed to cmp_10
    .o_TFEn(ctrl_TFEn_9_10),             // Control signal to be passed to cmp_10
    .o_EN_SR(ctrl_EN_SR_9_10),           // Control signal to be passed to cmp_10
    .o_SI(ctrl_SI_9_10)
  );
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  Disp_Cmp \cmpl:1.comparador  (
    .i_data_c1(costol[767:756]),
    .i_data_c2(s_sum_w[755:744]),
    .i_data_d1(dispal[447:441]),
    .i_data_d2(7'h01),
    .o_data_c(cmpcostol[755:744]),
    .o_data_d(cmpdispal[440:434])
  );
  Disp_Cmp \cmpl:10.comparador  (
    .i_data_c1(costol[659:648]),
    .i_data_c2(s_sum_w[647:636]),
    .i_data_d1(dispal[384:378]),
    .i_data_d2(7'h0a),
    .o_data_c(cmpcostol[647:636]),
    .o_data_d(cmpdispal[377:371])
  );
  Disp_Cmp \cmpl:11.comparador  (
    .i_data_c1(costol[647:636]),
    .i_data_c2(s_sum_w[635:624]),
    .i_data_d1(dispal[377:371]),
    .i_data_d2(7'h0b),
    .o_data_c(cmpcostol[635:624]),
    .o_data_d(cmpdispal[370:364])
  );
  Disp_Cmp \cmpl:12.comparador  (
    .i_data_c1(costol[635:624]),
    .i_data_c2(s_sum_w[623:612]),
    .i_data_d1(dispal[370:364]),
    .i_data_d2(7'h0c),
    .o_data_c(cmpcostol[623:612]),
    .o_data_d(cmpdispal[363:357])
  );
  Disp_Cmp \cmpl:13.comparador  (
    .i_data_c1(costol[623:612]),
    .i_data_c2(s_sum_w[611:600]),
    .i_data_d1(dispal[363:357]),
    .i_data_d2(7'h0d),
    .o_data_c(cmpcostol[611:600]),
    .o_data_d(cmpdispal[356:350])
  );
  Disp_Cmp \cmpl:14.comparador  (
    .i_data_c1(costol[611:600]),
    .i_data_c2(s_sum_w[599:588]),
    .i_data_d1(dispal[356:350]),
    .i_data_d2(7'h0e),
    .o_data_c(cmpcostol[599:588]),
    .o_data_d(cmpdispal[349:343])
  );
  Disp_Cmp \cmpl:15.comparador  (
    .i_data_c1(costol[599:588]),
    .i_data_c2(s_sum_w[587:576]),
    .i_data_d1(dispal[349:343]),
    .i_data_d2(7'h0f),
    .o_data_c(cmpcostol[587:576]),
    .o_data_d(cmpdispal[342:336])
  );
  Disp_Cmp \cmpl:16.comparador  (
    .i_data_c1(costol[587:576]),
    .i_data_c2(s_sum_w[575:564]),
    .i_data_d1(dispal[342:336]),
    .i_data_d2(7'h10),
    .o_data_c(cmpcostol[575:564]),
    .o_data_d(cmpdispal[335:329])
  );
  Disp_Cmp \cmpl:17.comparador  (
    .i_data_c1(costol[575:564]),
    .i_data_c2(s_sum_w[563:552]),
    .i_data_d1(dispal[335:329]),
    .i_data_d2(7'h11),
    .o_data_c(cmpcostol[563:552]),
    .o_data_d(cmpdispal[328:322])
  );
  Disp_Cmp \cmpl:18.comparador  (
    .i_data_c1(costol[563:552]),
    .i_data_c2(s_sum_w[551:540]),
    .i_data_d1(dispal[328:322]),
    .i_data_d2(7'h12),
    .o_data_c(cmpcostol[551:540]),
    .o_data_d(cmpdispal[321:315])
  );
  Disp_Cmp \cmpl:19.comparador  (
    .i_data_c1(costol[551:540]),
    .i_data_c2(s_sum_w[539:528]),
    .i_data_d1(dispal[321:315]),
    .i_data_d2(7'h13),
    .o_data_c(cmpcostol[539:528]),
    .o_data_d(cmpdispal[314:308])
  );
  Disp_Cmp \cmpl:2.comparador  (
    .i_data_c1(costol[755:744]),
    .i_data_c2(s_sum_w[743:732]),
    .i_data_d1(dispal[440:434]),
    .i_data_d2(7'h02),
    .o_data_c(cmpcostol[743:732]),
    .o_data_d(cmpdispal[433:427])
  );
  Disp_Cmp \cmpl:20.comparador  (
    .i_data_c1(costol[539:528]),
    .i_data_c2(s_sum_w[527:516]),
    .i_data_d1(dispal[314:308]),
    .i_data_d2(7'h14),
    .o_data_c(cmpcostol[527:516]),
    .o_data_d(cmpdispal[307:301])
  );
  Disp_Cmp \cmpl:21.comparador  (
    .i_data_c1(costol[527:516]),
    .i_data_c2(s_sum_w[515:504]),
    .i_data_d1(dispal[307:301]),
    .i_data_d2(7'h15),
    .o_data_c(cmpcostol[515:504]),
    .o_data_d(cmpdispal[300:294])
  );
  Disp_Cmp \cmpl:22.comparador  (
    .i_data_c1(costol[515:504]),
    .i_data_c2(s_sum_w[503:492]),
    .i_data_d1(dispal[300:294]),
    .i_data_d2(7'h16),
    .o_data_c(cmpcostol[503:492]),
    .o_data_d(cmpdispal[293:287])
  );
  Disp_Cmp \cmpl:23.comparador  (
    .i_data_c1(costol[503:492]),
    .i_data_c2(s_sum_w[491:480]),
    .i_data_d1(dispal[293:287]),
    .i_data_d2(7'h17),
    .o_data_c(cmpcostol[491:480]),
    .o_data_d(cmpdispal[286:280])
  );
  Disp_Cmp \cmpl:24.comparador  (
    .i_data_c1(costol[491:480]),
    .i_data_c2(s_sum_w[479:468]),
    .i_data_d1(dispal[286:280]),
    .i_data_d2(7'h18),
    .o_data_c(cmpcostol[479:468]),
    .o_data_d(cmpdispal[279:273])
  );
  Disp_Cmp \cmpl:25.comparador  (
    .i_data_c1(costol[479:468]),
    .i_data_c2(s_sum_w[467:456]),
    .i_data_d1(dispal[279:273]),
    .i_data_d2(7'h19),
    .o_data_c(cmpcostol[467:456]),
    .o_data_d(cmpdispal[272:266])
  );
  Disp_Cmp \cmpl:26.comparador  (
    .i_data_c1(costol[467:456]),
    .i_data_c2(s_sum_w[455:444]),
    .i_data_d1(dispal[272:266]),
    .i_data_d2(7'h1a),
    .o_data_c(cmpcostol[455:444]),
    .o_data_d(cmpdispal[265:259])
  );
  Disp_Cmp \cmpl:27.comparador  (
    .i_data_c1(costol[455:444]),
    .i_data_c2(s_sum_w[443:432]),
    .i_data_d1(dispal[265:259]),
    .i_data_d2(7'h1b),
    .o_data_c(cmpcostol[443:432]),
    .o_data_d(cmpdispal[258:252])
  );
  Disp_Cmp \cmpl:28.comparador  (
    .i_data_c1(costol[443:432]),
    .i_data_c2(s_sum_w[431:420]),
    .i_data_d1(dispal[258:252]),
    .i_data_d2(7'h1c),
    .o_data_c(cmpcostol[431:420]),
    .o_data_d(cmpdispal[251:245])
  );
  Disp_Cmp \cmpl:29.comparador  (
    .i_data_c1(costol[431:420]),
    .i_data_c2(s_sum_w[419:408]),
    .i_data_d1(dispal[251:245]),
    .i_data_d2(7'h1d),
    .o_data_c(cmpcostol[419:408]),
    .o_data_d(cmpdispal[244:238])
  );
  Disp_Cmp \cmpl:3.comparador  (
    .i_data_c1(costol[743:732]),
    .i_data_c2(s_sum_w[731:720]),
    .i_data_d1(dispal[433:427]),
    .i_data_d2(7'h03),
    .o_data_c(cmpcostol[731:720]),
    .o_data_d(cmpdispal[426:420])
  );
  Disp_Cmp \cmpl:30.comparador  (
    .i_data_c1(costol[419:408]),
    .i_data_c2(s_sum_w[407:396]),
    .i_data_d1(dispal[244:238]),
    .i_data_d2(7'h1e),
    .o_data_c(cmpcostol[407:396]),
    .o_data_d(cmpdispal[237:231])
  );
  Disp_Cmp \cmpl:31.comparador  (
    .i_data_c1(costol[407:396]),
    .i_data_c2(s_sum_w[395:384]),
    .i_data_d1(dispal[237:231]),
    .i_data_d2(7'h1f),
    .o_data_c(cmpcostol[395:384]),
    .o_data_d(cmpdispal[230:224])
  );
  Disp_Cmp \cmpl:32.comparador  (
    .i_data_c1(costol[395:384]),
    .i_data_c2(s_sum_w[383:372]),
    .i_data_d1(dispal[230:224]),
    .i_data_d2(7'h20),
    .o_data_c(cmpcostol[383:372]),
    .o_data_d(cmpdispal[223:217])
  );
  Disp_Cmp \cmpl:33.comparador  (
    .i_data_c1(costol[383:372]),
    .i_data_c2(s_sum_w[371:360]),
    .i_data_d1(dispal[223:217]),
    .i_data_d2(7'h21),
    .o_data_c(cmpcostol[371:360]),
    .o_data_d(cmpdispal[216:210])
  );
  Disp_Cmp \cmpl:34.comparador  (
    .i_data_c1(costol[371:360]),
    .i_data_c2(s_sum_w[359:348]),
    .i_data_d1(dispal[216:210]),
    .i_data_d2(7'h22),
    .o_data_c(cmpcostol[359:348]),
    .o_data_d(cmpdispal[209:203])
  );
  Disp_Cmp \cmpl:35.comparador  (
    .i_data_c1(costol[359:348]),
    .i_data_c2(s_sum_w[347:336]),
    .i_data_d1(dispal[209:203]),
    .i_data_d2(7'h23),
    .o_data_c(cmpcostol[347:336]),
    .o_data_d(cmpdispal[202:196])
  );
  Disp_Cmp \cmpl:36.comparador  (
    .i_data_c1(costol[347:336]),
    .i_data_c2(s_sum_w[335:324]),
    .i_data_d1(dispal[202:196]),
    .i_data_d2(7'h24),
    .o_data_c(cmpcostol[335:324]),
    .o_data_d(cmpdispal[195:189])
  );
  Disp_Cmp \cmpl:37.comparador  (
    .i_data_c1(costol[335:324]),
    .i_data_c2(s_sum_w[323:312]),
    .i_data_d1(dispal[195:189]),
    .i_data_d2(7'h25),
    .o_data_c(cmpcostol[323:312]),
    .o_data_d(cmpdispal[188:182])
  );
  Disp_Cmp \cmpl:38.comparador  (
    .i_data_c1(costol[323:312]),
    .i_data_c2(s_sum_w[311:300]),
    .i_data_d1(dispal[188:182]),
    .i_data_d2(7'h26),
    .o_data_c(cmpcostol[311:300]),
    .o_data_d(cmpdispal[181:175])
  );
  Disp_Cmp \cmpl:39.comparador  (
    .i_data_c1(costol[311:300]),
    .i_data_c2(s_sum_w[299:288]),
    .i_data_d1(dispal[181:175]),
    .i_data_d2(7'h27),
    .o_data_c(cmpcostol[299:288]),
    .o_data_d(cmpdispal[174:168])
  );
  Disp_Cmp \cmpl:4.comparador  (
    .i_data_c1(costol[731:720]),
    .i_data_c2(s_sum_w[719:708]),
    .i_data_d1(dispal[426:420]),
    .i_data_d2(7'h04),
    .o_data_c(cmpcostol[719:708]),
    .o_data_d(cmpdispal[419:413])
  );
  Disp_Cmp \cmpl:40.comparador  (
    .i_data_c1(costol[299:288]),
    .i_data_c2(s_sum_w[287:276]),
    .i_data_d1(dispal[174:168]),
    .i_data_d2(7'h28),
    .o_data_c(cmpcostol[287:276]),
    .o_data_d(cmpdispal[167:161])
  );
  Disp_Cmp \cmpl:41.comparador  (
    .i_data_c1(costol[287:276]),
    .i_data_c2(s_sum_w[275:264]),
    .i_data_d1(dispal[167:161]),
    .i_data_d2(7'h29),
    .o_data_c(cmpcostol[275:264]),
    .o_data_d(cmpdispal[160:154])
  );
  Disp_Cmp \cmpl:42.comparador  (
    .i_data_c1(costol[275:264]),
    .i_data_c2(s_sum_w[263:252]),
    .i_data_d1(dispal[160:154]),
    .i_data_d2(7'h2a),
    .o_data_c(cmpcostol[263:252]),
    .o_data_d(cmpdispal[153:147])
  );
  Disp_Cmp \cmpl:43.comparador  (
    .i_data_c1(costol[263:252]),
    .i_data_c2(s_sum_w[251:240]),
    .i_data_d1(dispal[153:147]),
    .i_data_d2(7'h2b),
    .o_data_c(cmpcostol[251:240]),
    .o_data_d(cmpdispal[146:140])
  );
  Disp_Cmp \cmpl:44.comparador  (
    .i_data_c1(costol[251:240]),
    .i_data_c2(s_sum_w[239:228]),
    .i_data_d1(dispal[146:140]),
    .i_data_d2(7'h2c),
    .o_data_c(cmpcostol[239:228]),
    .o_data_d(cmpdispal[139:133])
  );
  Disp_Cmp \cmpl:45.comparador  (
    .i_data_c1(costol[239:228]),
    .i_data_c2(s_sum_w[227:216]),
    .i_data_d1(dispal[139:133]),
    .i_data_d2(7'h2d),
    .o_data_c(cmpcostol[227:216]),
    .o_data_d(cmpdispal[132:126])
  );
  Disp_Cmp \cmpl:46.comparador  (
    .i_data_c1(costol[227:216]),
    .i_data_c2(s_sum_w[215:204]),
    .i_data_d1(dispal[132:126]),
    .i_data_d2(7'h2e),
    .o_data_c(cmpcostol[215:204]),
    .o_data_d(cmpdispal[125:119])
  );
  Disp_Cmp \cmpl:47.comparador  (
    .i_data_c1(costol[215:204]),
    .i_data_c2(s_sum_w[203:192]),
    .i_data_d1(dispal[125:119]),
    .i_data_d2(7'h2f),
    .o_data_c(cmpcostol[203:192]),
    .o_data_d(cmpdispal[118:112])
  );
  Disp_Cmp \cmpl:48.comparador  (
    .i_data_c1(costol[203:192]),
    .i_data_c2(s_sum_w[191:180]),
    .i_data_d1(dispal[118:112]),
    .i_data_d2(7'h30),
    .o_data_c(cmpcostol[191:180]),
    .o_data_d(cmpdispal[111:105])
  );
  Disp_Cmp \cmpl:49.comparador  (
    .i_data_c1(costol[191:180]),
    .i_data_c2(s_sum_w[179:168]),
    .i_data_d1(dispal[111:105]),
    .i_data_d2(7'h31),
    .o_data_c(cmpcostol[179:168]),
    .o_data_d(cmpdispal[104:98])
  );
  Disp_Cmp \cmpl:5.comparador  (
    .i_data_c1(costol[719:708]),
    .i_data_c2(s_sum_w[707:696]),
    .i_data_d1(dispal[419:413]),
    .i_data_d2(7'h05),
    .o_data_c(cmpcostol[707:696]),
    .o_data_d(cmpdispal[412:406])
  );
  Disp_Cmp \cmpl:50.comparador  (
    .i_data_c1(costol[179:168]),
    .i_data_c2(s_sum_w[167:156]),
    .i_data_d1(dispal[104:98]),
    .i_data_d2(7'h32),
    .o_data_c(cmpcostol[167:156]),
    .o_data_d(cmpdispal[97:91])
  );
  Disp_Cmp \cmpl:51.comparador  (
    .i_data_c1(costol[167:156]),
    .i_data_c2(s_sum_w[155:144]),
    .i_data_d1(dispal[97:91]),
    .i_data_d2(7'h33),
    .o_data_c(cmpcostol[155:144]),
    .o_data_d(cmpdispal[90:84])
  );
  Disp_Cmp \cmpl:52.comparador  (
    .i_data_c1(costol[155:144]),
    .i_data_c2(s_sum_w[143:132]),
    .i_data_d1(dispal[90:84]),
    .i_data_d2(7'h34),
    .o_data_c(cmpcostol[143:132]),
    .o_data_d(cmpdispal[83:77])
  );
  Disp_Cmp \cmpl:53.comparador  (
    .i_data_c1(costol[143:132]),
    .i_data_c2(s_sum_w[131:120]),
    .i_data_d1(dispal[83:77]),
    .i_data_d2(7'h35),
    .o_data_c(cmpcostol[131:120]),
    .o_data_d(cmpdispal[76:70])
  );
  Disp_Cmp \cmpl:54.comparador  (
    .i_data_c1(costol[131:120]),
    .i_data_c2(s_sum_w[119:108]),
    .i_data_d1(dispal[76:70]),
    .i_data_d2(7'h36),
    .o_data_c(cmpcostol[119:108]),
    .o_data_d(cmpdispal[69:63])
  );
  Disp_Cmp \cmpl:55.comparador  (
    .i_data_c1(costol[119:108]),
    .i_data_c2(s_sum_w[107:96]),
    .i_data_d1(dispal[69:63]),
    .i_data_d2(7'h37),
    .o_data_c(cmpcostol[107:96]),
    .o_data_d(cmpdispal[62:56])
  );
  Disp_Cmp \cmpl:56.comparador  (
    .i_data_c1(costol[107:96]),
    .i_data_c2(s_sum_w[95:84]),
    .i_data_d1(dispal[62:56]),
    .i_data_d2(7'h38),
    .o_data_c(cmpcostol[95:84]),
    .o_data_d(cmpdispal[55:49])
  );
  Disp_Cmp \cmpl:57.comparador  (
    .i_data_c1(costol[95:84]),
    .i_data_c2(s_sum_w[83:72]),
    .i_data_d1(dispal[55:49]),
    .i_data_d2(7'h39),
    .o_data_c(cmpcostol[83:72]),
    .o_data_d(cmpdispal[48:42])
  );
  Disp_Cmp \cmpl:58.comparador  (
    .i_data_c1(costol[83:72]),
    .i_data_c2(s_sum_w[71:60]),
    .i_data_d1(dispal[48:42]),
    .i_data_d2(7'h3a),
    .o_data_c(cmpcostol[71:60]),
    .o_data_d(cmpdispal[41:35])
  );
  Disp_Cmp \cmpl:59.comparador  (
    .i_data_c1(costol[71:60]),
    .i_data_c2(s_sum_w[59:48]),
    .i_data_d1(dispal[41:35]),
    .i_data_d2(7'h3b),
    .o_data_c(cmpcostol[59:48]),
    .o_data_d(cmpdispal[34:28])
  );
  Disp_Cmp \cmpl:6.comparador  (
    .i_data_c1(costol[707:696]),
    .i_data_c2(s_sum_w[695:684]),
    .i_data_d1(dispal[412:406]),
    .i_data_d2(7'h06),
    .o_data_c(cmpcostol[695:684]),
    .o_data_d(cmpdispal[405:399])
  );
  Disp_Cmp \cmpl:60.comparador  (
    .i_data_c1(costol[59:48]),
    .i_data_c2(s_sum_w[47:36]),
    .i_data_d1(dispal[34:28]),
    .i_data_d2(7'h3c),
    .o_data_c(cmpcostol[47:36]),
    .o_data_d(cmpdispal[27:21])
  );
  Disp_Cmp \cmpl:61.comparador  (
    .i_data_c1(costol[47:36]),
    .i_data_c2(s_sum_w[35:24]),
    .i_data_d1(dispal[27:21]),
    .i_data_d2(7'h3d),
    .o_data_c(cmpcostol[35:24]),
    .o_data_d(cmpdispal[20:14])
  );
  Disp_Cmp \cmpl:62.comparador  (
    .i_data_c1(costol[35:24]),
    .i_data_c2(s_sum_w[23:12]),
    .i_data_d1(dispal[20:14]),
    .i_data_d2(7'h3e),
    .o_data_c(cmpcostol[23:12]),
    .o_data_d(cmpdispal[13:7])
  );
  Disp_Cmp \cmpl:63.comparador  (
    .i_data_c1(costol[23:12]),
    .i_data_c2(s_sum_w[11:0]),
    .i_data_d1(dispal[13:7]),
    .i_data_d2(7'h3f),
    .o_data_c(cmpcostol[11:0]),
    .o_data_d(cmpdispal[6:0])
  );
  Disp_Cmp \cmpl:7.comparador  (
    .i_data_c1(costol[695:684]),
    .i_data_c2(s_sum_w[683:672]),
    .i_data_d1(dispal[405:399]),
    .i_data_d2(7'h07),
    .o_data_c(cmpcostol[683:672]),
    .o_data_d(cmpdispal[398:392])
  );
  Disp_Cmp \cmpl:8.comparador  (
    .i_data_c1(costol[683:672]),
    .i_data_c2(s_sum_w[671:660]),
    .i_data_d1(dispal[398:392]),
    .i_data_d2(7'h08),
    .o_data_c(cmpcostol[671:660]),
    .o_data_d(cmpdispal[391:385])
  );
  Disp_Cmp \cmpl:9.comparador  (
    .i_data_c1(costol[671:660]),
    .i_data_c2(s_sum_w[659:648]),
    .i_data_d1(dispal[391:385]),
    .i_data_d2(7'h09),
    .o_data_c(cmpcostol[659:648]),
    .o_data_d(cmpdispal[384:378])
  );
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  num_of_ones_7 \deep_h:1.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1535:1512]),
    .i_dval(s_valid_inh[0]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[319:315]),
    .o_dval(ghdl_gen_141_)
  );
  num_of_ones_7 \deep_h:10.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1319:1296]),
    .i_dval(s_valid_inh[18]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[274:270]),
    .o_dval(ghdl_gen_150_)
  );
  num_of_ones_7 \deep_h:11.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1295:1272]),
    .i_dval(s_valid_inh[20]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[269:265]),
    .o_dval(ghdl_gen_151_)
  );
  num_of_ones_7 \deep_h:12.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1271:1248]),
    .i_dval(s_valid_inh[22]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[264:260]),
    .o_dval(ghdl_gen_152_)
  );
  num_of_ones_7 \deep_h:13.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1247:1224]),
    .i_dval(s_valid_inh[24]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[259:255]),
    .o_dval(ghdl_gen_153_)
  );
  num_of_ones_7 \deep_h:14.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1223:1200]),
    .i_dval(s_valid_inh[26]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[254:250]),
    .o_dval(ghdl_gen_154_)
  );
  num_of_ones_7 \deep_h:15.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1199:1176]),
    .i_dval(s_valid_inh[28]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[249:245]),
    .o_dval(ghdl_gen_155_)
  );
  num_of_ones_7 \deep_h:16.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1175:1152]),
    .i_dval(s_valid_inh[30]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[244:240]),
    .o_dval(ghdl_gen_156_)
  );
  num_of_ones_7 \deep_h:17.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1151:1128]),
    .i_dval(s_valid_inh[32]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[239:235]),
    .o_dval(ghdl_gen_157_)
  );
  num_of_ones_7 \deep_h:18.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1127:1104]),
    .i_dval(s_valid_inh[34]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[234:230]),
    .o_dval(ghdl_gen_158_)
  );
  num_of_ones_7 \deep_h:19.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1103:1080]),
    .i_dval(s_valid_inh[36]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[229:225]),
    .o_dval(ghdl_gen_159_)
  );
  num_of_ones_7 \deep_h:2.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1511:1488]),
    .i_dval(s_valid_inh[2]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[314:310]),
    .o_dval(ghdl_gen_142_)
  );
  num_of_ones_7 \deep_h:20.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1079:1056]),
    .i_dval(s_valid_inh[38]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[224:220]),
    .o_dval(ghdl_gen_160_)
  );
  num_of_ones_7 \deep_h:21.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1055:1032]),
    .i_dval(s_valid_inh[40]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[219:215]),
    .o_dval(ghdl_gen_161_)
  );
  num_of_ones_7 \deep_h:22.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1031:1008]),
    .i_dval(s_valid_inh[42]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[214:210]),
    .o_dval(ghdl_gen_162_)
  );
  num_of_ones_7 \deep_h:23.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1007:984]),
    .i_dval(s_valid_inh[44]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[209:205]),
    .o_dval(ghdl_gen_163_)
  );
  num_of_ones_7 \deep_h:24.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[983:960]),
    .i_dval(s_valid_inh[46]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[204:200]),
    .o_dval(ghdl_gen_164_)
  );
  num_of_ones_7 \deep_h:25.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[959:936]),
    .i_dval(s_valid_inh[48]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[199:195]),
    .o_dval(ghdl_gen_165_)
  );
  num_of_ones_7 \deep_h:26.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[935:912]),
    .i_dval(s_valid_inh[50]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[194:190]),
    .o_dval(ghdl_gen_166_)
  );
  num_of_ones_7 \deep_h:27.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[911:888]),
    .i_dval(s_valid_inh[52]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[189:185]),
    .o_dval(ghdl_gen_167_)
  );
  num_of_ones_7 \deep_h:28.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[887:864]),
    .i_dval(s_valid_inh[54]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[184:180]),
    .o_dval(ghdl_gen_168_)
  );
  num_of_ones_7 \deep_h:29.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[863:840]),
    .i_dval(s_valid_inh[56]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[179:175]),
    .o_dval(ghdl_gen_169_)
  );
  num_of_ones_7 \deep_h:3.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1487:1464]),
    .i_dval(s_valid_inh[4]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[309:305]),
    .o_dval(ghdl_gen_143_)
  );
  num_of_ones_7 \deep_h:30.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[839:816]),
    .i_dval(s_valid_inh[58]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[174:170]),
    .o_dval(ghdl_gen_170_)
  );
  num_of_ones_7 \deep_h:31.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[815:792]),
    .i_dval(s_valid_inh[60]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[169:165]),
    .o_dval(ghdl_gen_171_)
  );
  num_of_ones_7 \deep_h:32.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[791:768]),
    .i_dval(s_valid_inh[62]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[164:160]),
    .o_dval(ghdl_gen_172_)
  );
  num_of_ones_7 \deep_h:33.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[767:744]),
    .i_dval(s_valid_inh[64]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[159:155]),
    .o_dval(ghdl_gen_173_)
  );
  num_of_ones_7 \deep_h:34.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[743:720]),
    .i_dval(s_valid_inh[66]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[154:150]),
    .o_dval(ghdl_gen_174_)
  );
  num_of_ones_7 \deep_h:35.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[719:696]),
    .i_dval(s_valid_inh[68]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[149:145]),
    .o_dval(ghdl_gen_175_)
  );
  num_of_ones_7 \deep_h:36.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[695:672]),
    .i_dval(s_valid_inh[70]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[144:140]),
    .o_dval(ghdl_gen_176_)
  );
  num_of_ones_7 \deep_h:37.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[671:648]),
    .i_dval(s_valid_inh[72]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[139:135]),
    .o_dval(ghdl_gen_177_)
  );
  num_of_ones_7 \deep_h:38.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[647:624]),
    .i_dval(s_valid_inh[74]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[134:130]),
    .o_dval(ghdl_gen_178_)
  );
  num_of_ones_7 \deep_h:39.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[623:600]),
    .i_dval(s_valid_inh[76]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[129:125]),
    .o_dval(ghdl_gen_179_)
  );
  num_of_ones_7 \deep_h:4.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1463:1440]),
    .i_dval(s_valid_inh[6]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[304:300]),
    .o_dval(ghdl_gen_144_)
  );
  num_of_ones_7 \deep_h:40.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[599:576]),
    .i_dval(s_valid_inh[78]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[124:120]),
    .o_dval(ghdl_gen_180_)
  );
  num_of_ones_7 \deep_h:41.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[575:552]),
    .i_dval(s_valid_inh[80]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[119:115]),
    .o_dval(ghdl_gen_181_)
  );
  num_of_ones_7 \deep_h:42.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[551:528]),
    .i_dval(s_valid_inh[82]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[114:110]),
    .o_dval(ghdl_gen_182_)
  );
  num_of_ones_7 \deep_h:43.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[527:504]),
    .i_dval(s_valid_inh[84]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[109:105]),
    .o_dval(ghdl_gen_183_)
  );
  num_of_ones_7 \deep_h:44.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[503:480]),
    .i_dval(s_valid_inh[86]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[104:100]),
    .o_dval(ghdl_gen_184_)
  );
  num_of_ones_7 \deep_h:45.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[479:456]),
    .i_dval(s_valid_inh[88]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[99:95]),
    .o_dval(ghdl_gen_185_)
  );
  num_of_ones_7 \deep_h:46.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[455:432]),
    .i_dval(s_valid_inh[90]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[94:90]),
    .o_dval(ghdl_gen_186_)
  );
  num_of_ones_7 \deep_h:47.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[431:408]),
    .i_dval(s_valid_inh[92]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[89:85]),
    .o_dval(ghdl_gen_187_)
  );
  num_of_ones_7 \deep_h:48.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[407:384]),
    .i_dval(s_valid_inh[94]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[84:80]),
    .o_dval(ghdl_gen_188_)
  );
  num_of_ones_7 \deep_h:49.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[383:360]),
    .i_dval(s_valid_inh[96]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[79:75]),
    .o_dval(ghdl_gen_189_)
  );
  num_of_ones_7 \deep_h:5.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1439:1416]),
    .i_dval(s_valid_inh[8]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[299:295]),
    .o_dval(ghdl_gen_145_)
  );
  num_of_ones_7 \deep_h:50.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[359:336]),
    .i_dval(s_valid_inh[98]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[74:70]),
    .o_dval(ghdl_gen_190_)
  );
  num_of_ones_7 \deep_h:51.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[335:312]),
    .i_dval(s_valid_inh[100]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[69:65]),
    .o_dval(ghdl_gen_191_)
  );
  num_of_ones_7 \deep_h:52.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[311:288]),
    .i_dval(s_valid_inh[102]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[64:60]),
    .o_dval(ghdl_gen_192_)
  );
  num_of_ones_7 \deep_h:53.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[287:264]),
    .i_dval(s_valid_inh[104]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[59:55]),
    .o_dval(ghdl_gen_193_)
  );
  num_of_ones_7 \deep_h:54.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[263:240]),
    .i_dval(s_valid_inh[106]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[54:50]),
    .o_dval(ghdl_gen_194_)
  );
  num_of_ones_7 \deep_h:55.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[239:216]),
    .i_dval(s_valid_inh[108]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[49:45]),
    .o_dval(ghdl_gen_195_)
  );
  num_of_ones_7 \deep_h:56.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[215:192]),
    .i_dval(s_valid_inh[110]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[44:40]),
    .o_dval(ghdl_gen_196_)
  );
  num_of_ones_7 \deep_h:57.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[191:168]),
    .i_dval(s_valid_inh[112]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[39:35]),
    .o_dval(ghdl_gen_197_)
  );
  num_of_ones_7 \deep_h:58.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[167:144]),
    .i_dval(s_valid_inh[114]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[34:30]),
    .o_dval(ghdl_gen_198_)
  );
  num_of_ones_7 \deep_h:59.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[143:120]),
    .i_dval(s_valid_inh[116]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[29:25]),
    .o_dval(ghdl_gen_199_)
  );
  num_of_ones_7 \deep_h:6.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1415:1392]),
    .i_dval(s_valid_inh[10]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[294:290]),
    .o_dval(ghdl_gen_146_)
  );
  num_of_ones_7 \deep_h:60.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[119:96]),
    .i_dval(s_valid_inh[118]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[24:20]),
    .o_dval(ghdl_gen_200_)
  );
  num_of_ones_7 \deep_h:61.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[95:72]),
    .i_dval(s_valid_inh[120]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[19:15]),
    .o_dval(ghdl_gen_201_)
  );
  num_of_ones_7 \deep_h:62.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[71:48]),
    .i_dval(s_valid_inh[122]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[14:10]),
    .o_dval(ghdl_gen_202_)
  );
  num_of_ones_7 \deep_h:63.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[47:24]),
    .i_dval(s_valid_inh[124]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[9:5]),
    .o_dval(ghdl_gen_203_)
  );
  num_of_ones_7 \deep_h:64.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[23:0]),
    .i_dval(s_valid_inh[126]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[4:0]),
    .o_dval(ghdl_gen_204_)
  );
  num_of_ones_7 \deep_h:7.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1391:1368]),
    .i_dval(s_valid_inh[12]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[289:285]),
    .o_dval(ghdl_gen_147_)
  );
  num_of_ones_7 \deep_h:8.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1367:1344]),
    .i_dval(s_valid_inh[14]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[284:280]),
    .o_dval(ghdl_gen_148_)
  );
  num_of_ones_7 \deep_h:9.sum1  (
    .i_clk(i_clk),
    .i_data(s_hamming_h[1343:1320]),
    .i_dval(s_valid_inh[16]),
    .i_rst(i_rst),
    .o_data(s_phamming_h[279:275]),
    .o_dval(ghdl_gen_149_)
  );
  num_of_ones_7 \deep_l:1.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1535:1512]),
    .i_dval(s_valid_in[0]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[319:315]),
    .o_dval(s_valid_l[0])
  );
  num_of_ones_7 \deep_l:10.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1319:1296]),
    .i_dval(s_valid_in[18]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[274:270]),
    .o_dval(s_valid_l[9])
  );
  num_of_ones_7 \deep_l:11.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1295:1272]),
    .i_dval(s_valid_in[20]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[269:265]),
    .o_dval(s_valid_l[10])
  );
  num_of_ones_7 \deep_l:12.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1271:1248]),
    .i_dval(s_valid_in[22]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[264:260]),
    .o_dval(s_valid_l[11])
  );
  num_of_ones_7 \deep_l:13.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1247:1224]),
    .i_dval(s_valid_in[24]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[259:255]),
    .o_dval(s_valid_l[12])
  );
  num_of_ones_7 \deep_l:14.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1223:1200]),
    .i_dval(s_valid_in[26]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[254:250]),
    .o_dval(s_valid_l[13])
  );
  num_of_ones_7 \deep_l:15.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1199:1176]),
    .i_dval(s_valid_in[28]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[249:245]),
    .o_dval(s_valid_l[14])
  );
  num_of_ones_7 \deep_l:16.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1175:1152]),
    .i_dval(s_valid_in[30]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[244:240]),
    .o_dval(s_valid_l[15])
  );
  num_of_ones_7 \deep_l:17.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1151:1128]),
    .i_dval(s_valid_in[32]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[239:235]),
    .o_dval(s_valid_l[16])
  );
  num_of_ones_7 \deep_l:18.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1127:1104]),
    .i_dval(s_valid_in[34]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[234:230]),
    .o_dval(s_valid_l[17])
  );
  num_of_ones_7 \deep_l:19.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1103:1080]),
    .i_dval(s_valid_in[36]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[229:225]),
    .o_dval(s_valid_l[18])
  );
  num_of_ones_7 \deep_l:2.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1511:1488]),
    .i_dval(s_valid_in[2]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[314:310]),
    .o_dval(s_valid_l[1])
  );
  num_of_ones_7 \deep_l:20.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1079:1056]),
    .i_dval(s_valid_in[38]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[224:220]),
    .o_dval(s_valid_l[19])
  );
  num_of_ones_7 \deep_l:21.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1055:1032]),
    .i_dval(s_valid_in[40]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[219:215]),
    .o_dval(s_valid_l[20])
  );
  num_of_ones_7 \deep_l:22.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1031:1008]),
    .i_dval(s_valid_in[42]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[214:210]),
    .o_dval(s_valid_l[21])
  );
  num_of_ones_7 \deep_l:23.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1007:984]),
    .i_dval(s_valid_in[44]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[209:205]),
    .o_dval(s_valid_l[22])
  );
  num_of_ones_7 \deep_l:24.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[983:960]),
    .i_dval(s_valid_in[46]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[204:200]),
    .o_dval(s_valid_l[23])
  );
  num_of_ones_7 \deep_l:25.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[959:936]),
    .i_dval(s_valid_in[48]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[199:195]),
    .o_dval(s_valid_l[24])
  );
  num_of_ones_7 \deep_l:26.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[935:912]),
    .i_dval(s_valid_in[50]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[194:190]),
    .o_dval(s_valid_l[25])
  );
  num_of_ones_7 \deep_l:27.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[911:888]),
    .i_dval(s_valid_in[52]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[189:185]),
    .o_dval(s_valid_l[26])
  );
  num_of_ones_7 \deep_l:28.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[887:864]),
    .i_dval(s_valid_in[54]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[184:180]),
    .o_dval(s_valid_l[27])
  );
  num_of_ones_7 \deep_l:29.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[863:840]),
    .i_dval(s_valid_in[56]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[179:175]),
    .o_dval(s_valid_l[28])
  );
  num_of_ones_7 \deep_l:3.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1487:1464]),
    .i_dval(s_valid_in[4]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[309:305]),
    .o_dval(s_valid_l[2])
  );
  num_of_ones_7 \deep_l:30.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[839:816]),
    .i_dval(s_valid_in[58]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[174:170]),
    .o_dval(s_valid_l[29])
  );
  num_of_ones_7 \deep_l:31.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[815:792]),
    .i_dval(s_valid_in[60]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[169:165]),
    .o_dval(s_valid_l[30])
  );
  num_of_ones_7 \deep_l:32.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[791:768]),
    .i_dval(s_valid_in[62]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[164:160]),
    .o_dval(s_valid_l[31])
  );
  num_of_ones_7 \deep_l:33.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[767:744]),
    .i_dval(s_valid_in[64]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[159:155]),
    .o_dval(s_valid_l[32])
  );
  num_of_ones_7 \deep_l:34.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[743:720]),
    .i_dval(s_valid_in[66]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[154:150]),
    .o_dval(s_valid_l[33])
  );
  num_of_ones_7 \deep_l:35.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[719:696]),
    .i_dval(s_valid_in[68]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[149:145]),
    .o_dval(s_valid_l[34])
  );
  num_of_ones_7 \deep_l:36.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[695:672]),
    .i_dval(s_valid_in[70]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[144:140]),
    .o_dval(s_valid_l[35])
  );
  num_of_ones_7 \deep_l:37.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[671:648]),
    .i_dval(s_valid_in[72]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[139:135]),
    .o_dval(s_valid_l[36])
  );
  num_of_ones_7 \deep_l:38.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[647:624]),
    .i_dval(s_valid_in[74]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[134:130]),
    .o_dval(s_valid_l[37])
  );
  num_of_ones_7 \deep_l:39.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[623:600]),
    .i_dval(s_valid_in[76]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[129:125]),
    .o_dval(s_valid_l[38])
  );
  num_of_ones_7 \deep_l:4.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1463:1440]),
    .i_dval(s_valid_in[6]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[304:300]),
    .o_dval(s_valid_l[3])
  );
  num_of_ones_7 \deep_l:40.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[599:576]),
    .i_dval(s_valid_in[78]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[124:120]),
    .o_dval(s_valid_l[39])
  );
  num_of_ones_7 \deep_l:41.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[575:552]),
    .i_dval(s_valid_in[80]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[119:115]),
    .o_dval(s_valid_l[40])
  );
  num_of_ones_7 \deep_l:42.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[551:528]),
    .i_dval(s_valid_in[82]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[114:110]),
    .o_dval(s_valid_l[41])
  );
  num_of_ones_7 \deep_l:43.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[527:504]),
    .i_dval(s_valid_in[84]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[109:105]),
    .o_dval(s_valid_l[42])
  );
  num_of_ones_7 \deep_l:44.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[503:480]),
    .i_dval(s_valid_in[86]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[104:100]),
    .o_dval(s_valid_l[43])
  );
  num_of_ones_7 \deep_l:45.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[479:456]),
    .i_dval(s_valid_in[88]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[99:95]),
    .o_dval(s_valid_l[44])
  );
  num_of_ones_7 \deep_l:46.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[455:432]),
    .i_dval(s_valid_in[90]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[94:90]),
    .o_dval(s_valid_l[45])
  );
  num_of_ones_7 \deep_l:47.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[431:408]),
    .i_dval(s_valid_in[92]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[89:85]),
    .o_dval(s_valid_l[46])
  );
  num_of_ones_7 \deep_l:48.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[407:384]),
    .i_dval(s_valid_in[94]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[84:80]),
    .o_dval(s_valid_l[47])
  );
  num_of_ones_7 \deep_l:49.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[383:360]),
    .i_dval(s_valid_in[96]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[79:75]),
    .o_dval(s_valid_l[48])
  );
  num_of_ones_7 \deep_l:5.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1439:1416]),
    .i_dval(s_valid_in[8]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[299:295]),
    .o_dval(s_valid_l[4])
  );
  num_of_ones_7 \deep_l:50.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[359:336]),
    .i_dval(s_valid_in[98]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[74:70]),
    .o_dval(s_valid_l[49])
  );
  num_of_ones_7 \deep_l:51.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[335:312]),
    .i_dval(s_valid_in[100]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[69:65]),
    .o_dval(s_valid_l[50])
  );
  num_of_ones_7 \deep_l:52.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[311:288]),
    .i_dval(s_valid_in[102]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[64:60]),
    .o_dval(s_valid_l[51])
  );
  num_of_ones_7 \deep_l:53.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[287:264]),
    .i_dval(s_valid_in[104]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[59:55]),
    .o_dval(s_valid_l[52])
  );
  num_of_ones_7 \deep_l:54.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[263:240]),
    .i_dval(s_valid_in[106]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[54:50]),
    .o_dval(s_valid_l[53])
  );
  num_of_ones_7 \deep_l:55.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[239:216]),
    .i_dval(s_valid_in[108]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[49:45]),
    .o_dval(s_valid_l[54])
  );
  num_of_ones_7 \deep_l:56.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[215:192]),
    .i_dval(s_valid_in[110]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[44:40]),
    .o_dval(s_valid_l[55])
  );
  num_of_ones_7 \deep_l:57.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[191:168]),
    .i_dval(s_valid_in[112]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[39:35]),
    .o_dval(s_valid_l[56])
  );
  num_of_ones_7 \deep_l:58.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[167:144]),
    .i_dval(s_valid_in[114]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[34:30]),
    .o_dval(s_valid_l[57])
  );
  num_of_ones_7 \deep_l:59.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[143:120]),
    .i_dval(s_valid_in[116]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[29:25]),
    .o_dval(s_valid_l[58])
  );
  num_of_ones_7 \deep_l:6.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1415:1392]),
    .i_dval(s_valid_in[10]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[294:290]),
    .o_dval(s_valid_l[5])
  );
  num_of_ones_7 \deep_l:60.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[119:96]),
    .i_dval(s_valid_in[118]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[24:20]),
    .o_dval(s_valid_l[59])
  );
  num_of_ones_7 \deep_l:61.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[95:72]),
    .i_dval(s_valid_in[120]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[19:15]),
    .o_dval(s_valid_l[60])
  );
  num_of_ones_7 \deep_l:62.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[71:48]),
    .i_dval(s_valid_in[122]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[14:10]),
    .o_dval(s_valid_l[61])
  );
  num_of_ones_7 \deep_l:63.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[47:24]),
    .i_dval(s_valid_in[124]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[9:5]),
    .o_dval(s_valid_l[62])
  );
  num_of_ones_7 \deep_l:64.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[23:0]),
    .i_dval(s_valid_in[126]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[4:0]),
    .o_dval(s_valid_l[63])
  );
  num_of_ones_7 \deep_l:7.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1391:1368]),
    .i_dval(s_valid_in[12]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[289:285]),
    .o_dval(s_valid_l[6])
  );
  num_of_ones_7 \deep_l:8.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1367:1344]),
    .i_dval(s_valid_in[14]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[284:280]),
    .o_dval(s_valid_l[7])
  );
  num_of_ones_7 \deep_l:9.sum0  (
    .i_clk(i_clk),
    .i_data(s_hamming_l[1343:1320]),
    .i_dval(s_valid_in[16]),
    .i_rst(i_rst),
    .o_data(s_phamming_l[279:275]),
    .o_dval(s_valid_l[8])
  );
  window_sum_13_450_7 \win_l:1.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[319:315]),
    .i_data_l(s_phamming_l[319:315]),
    .i_dval(s_valid_l[0]),
    .i_rst(i_rst),
    .o_data(s_sum_w[767:756]),
    .o_dval(s_valid_w[0])
  );
  window_sum_13_450_7 \win_l:10.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[274:270]),
    .i_data_l(s_phamming_l[274:270]),
    .i_dval(s_valid_l[9]),
    .i_rst(i_rst),
    .o_data(s_sum_w[659:648]),
    .o_dval(s_valid_w[9])
  );
  window_sum_13_450_7 \win_l:11.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[269:265]),
    .i_data_l(s_phamming_l[269:265]),
    .i_dval(s_valid_l[10]),
    .i_rst(i_rst),
    .o_data(s_sum_w[647:636]),
    .o_dval(s_valid_w[10])
  );
  window_sum_13_450_7 \win_l:12.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[264:260]),
    .i_data_l(s_phamming_l[264:260]),
    .i_dval(s_valid_l[11]),
    .i_rst(i_rst),
    .o_data(s_sum_w[635:624]),
    .o_dval(s_valid_w[11])
  );
  window_sum_13_450_7 \win_l:13.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[259:255]),
    .i_data_l(s_phamming_l[259:255]),
    .i_dval(s_valid_l[12]),
    .i_rst(i_rst),
    .o_data(s_sum_w[623:612]),
    .o_dval(s_valid_w[12])
  );
  window_sum_13_450_7 \win_l:14.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[254:250]),
    .i_data_l(s_phamming_l[254:250]),
    .i_dval(s_valid_l[13]),
    .i_rst(i_rst),
    .o_data(s_sum_w[611:600]),
    .o_dval(s_valid_w[13])
  );
  window_sum_13_450_7 \win_l:15.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[249:245]),
    .i_data_l(s_phamming_l[249:245]),
    .i_dval(s_valid_l[14]),
    .i_rst(i_rst),
    .o_data(s_sum_w[599:588]),
    .o_dval(s_valid_w[14])
  );
  window_sum_13_450_7 \win_l:16.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[244:240]),
    .i_data_l(s_phamming_l[244:240]),
    .i_dval(s_valid_l[15]),
    .i_rst(i_rst),
    .o_data(s_sum_w[587:576]),
    .o_dval(s_valid_w[15])
  );
  window_sum_13_450_7 \win_l:17.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[239:235]),
    .i_data_l(s_phamming_l[239:235]),
    .i_dval(s_valid_l[16]),
    .i_rst(i_rst),
    .o_data(s_sum_w[575:564]),
    .o_dval(s_valid_w[16])
  );
  window_sum_13_450_7 \win_l:18.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[234:230]),
    .i_data_l(s_phamming_l[234:230]),
    .i_dval(s_valid_l[17]),
    .i_rst(i_rst),
    .o_data(s_sum_w[563:552]),
    .o_dval(s_valid_w[17])
  );
  window_sum_13_450_7 \win_l:19.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[229:225]),
    .i_data_l(s_phamming_l[229:225]),
    .i_dval(s_valid_l[18]),
    .i_rst(i_rst),
    .o_data(s_sum_w[551:540]),
    .o_dval(s_valid_w[18])
  );
  window_sum_13_450_7 \win_l:2.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[314:310]),
    .i_data_l(s_phamming_l[314:310]),
    .i_dval(s_valid_l[1]),
    .i_rst(i_rst),
    .o_data(s_sum_w[755:744]),
    .o_dval(s_valid_w[1])
  );
  window_sum_13_450_7 \win_l:20.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[224:220]),
    .i_data_l(s_phamming_l[224:220]),
    .i_dval(s_valid_l[19]),
    .i_rst(i_rst),
    .o_data(s_sum_w[539:528]),
    .o_dval(s_valid_w[19])
  );
  window_sum_13_450_7 \win_l:21.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[219:215]),
    .i_data_l(s_phamming_l[219:215]),
    .i_dval(s_valid_l[20]),
    .i_rst(i_rst),
    .o_data(s_sum_w[527:516]),
    .o_dval(s_valid_w[20])
  );
  window_sum_13_450_7 \win_l:22.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[214:210]),
    .i_data_l(s_phamming_l[214:210]),
    .i_dval(s_valid_l[21]),
    .i_rst(i_rst),
    .o_data(s_sum_w[515:504]),
    .o_dval(s_valid_w[21])
  );
  window_sum_13_450_7 \win_l:23.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[209:205]),
    .i_data_l(s_phamming_l[209:205]),
    .i_dval(s_valid_l[22]),
    .i_rst(i_rst),
    .o_data(s_sum_w[503:492]),
    .o_dval(s_valid_w[22])
  );
  window_sum_13_450_7 \win_l:24.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[204:200]),
    .i_data_l(s_phamming_l[204:200]),
    .i_dval(s_valid_l[23]),
    .i_rst(i_rst),
    .o_data(s_sum_w[491:480]),
    .o_dval(s_valid_w[23])
  );
  window_sum_13_450_7 \win_l:25.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[199:195]),
    .i_data_l(s_phamming_l[199:195]),
    .i_dval(s_valid_l[24]),
    .i_rst(i_rst),
    .o_data(s_sum_w[479:468]),
    .o_dval(s_valid_w[24])
  );
  window_sum_13_450_7 \win_l:26.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[194:190]),
    .i_data_l(s_phamming_l[194:190]),
    .i_dval(s_valid_l[25]),
    .i_rst(i_rst),
    .o_data(s_sum_w[467:456]),
    .o_dval(s_valid_w[25])
  );
  window_sum_13_450_7 \win_l:27.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[189:185]),
    .i_data_l(s_phamming_l[189:185]),
    .i_dval(s_valid_l[26]),
    .i_rst(i_rst),
    .o_data(s_sum_w[455:444]),
    .o_dval(s_valid_w[26])
  );
  window_sum_13_450_7 \win_l:28.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[184:180]),
    .i_data_l(s_phamming_l[184:180]),
    .i_dval(s_valid_l[27]),
    .i_rst(i_rst),
    .o_data(s_sum_w[443:432]),
    .o_dval(s_valid_w[27])
  );
  window_sum_13_450_7 \win_l:29.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[179:175]),
    .i_data_l(s_phamming_l[179:175]),
    .i_dval(s_valid_l[28]),
    .i_rst(i_rst),
    .o_data(s_sum_w[431:420]),
    .o_dval(s_valid_w[28])
  );
  window_sum_13_450_7 \win_l:3.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[309:305]),
    .i_data_l(s_phamming_l[309:305]),
    .i_dval(s_valid_l[2]),
    .i_rst(i_rst),
    .o_data(s_sum_w[743:732]),
    .o_dval(s_valid_w[2])
  );
  window_sum_13_450_7 \win_l:30.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[174:170]),
    .i_data_l(s_phamming_l[174:170]),
    .i_dval(s_valid_l[29]),
    .i_rst(i_rst),
    .o_data(s_sum_w[419:408]),
    .o_dval(s_valid_w[29])
  );
  window_sum_13_450_7 \win_l:31.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[169:165]),
    .i_data_l(s_phamming_l[169:165]),
    .i_dval(s_valid_l[30]),
    .i_rst(i_rst),
    .o_data(s_sum_w[407:396]),
    .o_dval(s_valid_w[30])
  );
  window_sum_13_450_7 \win_l:32.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[164:160]),
    .i_data_l(s_phamming_l[164:160]),
    .i_dval(s_valid_l[31]),
    .i_rst(i_rst),
    .o_data(s_sum_w[395:384]),
    .o_dval(s_valid_w[31])
  );
  window_sum_13_450_7 \win_l:33.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[159:155]),
    .i_data_l(s_phamming_l[159:155]),
    .i_dval(s_valid_l[32]),
    .i_rst(i_rst),
    .o_data(s_sum_w[383:372]),
    .o_dval(s_valid_w[32])
  );
  window_sum_13_450_7 \win_l:34.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[154:150]),
    .i_data_l(s_phamming_l[154:150]),
    .i_dval(s_valid_l[33]),
    .i_rst(i_rst),
    .o_data(s_sum_w[371:360]),
    .o_dval(s_valid_w[33])
  );
  window_sum_13_450_7 \win_l:35.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[149:145]),
    .i_data_l(s_phamming_l[149:145]),
    .i_dval(s_valid_l[34]),
    .i_rst(i_rst),
    .o_data(s_sum_w[359:348]),
    .o_dval(s_valid_w[34])
  );
  window_sum_13_450_7 \win_l:36.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[144:140]),
    .i_data_l(s_phamming_l[144:140]),
    .i_dval(s_valid_l[35]),
    .i_rst(i_rst),
    .o_data(s_sum_w[347:336]),
    .o_dval(s_valid_w[35])
  );
  window_sum_13_450_7 \win_l:37.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[139:135]),
    .i_data_l(s_phamming_l[139:135]),
    .i_dval(s_valid_l[36]),
    .i_rst(i_rst),
    .o_data(s_sum_w[335:324]),
    .o_dval(s_valid_w[36])
  );
  window_sum_13_450_7 \win_l:38.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[134:130]),
    .i_data_l(s_phamming_l[134:130]),
    .i_dval(s_valid_l[37]),
    .i_rst(i_rst),
    .o_data(s_sum_w[323:312]),
    .o_dval(s_valid_w[37])
  );
  window_sum_13_450_7 \win_l:39.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[129:125]),
    .i_data_l(s_phamming_l[129:125]),
    .i_dval(s_valid_l[38]),
    .i_rst(i_rst),
    .o_data(s_sum_w[311:300]),
    .o_dval(s_valid_w[38])
  );
  window_sum_13_450_7 \win_l:4.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[304:300]),
    .i_data_l(s_phamming_l[304:300]),
    .i_dval(s_valid_l[3]),
    .i_rst(i_rst),
    .o_data(s_sum_w[731:720]),
    .o_dval(s_valid_w[3])
  );
  window_sum_13_450_7 \win_l:40.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[124:120]),
    .i_data_l(s_phamming_l[124:120]),
    .i_dval(s_valid_l[39]),
    .i_rst(i_rst),
    .o_data(s_sum_w[299:288]),
    .o_dval(s_valid_w[39])
  );
  window_sum_13_450_7 \win_l:41.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[119:115]),
    .i_data_l(s_phamming_l[119:115]),
    .i_dval(s_valid_l[40]),
    .i_rst(i_rst),
    .o_data(s_sum_w[287:276]),
    .o_dval(s_valid_w[40])
  );
  window_sum_13_450_7 \win_l:42.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[114:110]),
    .i_data_l(s_phamming_l[114:110]),
    .i_dval(s_valid_l[41]),
    .i_rst(i_rst),
    .o_data(s_sum_w[275:264]),
    .o_dval(s_valid_w[41])
  );
  window_sum_13_450_7 \win_l:43.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[109:105]),
    .i_data_l(s_phamming_l[109:105]),
    .i_dval(s_valid_l[42]),
    .i_rst(i_rst),
    .o_data(s_sum_w[263:252]),
    .o_dval(s_valid_w[42])
  );
  window_sum_13_450_7 \win_l:44.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[104:100]),
    .i_data_l(s_phamming_l[104:100]),
    .i_dval(s_valid_l[43]),
    .i_rst(i_rst),
    .o_data(s_sum_w[251:240]),
    .o_dval(s_valid_w[43])
  );
  window_sum_13_450_7 \win_l:45.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[99:95]),
    .i_data_l(s_phamming_l[99:95]),
    .i_dval(s_valid_l[44]),
    .i_rst(i_rst),
    .o_data(s_sum_w[239:228]),
    .o_dval(s_valid_w[44])
  );
  window_sum_13_450_7 \win_l:46.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[94:90]),
    .i_data_l(s_phamming_l[94:90]),
    .i_dval(s_valid_l[45]),
    .i_rst(i_rst),
    .o_data(s_sum_w[227:216]),
    .o_dval(s_valid_w[45])
  );
  window_sum_13_450_7 \win_l:47.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[89:85]),
    .i_data_l(s_phamming_l[89:85]),
    .i_dval(s_valid_l[46]),
    .i_rst(i_rst),
    .o_data(s_sum_w[215:204]),
    .o_dval(s_valid_w[46])
  );
  window_sum_13_450_7 \win_l:48.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[84:80]),
    .i_data_l(s_phamming_l[84:80]),
    .i_dval(s_valid_l[47]),
    .i_rst(i_rst),
    .o_data(s_sum_w[203:192]),
    .o_dval(s_valid_w[47])
  );
  window_sum_13_450_7 \win_l:49.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[79:75]),
    .i_data_l(s_phamming_l[79:75]),
    .i_dval(s_valid_l[48]),
    .i_rst(i_rst),
    .o_data(s_sum_w[191:180]),
    .o_dval(s_valid_w[48])
  );
  window_sum_13_450_7 \win_l:5.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[299:295]),
    .i_data_l(s_phamming_l[299:295]),
    .i_dval(s_valid_l[4]),
    .i_rst(i_rst),
    .o_data(s_sum_w[719:708]),
    .o_dval(s_valid_w[4])
  );
  window_sum_13_450_7 \win_l:50.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[74:70]),
    .i_data_l(s_phamming_l[74:70]),
    .i_dval(s_valid_l[49]),
    .i_rst(i_rst),
    .o_data(s_sum_w[179:168]),
    .o_dval(s_valid_w[49])
  );
  window_sum_13_450_7 \win_l:51.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[69:65]),
    .i_data_l(s_phamming_l[69:65]),
    .i_dval(s_valid_l[50]),
    .i_rst(i_rst),
    .o_data(s_sum_w[167:156]),
    .o_dval(s_valid_w[50])
  );
  window_sum_13_450_7 \win_l:52.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[64:60]),
    .i_data_l(s_phamming_l[64:60]),
    .i_dval(s_valid_l[51]),
    .i_rst(i_rst),
    .o_data(s_sum_w[155:144]),
    .o_dval(s_valid_w[51])
  );
  window_sum_13_450_7 \win_l:53.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[59:55]),
    .i_data_l(s_phamming_l[59:55]),
    .i_dval(s_valid_l[52]),
    .i_rst(i_rst),
    .o_data(s_sum_w[143:132]),
    .o_dval(s_valid_w[52])
  );
  window_sum_13_450_7 \win_l:54.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[54:50]),
    .i_data_l(s_phamming_l[54:50]),
    .i_dval(s_valid_l[53]),
    .i_rst(i_rst),
    .o_data(s_sum_w[131:120]),
    .o_dval(s_valid_w[53])
  );
  window_sum_13_450_7 \win_l:55.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[49:45]),
    .i_data_l(s_phamming_l[49:45]),
    .i_dval(s_valid_l[54]),
    .i_rst(i_rst),
    .o_data(s_sum_w[119:108]),
    .o_dval(s_valid_w[54])
  );
  window_sum_13_450_7 \win_l:56.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[44:40]),
    .i_data_l(s_phamming_l[44:40]),
    .i_dval(s_valid_l[55]),
    .i_rst(i_rst),
    .o_data(s_sum_w[107:96]),
    .o_dval(s_valid_w[55])
  );
  window_sum_13_450_7 \win_l:57.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[39:35]),
    .i_data_l(s_phamming_l[39:35]),
    .i_dval(s_valid_l[56]),
    .i_rst(i_rst),
    .o_data(s_sum_w[95:84]),
    .o_dval(s_valid_w[56])
  );
  window_sum_13_450_7 \win_l:58.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[34:30]),
    .i_data_l(s_phamming_l[34:30]),
    .i_dval(s_valid_l[57]),
    .i_rst(i_rst),
    .o_data(s_sum_w[83:72]),
    .o_dval(s_valid_w[57])
  );
  window_sum_13_450_7 \win_l:59.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[29:25]),
    .i_data_l(s_phamming_l[29:25]),
    .i_dval(s_valid_l[58]),
    .i_rst(i_rst),
    .o_data(s_sum_w[71:60]),
    .o_dval(s_valid_w[58])
  );
  window_sum_13_450_7 \win_l:6.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[294:290]),
    .i_data_l(s_phamming_l[294:290]),
    .i_dval(s_valid_l[5]),
    .i_rst(i_rst),
    .o_data(s_sum_w[707:696]),
    .o_dval(s_valid_w[5])
  );
  window_sum_13_450_7 \win_l:60.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[24:20]),
    .i_data_l(s_phamming_l[24:20]),
    .i_dval(s_valid_l[59]),
    .i_rst(i_rst),
    .o_data(s_sum_w[59:48]),
    .o_dval(s_valid_w[59])
  );
  window_sum_13_450_7 \win_l:61.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[19:15]),
    .i_data_l(s_phamming_l[19:15]),
    .i_dval(s_valid_l[60]),
    .i_rst(i_rst),
    .o_data(s_sum_w[47:36]),
    .o_dval(s_valid_w[60])
  );
  window_sum_13_450_7 \win_l:62.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[14:10]),
    .i_data_l(s_phamming_l[14:10]),
    .i_dval(s_valid_l[61]),
    .i_rst(i_rst),
    .o_data(s_sum_w[35:24]),
    .o_dval(s_valid_w[61])
  );
  window_sum_13_450_7 \win_l:63.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[9:5]),
    .i_data_l(s_phamming_l[9:5]),
    .i_dval(s_valid_l[62]),
    .i_rst(i_rst),
    .o_data(s_sum_w[23:12]),
    .o_dval(s_valid_w[62])
  );
  window_sum_13_450_7 \win_l:64.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[4:0]),
    .i_data_l(s_phamming_l[4:0]),
    .i_dval(s_valid_l[63]),
    .i_rst(i_rst),
    .o_data(s_sum_w[11:0]),
    .o_dval(s_valid_w[63])
  );
  window_sum_13_450_7 \win_l:7.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[289:285]),
    .i_data_l(s_phamming_l[289:285]),
    .i_dval(s_valid_l[6]),
    .i_rst(i_rst),
    .o_data(s_sum_w[695:684]),
    .o_dval(s_valid_w[6])
  );
  window_sum_13_450_7 \win_l:8.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[284:280]),
    .i_data_l(s_phamming_l[284:280]),
    .i_dval(s_valid_l[7]),
    .i_rst(i_rst),
    .o_data(s_sum_w[683:672]),
    .o_dval(s_valid_w[7])
  );
  window_sum_13_450_7 \win_l:9.suma  (
    .i_clk(i_clk),
    .i_data_h(s_phamming_h[279:275]),
    .i_data_l(s_phamming_l[279:275]),
    .i_dval(s_valid_l[8]),
    .i_rst(i_rst),
    .o_data(s_sum_w[671:660]),
    .o_dval(s_valid_w[8])
  );
  assign cmpcosto[767:756] = 12'hzzz;
  assign cmpcostol[767:756] = 12'hzzz;
  assign cmpdispa[447:441] = 7'hzz;
  assign cmpdispal[447:441] = 7'hzz;
endmodule

module window_sum_13_450_7(i_clk, i_rst, i_data_l, i_data_h, i_dval, o_dval, o_data);
  wire [31:0] ghdl_gen_00_;
  wire [31:0] ghdl_gen_01_;
  wire [31:0] ghdl_gen_02_;
  wire ghdl_gen_03_;
  (* unused_bits = "13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] ghdl_gen_04_;
  wire ghdl_gen_05_;
  wire ghdl_gen_06_;
  wire ghdl_gen_07_;
  wire [12:0] ghdl_gen_08_;
  wire [4049:0] ghdl_gen_09_;
  wire [116:0] ghdl_gen_10_;
  wire [31:0] ghdl_gen_11_;
  wire [31:0] ghdl_gen_12_;
  wire [31:0] ghdl_gen_13_;
  wire [31:0] ghdl_gen_14_;
  wire [31:0] ghdl_gen_15_;
  wire [31:0] ghdl_gen_16_;
  reg [12:0] \13530.counter  = 13'h0000;
  input i_clk;
  wire i_clk;
  input [4:0] i_data_h;
  wire [4:0] i_data_h;
  input [4:0] i_data_l;
  wire [4:0] i_data_l;
  input i_dval;
  wire i_dval;
  input i_rst;
  wire i_rst;
  output [11:0] o_data;
  wire [11:0] o_data;
  output o_dval;
  reg o_dval;
  reg [4049:0] s_col_line;
  (* unused_bits = "5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  reg [31:0] s_input_col;
  (* unused_bits = "5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  reg [31:0] s_input_col_w;
  reg [116:0] s_row_win;
  (* unused_bits = "9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  reg [31:0] s_tab_1;
  (* unused_bits = "9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  reg [31:0] s_tab_2;
  (* unused_bits = "10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  reg [31:0] s_tab_3;
  (* unused_bits = "13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  reg [31:0] s_tab_4;
  wire [31:0] s_tmp_add_1;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_tab_3 <= 32'd0;
    else if (i_dval) s_tab_3 <= ghdl_gen_15_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_tab_4 <= 32'd0;
    else if (i_dval) s_tab_4 <= ghdl_gen_16_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) \13530.counter  <= 13'h0000;
    else if (ghdl_gen_07_) \13530.counter  <= ghdl_gen_08_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_col_line <= 4050'h
    else if (i_dval) s_col_line <= ghdl_gen_09_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_row_win <= 117'h000000000000000000000000000000;
    else if (i_dval) s_row_win <= ghdl_gen_10_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_input_col <= 32'd0;
    else if (i_dval) s_input_col <= ghdl_gen_11_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_input_col_w <= 32'd0;
    else if (i_dval) s_input_col_w <= ghdl_gen_12_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_tab_1 <= 32'd0;
    else if (i_dval) s_tab_1 <= ghdl_gen_13_;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) s_tab_2 <= 32'd0;
    else if (i_dval) s_tab_2 <= ghdl_gen_14_;
  assign ghdl_gen_00_ = { 27'h0000000, s_input_col[4:0] } - { 27'h0000000, s_input_col_w[4:0] };
  assign s_tmp_add_1 = { 23'h000000, s_col_line[8:0] } + { s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8], s_tab_1[8:0] };
  assign ghdl_gen_01_ = { 23'h000000, s_tab_2[8:0] } - { 23'h000000, s_row_win[8:0] };
  assign ghdl_gen_02_ = { s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9], s_tab_3[9:0] } + { 19'h00000, s_tab_4[12:0] };
  assign ghdl_gen_03_ = $signed({ 19'h00000, \13530.counter  }) < $signed(32'd2710);
  assign ghdl_gen_04_ = { 19'h00000, \13530.counter  } + 32'd1;
  assign ghdl_gen_05_ = ghdl_gen_03_ ? 1'h0 : 1'h1;
  assign ghdl_gen_06_ = i_dval ? ghdl_gen_05_ : 1'h0;
  assign ghdl_gen_07_ = i_dval & ghdl_gen_03_;
  assign ghdl_gen_08_ = ghdl_gen_07_ ? ghdl_gen_04_[12:0] : 13'hxxxx;
  assign ghdl_gen_09_ = i_dval ? { s_tmp_add_1[8:0], s_col_line[4049:9] } : 4050'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_10_ = i_dval ? { s_tab_2[8:0], s_row_win[116:9] } : 117'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign ghdl_gen_11_ = i_dval ? { 27'h0000000, i_data_l } : 32'hxxxxxxxx;
  assign ghdl_gen_12_ = i_dval ? { 27'h0000000, i_data_h } : 32'hxxxxxxxx;
  assign ghdl_gen_13_ = i_dval ? ghdl_gen_00_ : 32'hxxxxxxxx;
  assign ghdl_gen_14_ = i_dval ? s_tmp_add_1 : 32'hxxxxxxxx;
  assign ghdl_gen_15_ = i_dval ? ghdl_gen_01_ : 32'hxxxxxxxx;
  assign ghdl_gen_16_ = i_dval ? ghdl_gen_02_ : 32'hxxxxxxxx;
  always @(posedge i_clk, negedge i_rst)
    if (!i_rst) o_dval <= 1'h0;
    else o_dval <= ghdl_gen_06_;
  assign o_data = s_tab_4[11:0];
endmodule
